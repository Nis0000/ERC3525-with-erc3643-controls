{
	"id": "b52c0a6b7804b059e9e84c5a53ac7fd0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts t-rex/registry/implementation/IdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\nimport \"../interface/IClaimTopicsRegistry.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../interface/IIdentityRegistry.sol\";\nimport \"../../roles/AgentRoleUpgradeable.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\nimport \"../storage/IRStorage.sol\";\n\n\ncontract IdentityRegistry is IIdentityRegistry, AgentRoleUpgradeable, IRStorage {\n\n    /**\n     *  @dev the constructor initiates the Identity Registry smart contract\n     *  @param _trustedIssuersRegistry the trusted issuers registry linked to the Identity Registry\n     *  @param _claimTopicsRegistry the claim topics registry linked to the Identity Registry\n     *  @param _identityStorage the identity registry storage linked to the Identity Registry\n     *  emits a `ClaimTopicsRegistrySet` event\n     *  emits a `TrustedIssuersRegistrySet` event\n     *  emits an `IdentityStorageSet` event\n     */\n    function init(\n        address _trustedIssuersRegistry,\n        address _claimTopicsRegistry,\n        address _identityStorage\n    ) external initializer {\n        require(\n            _trustedIssuersRegistry != address(0)\n            && _claimTopicsRegistry != address(0)\n            && _identityStorage != address(0)\n        , \"invalid argument - zero address\");\n        _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry);\n        _tokenIssuersRegistry = ITrustedIssuersRegistry(_trustedIssuersRegistry);\n        _tokenIdentityStorage = IIdentityRegistryStorage(_identityStorage);\n        emit ClaimTopicsRegistrySet(_claimTopicsRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n        emit IdentityStorageSet(_identityStorage);\n        __Ownable_init(msg.sender);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-batchRegisterIdentity}.\n     */\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external override {\n        for (uint256 i = 0; i < _userAddresses.length; i++) {\n            registerIdentity(_userAddresses[i], _identities[i], _countries[i]);\n        }\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-updateIdentity}.\n     */\n    function updateIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {\n        IIdentity oldIdentity = identity(_userAddress);\n        _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity);\n        emit IdentityUpdated(oldIdentity, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-updateCountry}.\n     */\n    function updateCountry(address _userAddress, uint16 _country) external override onlyAgent {\n        _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress, _country);\n        emit CountryUpdated(_userAddress, _country);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-deleteIdentity}.\n     */\n    function deleteIdentity(address _userAddress) external override onlyAgent {\n        IIdentity oldIdentity = identity(_userAddress);\n        _tokenIdentityStorage.removeIdentityFromStorage(_userAddress);\n        emit IdentityRemoved(_userAddress, oldIdentity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setIdentityRegistryStorage}.\n     */\n    function setIdentityRegistryStorage(address _identityRegistryStorage) external override onlyOwner {\n        _tokenIdentityStorage = IIdentityRegistryStorage(_identityRegistryStorage);\n        emit IdentityStorageSet(_identityRegistryStorage);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setClaimTopicsRegistry}.\n     */\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external override onlyOwner {\n        _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry);\n        emit ClaimTopicsRegistrySet(_claimTopicsRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setTrustedIssuersRegistry}.\n     */\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external override onlyOwner {\n        _tokenIssuersRegistry = ITrustedIssuersRegistry(_trustedIssuersRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-isVerified}.\n     */\n    // solhint-disable-next-line code-complexity\n    function isVerified(address _userAddress) external view override returns (bool) {\n        if (address(identity(_userAddress)) == address(0)) {return false;}\n        uint256[] memory requiredClaimTopics = _tokenTopicsRegistry.getClaimTopics();\n        if (requiredClaimTopics.length == 0) {\n            return true;\n        }\n\n        uint256 foundClaimTopic;\n        uint256 scheme;\n        address issuer;\n        bytes memory sig;\n        bytes memory data;\n        uint256 claimTopic;\n        for (claimTopic = 0; claimTopic < requiredClaimTopics.length; claimTopic++) {\n            IClaimIssuer[] memory trustedIssuers =\n            _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic]);\n\n            if (trustedIssuers.length == 0) {return false;}\n\n            bytes32[] memory claimIds = new bytes32[](trustedIssuers.length);\n            for (uint256 i = 0; i < trustedIssuers.length; i++) {\n                claimIds[i] = keccak256(abi.encode(trustedIssuers[i], requiredClaimTopics[claimTopic]));\n            }\n\n            for (uint256 j = 0; j < claimIds.length; j++) {\n                (foundClaimTopic, scheme, issuer, sig, data, ) = identity(_userAddress).getClaim(claimIds[j]);\n\n                if (foundClaimTopic == requiredClaimTopics[claimTopic]) {\n                    try IClaimIssuer(issuer).isClaimValid(identity(_userAddress), requiredClaimTopics[claimTopic], sig,\n                        data) returns(bool _validity) {\n\n                        if (\n                            _validity\n                        ) {\n                            j = claimIds.length;\n                        }\n                        if (!_validity && j == (claimIds.length - 1)) {\n                            return false;\n                        }\n                    } catch {\n                        if (j == (claimIds.length - 1)) {\n                            return false;\n                        }\n                    }\n                } else if (j == (claimIds.length - 1)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-investorCountry}.\n     */\n    function investorCountry(address _userAddress) external view override returns (uint16) {\n        return _tokenIdentityStorage.storedInvestorCountry(_userAddress);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-issuersRegistry}.\n     */\n    function issuersRegistry() external view override returns (ITrustedIssuersRegistry) {\n        return _tokenIssuersRegistry;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-topicsRegistry}.\n     */\n    function topicsRegistry() external view override returns (IClaimTopicsRegistry) {\n        return _tokenTopicsRegistry;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-identityStorage}.\n     */\n    function identityStorage() external view override returns (IIdentityRegistryStorage) {\n        return _tokenIdentityStorage;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-contains}.\n     */\n    function contains(address _userAddress) external view override returns (bool) {\n        if (address(identity(_userAddress)) == address(0)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-registerIdentity}.\n     */\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) public override onlyAgent {\n        _tokenIdentityStorage.addIdentityToStorage(_userAddress, _identity, _country);\n        emit IdentityRegistered(_userAddress, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-identity}.\n     */\n    function identity(address _userAddress) public view override returns (IIdentity) {\n        return _tokenIdentityStorage.storedIdentity(_userAddress);\n    }\n}\n"
			},
			"contracts t-rex/registry/storage/IRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"../interface/IClaimTopicsRegistry.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\n\ncontract IRStorage {\n    /// @dev Address of the ClaimTopicsRegistry Contract\n    IClaimTopicsRegistry internal _tokenTopicsRegistry;\n\n    /// @dev Address of the TrustedIssuersRegistry Contract\n    ITrustedIssuersRegistry internal _tokenIssuersRegistry;\n\n    /// @dev Address of the IdentityRegistryStorage Contract\n    IIdentityRegistryStorage internal _tokenIdentityStorage;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}"
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n\n    /// events\n\n    /**\n     *  this event is emitted when an Identity is registered into the storage contract.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityStored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the storage contract.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityUnstored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityModified(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryModified(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  this event is emitted when an Identity Registry is bound to the storage contract\n     *  the event is emitted by the 'addIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry added\n     */\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    /**\n     *  this event is emitted when an Identity Registry is unbound from the storage contract\n     *  the event is emitted by the 'removeIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry removed\n     */\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    /**\n     *  @dev adds an identity contract corresponding to a user address in the storage.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityStored` event\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the storage.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityUnstored` event\n     */\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryModified` event\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityModified` event\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n     *  cannot bind more than 300 IR to 1 IRS\n     *  @param _identityRegistry The identity registry address to add.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n     *  @param _identityRegistry The identity registry address to remove.\n     */\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev Returns the identity registries linked to the storage contract\n     */\n    function linkedIdentityRegistries() external view returns (address[] memory);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedIdentity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedInvestorCountry(address _userAddress) external view returns (uint16);\n}\n"
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\nimport \"./Roles.sol\";\n\ncontract AgentRoleUpgradeable is OwnableUpgradeable {\n    using Roles for Roles.Role;\n\n    Roles.Role private _agents;\n\n    event AgentAdded(address indexed _agent);\n    event AgentRemoved(address indexed _agent);\n\n    modifier onlyAgent() {\n        require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\");\n        _;\n    }\n\n    function addAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.add(_agent);\n        emit AgentAdded(_agent);\n    }\n\n    function removeAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.remove(_agent);\n        emit AgentRemoved(_agent);\n    }\n\n    function isAgent(address _agent) public view returns (bool) {\n        return _agents.has(_agent);\n    }\n}\n"
			},
			"contracts t-rex/registry/interface/IIdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"./ITrustedIssuersRegistry.sol\";\nimport \"./IClaimTopicsRegistry.sol\";\nimport \"./IIdentityRegistryStorage.sol\";\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistry {\n    /**\n     *  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\n     */\n    event ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\n\n    /**\n     *  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `identityStorage` is the address of the Identity Registry Storage contract\n     */\n    event IdentityStorageSet(address indexed identityStorage);\n\n    /**\n     *  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\n     */\n    event TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\n\n    /**\n     *  this event is emitted when an Identity is registered into the Identity Registry.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRegistered(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the Identity Registry.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRemoved(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityUpdated(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryUpdated(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  @dev Register an identity contract corresponding to a user address.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityRegistered` event\n     */\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the identity registry.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityRemoved` event\n     */\n    function deleteIdentity(address _userAddress) external;\n\n    /**\n     *  @dev Replace the actual identityRegistryStorage contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _identityRegistryStorage The address of the new Identity Registry Storage\n     *  emits `IdentityStorageSet` event\n     */\n    function setIdentityRegistryStorage(address _identityRegistryStorage) external;\n\n    /**\n     *  @dev Replace the actual claimTopicsRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _claimTopicsRegistry The address of the new claim Topics Registry\n     *  emits `ClaimTopicsRegistrySet` event\n     */\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external;\n\n    /**\n     *  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n     *  emits `TrustedIssuersRegistrySet` event\n     */\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryUpdated` event\n     */\n    function updateCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityUpdated` event\n     */\n    function updateIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @dev function allowing to register identities in batch\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  Requires that none of the users has an identity contract already registered.\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses of the users\n     *  @param _identities The addresses of the corresponding identity contracts\n     *  @param _countries The countries of the corresponding investors\n     *  emits _userAddresses.length `IdentityRegistered` events\n     */\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external;\n\n    /**\n     *  @dev This functions checks whether a wallet has its Identity registered or not\n     *  in the Identity Registry.\n     *  @param _userAddress The address of the user to be checked.\n     *  @return 'True' if the address is contained in the Identity Registry, 'false' if not.\n     */\n    function contains(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev This functions checks whether an identity contract\n     *  corresponding to the provided user address has the required claims or not based\n     *  on the data fetched from trusted issuers registry and from the claim topics registry\n     *  @param _userAddress The address of the user to be verified.\n     *  @return 'True' if the address is verified, 'false' if not.\n     */\n    function isVerified(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function identity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function investorCountry(address _userAddress) external view returns (uint16);\n\n    /**\n     *  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\n     */\n    function identityStorage() external view returns (IIdentityRegistryStorage);\n\n    /**\n     *  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\n     */\n    function issuersRegistry() external view returns (ITrustedIssuersRegistry);\n\n    /**\n     *  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\n     */\n    function topicsRegistry() external view returns (IClaimTopicsRegistry);\n}\n"
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    /**\n     *  this event is emitted when a trusted issuer is added in the registry.\n     *  the event is emitted by the addTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  this event is emitted when a trusted issuer is removed from the registry.\n     *  the event is emitted by the removeTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     */\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Trusted issuers\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerAdded` event\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _trustedIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerRemoved` event\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _trustedIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Function for getting all the trusted claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the trusted issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is trusted\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is trusted, false otherwise.\n     */\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of trusted claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n     *  @param _trustedIssuer the trusted issuer concerned.\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the trusted claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is trusted for this claim topic.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\n}\n"
			},
			"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    /**\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n     *  the event is emitted by the 'addClaimTopic' function\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\n     */\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    /**\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n     *  the event is emitted by the 'removeClaimTopic' function\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\n     */\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    /**\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n     * Only owner can call.\n     * emits `ClaimTopicAdded` event\n     * cannot add more than 15 topics for 1 token as adding more could create gas issues\n     * @param _claimTopic The claim topic index\n     */\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n     *  Only owner can call.\n     *  emits `ClaimTopicRemoved` event\n     *  @param _claimTopic The claim topic index\n     */\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Get the trusted claim topics for the security token\n     *  @return Array of trusted claim topics\n     */\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"contracts t-rex/roles/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping(address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\n// import {Initializable} from \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is  ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.17;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.17;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/implementation/IdentityRegistry.sol": {
				"IdentityRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "addAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_identityStorage",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "isAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "removeAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"batchRegisterIdentity(address[],address[],uint16[])": {
								"details": "See {IIdentityRegistry-batchRegisterIdentity}."
							},
							"contains(address)": {
								"details": "See {IIdentityRegistry-contains}."
							},
							"deleteIdentity(address)": {
								"details": "See {IIdentityRegistry-deleteIdentity}."
							},
							"identity(address)": {
								"details": "See {IIdentityRegistry-identity}."
							},
							"identityStorage()": {
								"details": "See {IIdentityRegistry-identityStorage}."
							},
							"init(address,address,address)": {
								"details": "the constructor initiates the Identity Registry smart contract",
								"params": {
									"_claimTopicsRegistry": "the claim topics registry linked to the Identity Registry",
									"_identityStorage": "the identity registry storage linked to the Identity Registry  emits a `ClaimTopicsRegistrySet` event  emits a `TrustedIssuersRegistrySet` event  emits an `IdentityStorageSet` event",
									"_trustedIssuersRegistry": "the trusted issuers registry linked to the Identity Registry"
								}
							},
							"investorCountry(address)": {
								"details": "See {IIdentityRegistry-investorCountry}."
							},
							"isVerified(address)": {
								"details": "See {IIdentityRegistry-isVerified}."
							},
							"issuersRegistry()": {
								"details": "See {IIdentityRegistry-issuersRegistry}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"registerIdentity(address,address,uint16)": {
								"details": "See {IIdentityRegistry-registerIdentity}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setClaimTopicsRegistry(address)": {
								"details": "See {IIdentityRegistry-setClaimTopicsRegistry}."
							},
							"setIdentityRegistryStorage(address)": {
								"details": "See {IIdentityRegistry-setIdentityRegistryStorage}."
							},
							"setTrustedIssuersRegistry(address)": {
								"details": "See {IIdentityRegistry-setTrustedIssuersRegistry}."
							},
							"topicsRegistry()": {
								"details": "See {IIdentityRegistry-topicsRegistry}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCountry(address,uint16)": {
								"details": "See {IIdentityRegistry-updateCountry}."
							},
							"updateIdentity(address,address)": {
								"details": "See {IIdentityRegistry-updateIdentity}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":4256:12056  contract IdentityRegistry is IIdentityRegistry, AgentRoleUpgradeable, IRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":4256:12056  contract IdentityRegistry is IIdentityRegistry, AgentRoleUpgradeable, IRStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84e79842\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb4f3fcb7\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb4f3fcb7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb9209e33\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe744d789\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf0eb5e54\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf11abfd8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x84e79842\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8e098ca1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x97a6278e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa8d29d1d\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x454a03e0\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x454a03e0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5dbe47e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x653dc9f1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x670af6a9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7e42683b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x184b9559\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ffbb064\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x26d941ae\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3b239a7f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3b3e12f4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":4864:5678  function init(... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1101:1115   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1094:1116   */\n      iszero\n        /* \"#utility.yul\":1076:1117   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1064:1066   */\n      0x20\n        /* \"#utility.yul\":1049:1067   */\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7195:7443  function setIdentityRegistryStorage(address _identityRegistryStorage) external override onlyOwner {... */\n    tag_5:\n      tag_28\n      tag_39\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6535:6768  function updateCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n    tag_6:\n      tag_28\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10857:10981  function topicsRegistry() external view override returns (IClaimTopicsRegistry) {... */\n    tag_7:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10954:10974  _tokenTopicsRegistry */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10857:10981  function topicsRegistry() external view override returns (IClaimTopicsRegistry) {... */\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1866   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1816:1867   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1804:1806   */\n      0x20\n        /* \"#utility.yul\":1789:1807   */\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10857:10981  function topicsRegistry() external view override returns (IClaimTopicsRegistry) {... */\n      tag_36\n        /* \"#utility.yul\":1641:1873   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11536:11830  function registerIdentity(... */\n    tag_8:\n      tag_28\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11256:11459  function contains(address _userAddress) external view override returns (bool) {... */\n    tag_9:\n      tag_32\n      tag_54\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5760:6097  function batchRegisterIdentity(... */\n    tag_10:\n      tag_28\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7526:7757  function setClaimTopicsRegistry(address _claimTopicsRegistry) external override onlyOwner {... */\n    tag_11:\n      tag_28\n      tag_62\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_28\n      tag_65\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10409:10577  function investorCountry(address _userAddress) external view override returns (uint16) {... */\n    tag_13:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":4082:4088   */\n      0xffff\n        /* \"#utility.yul\":4070:4089   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4052:4090   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10409:10577  function investorCountry(address _userAddress) external view override returns (uint16) {... */\n      tag_36\n        /* \"#utility.yul\":3908:4096   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_14:\n      tag_28\n      tag_72\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump(tag_45)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6172:6461  function updateIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n    tag_16:\n      tag_28\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_17:\n      tag_28\n      tag_83\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6843:7108  function deleteIdentity(address _userAddress) external override onlyAgent {... */\n    tag_18:\n      tag_28\n      tag_86\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10653:10782  function issuersRegistry() external view override returns (ITrustedIssuersRegistry) {... */\n    tag_19:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10754:10775  _tokenIssuersRegistry */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10653:10782  function issuersRegistry() external view override returns (ITrustedIssuersRegistry) {... */\n      jump(tag_45)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n    tag_20:\n      tag_32\n      tag_93\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7843:8093  function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external override onlyOwner {... */\n    tag_21:\n      tag_28\n      tag_97\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11899:12054  function identity(address _userAddress) public view override returns (IIdentity) {... */\n    tag_22:\n      tag_45\n      tag_100\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11057:11187  function identityStorage() external view override returns (IIdentityRegistryStorage) {... */\n    tag_23:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11159:11180  _tokenIdentityStorage */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11057:11187  function identityStorage() external view override returns (IIdentityRegistryStorage) {... */\n      jump(tag_45)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_28\n      tag_109\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":4864:5678  function init(... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_114\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5049:5086  _trustedIssuersRegistry != address(0) */\n      dup9\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5049:5136  _trustedIssuersRegistry != address(0)... */\n      tag_120\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5102:5136  _claimTopicsRegistry != address(0) */\n      dup8\n      and\n      iszero\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5049:5136  _trustedIssuersRegistry != address(0)... */\n    tag_120:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5049:5182  _trustedIssuersRegistry != address(0)... */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5152:5182  _identityStorage != address(0) */\n      dup7\n      and\n      iszero\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5049:5182  _trustedIssuersRegistry != address(0)... */\n    tag_121:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5028:5227  require(... */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5237:5257  _tokenTopicsRegistry */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5237:5302  _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5312:5333  _tokenIssuersRegistry */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5312:5384  _tokenIssuersRegistry = ITrustedIssuersRegistry(_trustedIssuersRegistry) */\n      dup1\n      sload\n      dup13\n      dup4\n      and\n      swap1\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5394:5415  _tokenIdentityStorage */\n      0x03\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5394:5460  _tokenIdentityStorage = IIdentityRegistryStorage(_identityStorage) */\n      dup1\n      sload\n      swap2\n      dup11\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5475:5519  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      mload(0x40)\n      0x7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5237:5257  _tokenTopicsRegistry */\n      0x00\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5475:5519  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5534:5584  TrustedIssuersRegistrySet(_trustedIssuersRegistry) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      swap1\n      0x1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5599:5635  IdentityStorageSet(_identityStorage) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      0x2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5645:5671  __Ownable_init(msg.sender) */\n      tag_125\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5660:5670  msg.sender */\n      caller\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5645:5659  __Ownable_init */\n      tag_126\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5645:5671  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":5938:5988   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":5926:5928   */\n      0x20\n        /* \"#utility.yul\":5911:5929   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":4864:5678  function init(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_35:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      tag_131\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      dup2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4792:4798  _agent */\n      dup4\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4791  _agents.has */\n      tag_132\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      jump\t// in\n    tag_131:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4773:4799  return _agents.has(_agent) */\n      swap3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7195:7443  function setIdentityRegistryStorage(address _identityRegistryStorage) external override onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7303:7324  _tokenIdentityStorage */\n      0x03\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7303:7377  _tokenIdentityStorage = IIdentityRegistryStorage(_identityRegistryStorage) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7392:7436  IdentityStorageSet(_identityRegistryStorage) */\n      mload(0x40)\n      0x2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7195:7443  function setIdentityRegistryStorage(address _identityRegistryStorage) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6535:6768  function updateCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n    tag_44:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_138\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_35\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_141\n      jump\t// in\n    tag_139:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6656  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6708  _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress, _country) */\n      mload(0x40)\n      shl(0xe0, 0x9f3418d5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6604:6636   */\n      dup5\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6708  _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress, _country) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6586:6637   */\n      mstore\n        /* \"#utility.yul\":6685:6691   */\n      0xffff\n        /* \"#utility.yul\":6673:6692   */\n      dup5\n      and\n        /* \"#utility.yul\":6653:6671   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6646:6693   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6656  _tokenIdentityStorage */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6684  _tokenIdentityStorage.modifyStoredInvestorCountry */\n      0x9f3418d5\n      swap1\n        /* \"#utility.yul\":6559:6577   */\n      0x44\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6635:6708  _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress, _country) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6723:6761  CountryUpdated(_userAddress, _country) */\n      mload(0x40)\n      0xffff\n      dup5\n      and\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      pop\n      0x04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6535:6768  function updateCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11536:11830  function registerIdentity(... */\n    tag_52:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_150\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_35\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_141\n      jump\t// in\n    tag_151:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11709  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11765  _tokenIdentityStorage.addIdentityToStorage(_userAddress, _identity, _country) */\n      mload(0x40)\n      shl(0xe0, 0xa53410dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6977:6992   */\n      dup6\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11765  _tokenIdentityStorage.addIdentityToStorage(_userAddress, _identity, _country) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6959:6993   */\n      mstore\n        /* \"#utility.yul\":7029:7044   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":7009:7027   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7002:7045   */\n      mstore\n        /* \"#utility.yul\":7093:7099   */\n      0xffff\n        /* \"#utility.yul\":7081:7100   */\n      dup5\n      and\n        /* \"#utility.yul\":7061:7079   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":7054:7101   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11709  _tokenIdentityStorage */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11730  _tokenIdentityStorage.addIdentityToStorage */\n      0xa53410dd\n      swap1\n        /* \"#utility.yul\":6894:6912   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11688:11765  _tokenIdentityStorage.addIdentityToStorage(_userAddress, _identity, _country) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11780:11823  IdentityRegistered(_userAddress, _identity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      swap4\n      pop\n      dup7\n      and\n      swap2\n      pop\n      0x6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11536:11830  function registerIdentity(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11256:11459  function contains(address _userAddress) external view override returns (bool) {... */\n    tag_55:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11328:11332  bool */\n      0x00\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11356:11378  identity(_userAddress) */\n      tag_160\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11365:11377  _userAddress */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11356:11364  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11356:11378  identity(_userAddress) */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11348:11393  address(identity(_userAddress)) == address(0) */\n      and\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11344:11432  if (address(identity(_userAddress)) == address(0)) {... */\n      tag_161\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11416:11421  false */\n      0x00\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11256:11459  function contains(address _userAddress) external view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11344:11432  if (address(identity(_userAddress)) == address(0)) {... */\n    tag_161:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11448:11452  true */\n      0x01\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11256:11459  function contains(address _userAddress) external view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5760:6097  function batchRegisterIdentity(... */\n    tag_60:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5953:5962  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5948:6091  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n    tag_163:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5968:5993  i < _userAddresses.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5948:6091  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6014:6080  registerIdentity(_userAddresses[i], _identities[i], _countries[i]) */\n      tag_166\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6031:6045  _userAddresses */\n      dup8\n      dup8\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6046:6047  i */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6031:6048  _userAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_170:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6050:6061  _identities */\n      dup7\n      dup7\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6062:6063  i */\n      dup5\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6050:6064  _identities[i] */\n      dup2\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_169\n      jump\t// in\n    tag_172:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_173:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6066:6076  _countries */\n      dup6\n      dup6\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6077:6078  i */\n      dup6\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6066:6079  _countries[i] */\n      dup2\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_169\n      jump\t// in\n    tag_176:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6014:6080  registerIdentity(_userAddresses[i], _identities[i], _countries[i]) */\n    tag_166:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5995:5998  i++ */\n      dup1\n      tag_179\n      dup2\n      tag_180\n      jump\t// in\n    tag_179:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5948:6091  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n      jump(tag_163)\n    tag_164:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":5760:6097  function batchRegisterIdentity(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7526:7757  function setClaimTopicsRegistry(address _claimTopicsRegistry) external override onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7626:7646  _tokenTopicsRegistry */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7626:7691  _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7706:7750  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      mload(0x40)\n      0x7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7526:7757  function setClaimTopicsRegistry(address _claimTopicsRegistry) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3256:3257  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3247  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10409:10577  function investorCountry(address _userAddress) external view override returns (uint16) {... */\n    tag_68:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10534  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10570  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      mload(0x40)\n      shl(0xe2, 0x1c9f84ef)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1866   */\n      dup4\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10570  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1816:1867   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10488:10494  uint16 */\n      0x00\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10534  _tokenIdentityStorage */\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10556  _tokenIdentityStorage.storedInvestorCountry */\n      0x727e13bc\n      swap1\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10513:10570  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4364:4384  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_198:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      tag_200\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4437  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4442:4448  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4441  _agents.add */\n      tag_201\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      jump\t// in\n    tag_200:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4464:4482  AgentAdded(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xf68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6172:6461  function updateIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n    tag_81:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_206\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_35\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_206:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_141\n      jump\t// in\n    tag_207:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6277:6298  IIdentity oldIdentity */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6301:6323  identity(_userAddress) */\n      tag_210\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6310:6322  _userAddress */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6301:6309  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6301:6323  identity(_userAddress) */\n      jump\t// in\n    tag_210:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6354  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6400  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      mload(0x40)\n      shl(0xe1, 0x7402e7c3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8536:8551   */\n      dup7\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6400  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8518:8552   */\n      mstore\n        /* \"#utility.yul\":8588:8603   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":8568:8586   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8561:8604   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6277:6323  IIdentity oldIdentity = identity(_userAddress) */\n      swap3\n      swap4\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6354  _tokenIdentityStorage */\n      swap2\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6375  _tokenIdentityStorage.modifyStoredIdentity */\n      0xe805cf86\n      swap1\n        /* \"#utility.yul\":8453:8471   */\n      0x44\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6333:6400  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6415:6454  IdentityUpdated(oldIdentity, _identity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      swap4\n      pop\n      dup5\n      and\n      swap2\n      pop\n      0xe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6267:6461  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6172:6461  function updateIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4567:4587  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_219:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      tag_221\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4640  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4648:4654  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4647  _agents.remove */\n      tag_222\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      jump\t// in\n    tag_221:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4670:4690  AgentRemoved(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6843:7108  function deleteIdentity(address _userAddress) external override onlyAgent {... */\n    tag_87:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_224\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_35\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_224:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_141\n      jump\t// in\n    tag_225:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6927:6948  IIdentity oldIdentity */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6951:6973  identity(_userAddress) */\n      tag_228\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6960:6972  _userAddress */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6951:6959  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6951:6973  identity(_userAddress) */\n      jump\t// in\n    tag_228:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7004  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7044  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0xcf191bcd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1866   */\n      dup6\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7044  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1816:1867   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6927:6973  IIdentity oldIdentity = identity(_userAddress) */\n      swap3\n      swap4\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7004  _tokenIdentityStorage */\n      swap2\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7030  _tokenIdentityStorage.removeIdentityFromStorage */\n      0xcf191bcd\n      swap1\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6983:7044  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7059:7101  IdentityRemoved(_userAddress, oldIdentity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n      pop\n      dup6\n      and\n      swap2\n      pop\n      0x59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6917:7108  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":6843:7108  function deleteIdentity(address _userAddress) external override onlyAgent {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n    tag_94:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8287:8291  bool */\n      0x00\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8315:8337  identity(_userAddress) */\n      tag_235\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8324:8336  _userAddress */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8315:8323  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8315:8337  identity(_userAddress) */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8307:8352  address(identity(_userAddress)) == address(0) */\n      and\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8303:8369  if (address(identity(_userAddress)) == address(0)) {return false;} */\n      tag_236\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8362:8367  false */\n      0x00\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8303:8369  if (address(identity(_userAddress)) == address(0)) {return false;} */\n    tag_236:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8437  _tokenTopicsRegistry */\n      sload(0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8454  _tokenTopicsRegistry.getClaimTopics() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x37c27581)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8378:8414  uint256[] memory requiredClaimTopics */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8437  _tokenTopicsRegistry */\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8452  _tokenTopicsRegistry.getClaimTopics */\n      0xdf09d604\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8454  _tokenTopicsRegistry.getClaimTopics() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8378:8414  uint256[] memory requiredClaimTopics */\n      dup7\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8454  _tokenTopicsRegistry.getClaimTopics() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8437  _tokenTopicsRegistry */\n      dup7\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8417:8454  _tokenTopicsRegistry.getClaimTopics() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_239\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8378:8454  uint256[] memory requiredClaimTopics = _tokenTopicsRegistry.getClaimTopics() */\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8468:8487  requiredClaimTopics */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8468:8494  requiredClaimTopics.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8498:8499  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8468:8499  requiredClaimTopics.length == 0 */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8464:8537  if (requiredClaimTopics.length == 0) {... */\n      tag_241\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8522:8526  true */\n      0x01\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8464:8537  if (requiredClaimTopics.length == 0) {... */\n    tag_241:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8547:8570  uint256 foundClaimTopic */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8580:8594  uint256 scheme */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8604:8618  address issuer */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8628:8644  bytes memory sig */\n      0x60\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8654:8671  bytes memory data */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8681:8699  uint256 claimTopic */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8709:10306  for (claimTopic = 0; claimTopic < requiredClaimTopics.length; claimTopic++) {... */\n    tag_242:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8743:8762  requiredClaimTopics */\n      dup7\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8743:8769  requiredClaimTopics.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8730:8740  claimTopic */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8730:8769  claimTopic < requiredClaimTopics.length */\n      lt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8709:10306  for (claimTopic = 0; claimTopic < requiredClaimTopics.length; claimTopic++) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8850:8871  _tokenIssuersRegistry */\n      sload(0x02)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8903:8934  requiredClaimTopics[claimTopic] */\n      dup8\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8799:8835  IClaimIssuer[] memory trustedIssuers */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8850:8871  _tokenIssuersRegistry */\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8850:8902  _tokenIssuersRegistry.getTrustedIssuersForClaimTopic */\n      0x52c111d1\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8903:8922  requiredClaimTopics */\n      dup11\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8923:8933  claimTopic */\n      dup6\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8903:8934  requiredClaimTopics[claimTopic] */\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_246\n      tag_169\n      jump\t// in\n    tag_246:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8850:8935  _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n        /* \"#utility.yul\":10247:10272   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10235:10237   */\n      0x20\n        /* \"#utility.yul\":10220:10238   */\n      add\n      swap1\n        /* \"#utility.yul\":10101:10278   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8850:8935  _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic]) */\n    tag_247:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_251\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8799:8935  IClaimIssuer[] memory trustedIssuers =... */\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8954:8968  trustedIssuers */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8954:8975  trustedIssuers.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8979:8980  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8954:8980  trustedIssuers.length == 0 */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8950:8997  if (trustedIssuers.length == 0) {return false;} */\n      tag_253\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8990:8995  false */\n      0x00\n      swap10\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8950:8997  if (trustedIssuers.length == 0) {return false;} */\n    tag_253:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9011:9036  bytes32[] memory claimIds */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9053:9067  trustedIssuers */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9053:9074  trustedIssuers.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9039:9075  new bytes32[](trustedIssuers.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_257\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_257:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9011:9075  bytes32[] memory claimIds = new bytes32[](trustedIssuers.length) */\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9094:9103  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9089:9261  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n    tag_258:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9113:9127  trustedIssuers */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9113:9134  trustedIssuers.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9109:9110  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9109:9134  i < trustedIssuers.length */\n      lt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9089:9261  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9194:9208  trustedIssuers */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9209:9210  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9194:9211  trustedIssuers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_169\n      jump\t// in\n    tag_262:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9213:9232  requiredClaimTopics */\n      dup11\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9233:9243  claimTopic */\n      dup6\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9213:9244  requiredClaimTopics[claimTopic] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_264\n      tag_169\n      jump\t// in\n    tag_264:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9183:9245  abi.encode(trustedIssuers[i], requiredClaimTopics[claimTopic]) */\n      add(0x20, mload(0x40))\n      tag_265\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11474:11506   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11456:11507   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11538:11540   */\n      0x20\n        /* \"#utility.yul\":11523:11541   */\n      dup3\n      add\n        /* \"#utility.yul\":11516:11550   */\n      mstore\n        /* \"#utility.yul\":11444:11446   */\n      0x40\n        /* \"#utility.yul\":11429:11447   */\n      add\n      swap1\n        /* \"#utility.yul\":11263:11556   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9183:9245  abi.encode(trustedIssuers[i], requiredClaimTopics[claimTopic]) */\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9173:9246  keccak256(abi.encode(trustedIssuers[i], requiredClaimTopics[claimTopic])) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9159:9167  claimIds */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9168:9169  i */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9159:9170  claimIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_268\n      tag_169\n      jump\t// in\n    tag_268:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9159:9246  claimIds[i] = keccak256(abi.encode(trustedIssuers[i], requiredClaimTopics[claimTopic])) */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9136:9139  i++ */\n      dup1\n      tag_269\n      dup2\n      tag_180\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9089:9261  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n      jump(tag_258)\n    tag_259:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9280:9289  uint256 j */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9275:10296  for (uint256 j = 0; j < claimIds.length; j++) {... */\n    tag_270:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9299:9307  claimIds */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9299:9314  claimIds.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9295:9296  j */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9295:9314  j < claimIds.length */\n      lt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9275:10296  for (uint256 j = 0; j < claimIds.length; j++) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9410  identity(_userAddress) */\n      tag_273\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9397:9409  _userAddress */\n      dup13\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9396  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9410  identity(_userAddress) */\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9419  identity(_userAddress).getClaim */\n      and\n      0xc9100bcb\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9420:9428  claimIds */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9429:9430  j */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9420:9431  claimIds[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_169\n      jump\t// in\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9432  identity(_userAddress).getClaim(claimIds[j]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n        /* \"#utility.yul\":10247:10272   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10235:10237   */\n      0x20\n        /* \"#utility.yul\":10220:10238   */\n      add\n      swap1\n        /* \"#utility.yul\":10101:10278   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9388:9432  identity(_userAddress).getClaim(claimIds[j]) */\n    tag_276:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_280\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9474:9505  requiredClaimTopics[claimTopic] */\n      dup15\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9339:9432  (foundClaimTopic, scheme, issuer, sig, data, ) = identity(_userAddress).getClaim(claimIds[j]) */\n      swap5\n      swap14\n      pop\n      swap3\n      swap12\n      pop\n      swap1\n      swap10\n      pop\n      swap8\n      pop\n      swap6\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9474:9493  requiredClaimTopics */\n      dup11\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9494:9504  claimTopic */\n      dup6\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9474:9505  requiredClaimTopics[claimTopic] */\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_169\n      jump\t// in\n    tag_283:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9455:9470  foundClaimTopic */\n      dup10\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9455:9505  foundClaimTopic == requiredClaimTopics[claimTopic] */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9451:10282  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      tag_284\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9546:9552  issuer */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9533:9566  IClaimIssuer(issuer).isClaimValid */\n      and\n      0xc0969a6e\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9567:9589  identity(_userAddress) */\n      tag_285\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9576:9588  _userAddress */\n      dup15\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9567:9575  identity */\n      tag_101\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9567:9589  identity(_userAddress) */\n      jump\t// in\n    tag_285:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9591:9610  requiredClaimTopics */\n      dup13\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9611:9621  claimTopic */\n      dup8\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9591:9622  requiredClaimTopics[claimTopic] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_287\n      tag_169\n      jump\t// in\n    tag_287:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9624:9627  sig */\n      dup10\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9653:9657  data */\n      dup10\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9533:9658  IClaimIssuer(issuer).isClaimValid(identity(_userAddress), requiredClaimTopics[claimTopic], sig,... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_291\n      swap2\n      dup2\n      add\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      0x01\n    tag_290:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9529:10173  try IClaimIssuer(issuer).isClaimValid(identity(_userAddress), requiredClaimTopics[claimTopic], sig,... */\n      tag_293\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10078:10079  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10060:10068  claimIds */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10060:10075  claimIds.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10060:10079  claimIds.length - 1 */\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10054:10055  j */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10054:10080  j == (claimIds.length - 1) */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10050:10151  if (j == (claimIds.length - 1)) {... */\n      tag_299\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10119:10124  false */\n      0x00\n      swap12\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10050:10151  if (j == (claimIds.length - 1)) {... */\n    tag_299:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9451:10282  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      jump(tag_307)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9529:10173  try IClaimIssuer(issuer).isClaimValid(identity(_userAddress), requiredClaimTopics[claimTopic], sig,... */\n    tag_293:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9743:9752  _validity */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9710:9855  if (... */\n      iszero\n      tag_301\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9813:9821  claimIds */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9813:9828  claimIds.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9809:9828  j = claimIds.length */\n      swap2\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9710:9855  if (... */\n    tag_301:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9885:9894  _validity */\n      dup1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9884:9894  !_validity */\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9884:9924  !_validity && j == (claimIds.length - 1) */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9922:9923  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9904:9912  claimIds */\n      dup4\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9904:9919  claimIds.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9904:9923  claimIds.length - 1 */\n      tag_303\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_303:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9898:9899  j */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9898:9924  j == (claimIds.length - 1) */\n      eq\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9884:9924  !_validity && j == (claimIds.length - 1) */\n    tag_302:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9880:9995  if (!_validity && j == (claimIds.length - 1)) {... */\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9963:9968  false */\n      0x00\n      swap13\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9880:9995  if (!_validity && j == (claimIds.length - 1)) {... */\n    tag_304:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9659:10017  returns(bool _validity) {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9451:10282  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      jump(tag_307)\n    tag_284:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10225:10226  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10207:10215  claimIds */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10207:10222  claimIds.length */\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10207:10226  claimIds.length - 1 */\n      tag_306\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_306:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10201:10202  j */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10201:10227  j == (claimIds.length - 1) */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10197:10282  if (j == (claimIds.length - 1)) {... */\n      tag_307\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10258:10263  false */\n      0x00\n      swap12\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10197:10282  if (j == (claimIds.length - 1)) {... */\n    tag_307:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9316:9319  j++ */\n      dup1\n      tag_308\n      dup2\n      tag_180\n      jump\t// in\n    tag_308:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":9275:10296  for (uint256 j = 0; j < claimIds.length; j++) {... */\n      jump(tag_270)\n    tag_271:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8785:10306  {... */\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8771:8783  claimTopic++ */\n      dup1\n      dup1\n      tag_309\n      swap1\n      tag_180\n      jump\t// in\n    tag_309:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8709:10306  for (claimTopic = 0; claimTopic < requiredClaimTopics.length; claimTopic++) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":10322:10326  true */\n      0x01\n      swap9\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8213:10333  function isVerified(address _userAddress) external view override returns (bool) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7843:8093  function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external override onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_311:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7949:7970  _tokenIssuersRegistry */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7949:8021  _tokenIssuersRegistry = ITrustedIssuersRegistry(_trustedIssuersRegistry) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":8036:8086  TrustedIssuersRegistrySet(_trustedIssuersRegistry) */\n      mload(0x40)\n      0x1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":7843:8093  function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11899:12054  function identity(address _userAddress) public view override returns (IIdentity) {... */\n    tag_101:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12018  _tokenIdentityStorage */\n      sload(0x03)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12047  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0x7988d3a5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1866   */\n      dup4\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12047  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1816:1867   */\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11969:11978  IIdentity */\n      0x00\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12018  _tokenIdentityStorage */\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12033  _tokenIdentityStorage.storedIdentity */\n      0x7988d3a5\n      swap1\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistry.sol\":11997:12047  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3499:3521  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3572:3573  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1816:1867   */\n      mstore\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      tag_123\n        /* \"#utility.yul\":1641:1873   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3614:3622  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3613  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1857:1984  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1964:1976  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1963  __Ownable_init_unchained */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_132:\n        /* \"contracts t-rex/roles/Roles.sol\":4668:4672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4692:4713  account != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15508:15510   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15490:15511   */\n      mstore\n        /* \"#utility.yul\":15547:15549   */\n      0x22\n        /* \"#utility.yul\":15527:15545   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15520:15550   */\n      mstore\n        /* \"#utility.yul\":15586:15620   */\n      0x526f6c65733a206163636f756e7420697320746865207a65726f206164647265\n        /* \"#utility.yul\":15566:15584   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15559:15621   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":15637:15655   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15630:15662   */\n      mstore\n        /* \"#utility.yul\":15679:15698   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_123\n        /* \"#utility.yul\":15306:15704   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n    tag_334:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4780  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2668:2830  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2750  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2723:2824  if (owner() != _msgSender()) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1816:1867   */\n      mstore\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_123\n        /* \"#utility.yul\":1641:1873   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3951:3970  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3881  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:4032  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n    tag_201:\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      tag_347\n        /* \"contracts t-rex/roles/Roles.sol\":4158:4162  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4164:4171  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4157  has */\n      tag_132\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      jump\t// in\n    tag_347:\n        /* \"contracts t-rex/roles/Roles.sol\":4153:4172  !has(role, account) */\n      iszero\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15911:15913   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15893:15914   */\n      mstore\n        /* \"#utility.yul\":15950:15952   */\n      0x1f\n        /* \"#utility.yul\":15930:15948   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15923:15953   */\n      mstore\n        /* \"#utility.yul\":15989:16022   */\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n        /* \"#utility.yul\":15969:15987   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15962:16023   */\n      mstore\n        /* \"#utility.yul\":16040:16058   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_123\n        /* \"#utility.yul\":15709:16064   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4229  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4241:4245  true */\n      0x01\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n    tag_222:\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      tag_353\n        /* \"contracts t-rex/roles/Roles.sol\":4410:4414  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4416:4423  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4409  has */\n      tag_132\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      jump\t// in\n    tag_353:\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16271:16273   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16253:16274   */\n      mstore\n        /* \"#utility.yul\":16310:16312   */\n      0x21\n        /* \"#utility.yul\":16290:16308   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16283:16313   */\n      mstore\n        /* \"#utility.yul\":16349:16383   */\n      0x526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c\n        /* \"#utility.yul\":16329:16347   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16322:16384   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":16400:16418   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16393:16424   */\n      mstore\n        /* \"#utility.yul\":16441:16460   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_123\n        /* \"#utility.yul\":16069:16466   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4495:4500  false */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4500  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1990:2225  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:679   */\n    tag_30:\n        /* \"#utility.yul\":227:233   */\n      0x00\n        /* \"#utility.yul\":235:241   */\n      dup1\n        /* \"#utility.yul\":243:249   */\n      0x00\n        /* \"#utility.yul\":296:298   */\n      0x60\n        /* \"#utility.yul\":284:293   */\n      dup5\n        /* \"#utility.yul\":275:282   */\n      dup7\n        /* \"#utility.yul\":271:294   */\n      sub\n        /* \"#utility.yul\":267:299   */\n      slt\n        /* \"#utility.yul\":264:316   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":309:310   */\n      dup1\n        /* \"#utility.yul\":302:314   */\n      revert\n        /* \"#utility.yul\":264:316   */\n    tag_384:\n        /* \"#utility.yul\":351:360   */\n      dup4\n        /* \"#utility.yul\":338:361   */\n      calldataload\n        /* \"#utility.yul\":370:401   */\n      tag_385\n        /* \"#utility.yul\":395:400   */\n      dup2\n        /* \"#utility.yul\":370:401   */\n      tag_370\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":420:425   */\n      swap3\n      pop\n        /* \"#utility.yul\":477:479   */\n      0x20\n        /* \"#utility.yul\":462:480   */\n      dup5\n      add\n        /* \"#utility.yul\":449:481   */\n      calldataload\n        /* \"#utility.yul\":490:523   */\n      tag_386\n        /* \"#utility.yul\":449:481   */\n      dup2\n        /* \"#utility.yul\":490:523   */\n      tag_370\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":542:549   */\n      swap2\n      pop\n        /* \"#utility.yul\":601:603   */\n      0x40\n        /* \"#utility.yul\":586:604   */\n      dup5\n      add\n        /* \"#utility.yul\":573:605   */\n      calldataload\n        /* \"#utility.yul\":614:647   */\n      tag_387\n        /* \"#utility.yul\":573:605   */\n      dup2\n        /* \"#utility.yul\":614:647   */\n      tag_370\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":666:673   */\n      dup1\n        /* \"#utility.yul\":656:673   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":150:679   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":684:931   */\n    tag_34:\n        /* \"#utility.yul\":743:749   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:816   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":812:813   */\n      0x00\n        /* \"#utility.yul\":809:810   */\n      dup1\n        /* \"#utility.yul\":802:814   */\n      revert\n        /* \"#utility.yul\":764:816   */\n    tag_389:\n        /* \"#utility.yul\":851:860   */\n      dup2\n        /* \"#utility.yul\":838:861   */\n      calldataload\n        /* \"#utility.yul\":870:901   */\n      tag_390\n        /* \"#utility.yul\":895:900   */\n      dup2\n        /* \"#utility.yul\":870:901   */\n      tag_370\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":920:925   */\n      swap4\n        /* \"#utility.yul\":684:931   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1245   */\n    tag_371:\n        /* \"#utility.yul\":1213:1219   */\n      0xffff\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1202:1220   */\n      and\n        /* \"#utility.yul\":1195:1200   */\n      dup2\n        /* \"#utility.yul\":1192:1221   */\n      eq\n        /* \"#utility.yul\":1182:1239   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1232:1233   */\n      dup1\n        /* \"#utility.yul\":1225:1237   */\n      revert\n        /* \"#utility.yul\":1250:1636   */\n    tag_43:\n        /* \"#utility.yul\":1317:1323   */\n      0x00\n        /* \"#utility.yul\":1325:1331   */\n      dup1\n        /* \"#utility.yul\":1378:1380   */\n      0x40\n        /* \"#utility.yul\":1366:1375   */\n      dup4\n        /* \"#utility.yul\":1357:1364   */\n      dup6\n        /* \"#utility.yul\":1353:1376   */\n      sub\n        /* \"#utility.yul\":1349:1381   */\n      slt\n        /* \"#utility.yul\":1346:1398   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1394:1395   */\n      0x00\n        /* \"#utility.yul\":1391:1392   */\n      dup1\n        /* \"#utility.yul\":1384:1396   */\n      revert\n        /* \"#utility.yul\":1346:1398   */\n    tag_395:\n        /* \"#utility.yul\":1433:1442   */\n      dup3\n        /* \"#utility.yul\":1420:1443   */\n      calldataload\n        /* \"#utility.yul\":1452:1483   */\n      tag_396\n        /* \"#utility.yul\":1477:1482   */\n      dup2\n        /* \"#utility.yul\":1452:1483   */\n      tag_370\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1502:1507   */\n      swap2\n      pop\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      dup4\n      add\n        /* \"#utility.yul\":1531:1563   */\n      calldataload\n        /* \"#utility.yul\":1572:1604   */\n      tag_397\n        /* \"#utility.yul\":1531:1563   */\n      dup2\n        /* \"#utility.yul\":1572:1604   */\n      tag_371\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1623:1630   */\n      dup1\n        /* \"#utility.yul\":1613:1630   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1250:1636   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1878:2422   */\n    tag_51:\n        /* \"#utility.yul\":1971:1977   */\n      0x00\n        /* \"#utility.yul\":1979:1985   */\n      dup1\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":2040:2042   */\n      0x60\n        /* \"#utility.yul\":2028:2037   */\n      dup5\n        /* \"#utility.yul\":2019:2026   */\n      dup7\n        /* \"#utility.yul\":2015:2038   */\n      sub\n        /* \"#utility.yul\":2011:2043   */\n      slt\n        /* \"#utility.yul\":2008:2060   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2053:2054   */\n      dup1\n        /* \"#utility.yul\":2046:2058   */\n      revert\n        /* \"#utility.yul\":2008:2060   */\n    tag_400:\n        /* \"#utility.yul\":2095:2104   */\n      dup4\n        /* \"#utility.yul\":2082:2105   */\n      calldataload\n        /* \"#utility.yul\":2114:2145   */\n      tag_401\n        /* \"#utility.yul\":2139:2144   */\n      dup2\n        /* \"#utility.yul\":2114:2145   */\n      tag_370\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2164:2169   */\n      swap3\n      pop\n        /* \"#utility.yul\":2221:2223   */\n      0x20\n        /* \"#utility.yul\":2206:2224   */\n      dup5\n      add\n        /* \"#utility.yul\":2193:2225   */\n      calldataload\n        /* \"#utility.yul\":2234:2267   */\n      tag_402\n        /* \"#utility.yul\":2193:2225   */\n      dup2\n        /* \"#utility.yul\":2234:2267   */\n      tag_370\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2286:2293   */\n      swap2\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x40\n        /* \"#utility.yul\":2330:2348   */\n      dup5\n      add\n        /* \"#utility.yul\":2317:2349   */\n      calldataload\n        /* \"#utility.yul\":2358:2390   */\n      tag_387\n        /* \"#utility.yul\":2317:2349   */\n      dup2\n        /* \"#utility.yul\":2358:2390   */\n      tag_371\n      jump\t// in\n        /* \"#utility.yul\":2427:2794   */\n    tag_372:\n        /* \"#utility.yul\":2490:2498   */\n      0x00\n        /* \"#utility.yul\":2500:2506   */\n      dup1\n        /* \"#utility.yul\":2554:2557   */\n      dup4\n        /* \"#utility.yul\":2547:2551   */\n      0x1f\n        /* \"#utility.yul\":2539:2545   */\n      dup5\n        /* \"#utility.yul\":2535:2552   */\n      add\n        /* \"#utility.yul\":2531:2558   */\n      slt\n        /* \"#utility.yul\":2521:2576   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2521:2576   */\n    tag_405:\n      pop\n        /* \"#utility.yul\":2595:2615   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2638:2656   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2627:2657   */\n      dup2\n      gt\n        /* \"#utility.yul\":2624:2674   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2670:2671   */\n      0x00\n        /* \"#utility.yul\":2667:2668   */\n      dup1\n        /* \"#utility.yul\":2660:2672   */\n      revert\n        /* \"#utility.yul\":2624:2674   */\n    tag_406:\n        /* \"#utility.yul\":2707:2711   */\n      0x20\n        /* \"#utility.yul\":2699:2705   */\n      dup4\n        /* \"#utility.yul\":2695:2712   */\n      add\n        /* \"#utility.yul\":2683:2712   */\n      swap2\n      pop\n        /* \"#utility.yul\":2767:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2764   */\n      0x20\n        /* \"#utility.yul\":2750:2756   */\n      dup3\n        /* \"#utility.yul\":2747:2748   */\n      0x05\n        /* \"#utility.yul\":2743:2757   */\n      shl\n        /* \"#utility.yul\":2735:2741   */\n      dup6\n        /* \"#utility.yul\":2731:2758   */\n      add\n        /* \"#utility.yul\":2727:2765   */\n      add\n        /* \"#utility.yul\":2724:2771   */\n      gt\n        /* \"#utility.yul\":2721:2788   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":2784:2785   */\n      0x00\n        /* \"#utility.yul\":2781:2782   */\n      dup1\n        /* \"#utility.yul\":2774:2786   */\n      revert\n        /* \"#utility.yul\":2721:2788   */\n    tag_407:\n        /* \"#utility.yul\":2427:2794   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2799:3903   */\n    tag_59:\n        /* \"#utility.yul\":2973:2979   */\n      0x00\n        /* \"#utility.yul\":2981:2987   */\n      dup1\n        /* \"#utility.yul\":2989:2995   */\n      0x00\n        /* \"#utility.yul\":2997:3003   */\n      dup1\n        /* \"#utility.yul\":3005:3011   */\n      0x00\n        /* \"#utility.yul\":3013:3019   */\n      dup1\n        /* \"#utility.yul\":3066:3068   */\n      0x60\n        /* \"#utility.yul\":3054:3063   */\n      dup8\n        /* \"#utility.yul\":3045:3052   */\n      dup10\n        /* \"#utility.yul\":3041:3064   */\n      sub\n        /* \"#utility.yul\":3037:3069   */\n      slt\n        /* \"#utility.yul\":3034:3086   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3079:3080   */\n      dup1\n        /* \"#utility.yul\":3072:3084   */\n      revert\n        /* \"#utility.yul\":3034:3086   */\n    tag_409:\n        /* \"#utility.yul\":3122:3131   */\n      dup7\n        /* \"#utility.yul\":3109:3132   */\n      calldataload\n        /* \"#utility.yul\":3151:3169   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3192:3194   */\n      dup1\n        /* \"#utility.yul\":3184:3190   */\n      dup3\n        /* \"#utility.yul\":3181:3195   */\n      gt\n        /* \"#utility.yul\":3178:3212   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":3208:3209   */\n      0x00\n        /* \"#utility.yul\":3205:3206   */\n      dup1\n        /* \"#utility.yul\":3198:3210   */\n      revert\n        /* \"#utility.yul\":3178:3212   */\n    tag_410:\n        /* \"#utility.yul\":3247:3317   */\n      tag_411\n        /* \"#utility.yul\":3309:3316   */\n      dup11\n        /* \"#utility.yul\":3300:3306   */\n      dup4\n        /* \"#utility.yul\":3289:3298   */\n      dup12\n        /* \"#utility.yul\":3285:3307   */\n      add\n        /* \"#utility.yul\":3247:3317   */\n      tag_372\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3336:3344   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":3221:3317   */\n      swap7\n      pop\n        /* \"#utility.yul\":3424:3426   */\n      0x20\n        /* \"#utility.yul\":3409:3427   */\n      dup10\n      add\n        /* \"#utility.yul\":3396:3428   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3440:3456   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3437:3473   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3469:3470   */\n      0x00\n        /* \"#utility.yul\":3466:3467   */\n      dup1\n        /* \"#utility.yul\":3459:3471   */\n      revert\n        /* \"#utility.yul\":3437:3473   */\n    tag_412:\n        /* \"#utility.yul\":3508:3580   */\n      tag_413\n        /* \"#utility.yul\":3572:3579   */\n      dup11\n        /* \"#utility.yul\":3561:3569   */\n      dup4\n        /* \"#utility.yul\":3550:3559   */\n      dup12\n        /* \"#utility.yul\":3546:3570   */\n      add\n        /* \"#utility.yul\":3508:3580   */\n      tag_372\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3599:3607   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":3482:3580   */\n      swap5\n      pop\n        /* \"#utility.yul\":3687:3689   */\n      0x40\n        /* \"#utility.yul\":3672:3690   */\n      dup10\n      add\n        /* \"#utility.yul\":3659:3691   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3703:3719   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3700:3736   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3732:3733   */\n      0x00\n        /* \"#utility.yul\":3729:3730   */\n      dup1\n        /* \"#utility.yul\":3722:3734   */\n      revert\n        /* \"#utility.yul\":3700:3736   */\n    tag_414:\n      pop\n        /* \"#utility.yul\":3771:3843   */\n      tag_415\n        /* \"#utility.yul\":3835:3842   */\n      dup10\n        /* \"#utility.yul\":3824:3832   */\n      dup3\n        /* \"#utility.yul\":3813:3822   */\n      dup11\n        /* \"#utility.yul\":3809:3833   */\n      add\n        /* \"#utility.yul\":3771:3843   */\n      tag_372\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2799:3903   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3862:3870   */\n      swap4\n      swap5\n        /* \"#utility.yul\":2799:3903   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4309:4714   */\n    tag_80:\n        /* \"#utility.yul\":4394:4400   */\n      0x00\n        /* \"#utility.yul\":4402:4408   */\n      dup1\n        /* \"#utility.yul\":4455:4457   */\n      0x40\n        /* \"#utility.yul\":4443:4452   */\n      dup4\n        /* \"#utility.yul\":4434:4441   */\n      dup6\n        /* \"#utility.yul\":4430:4453   */\n      sub\n        /* \"#utility.yul\":4426:4458   */\n      slt\n        /* \"#utility.yul\":4423:4475   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4468:4469   */\n      dup1\n        /* \"#utility.yul\":4461:4473   */\n      revert\n        /* \"#utility.yul\":4423:4475   */\n    tag_419:\n        /* \"#utility.yul\":4510:4519   */\n      dup3\n        /* \"#utility.yul\":4497:4520   */\n      calldataload\n        /* \"#utility.yul\":4529:4560   */\n      tag_420\n        /* \"#utility.yul\":4554:4559   */\n      dup2\n        /* \"#utility.yul\":4529:4560   */\n      tag_370\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4579:4584   */\n      swap2\n      pop\n        /* \"#utility.yul\":4636:4638   */\n      0x20\n        /* \"#utility.yul\":4621:4639   */\n      dup4\n      add\n        /* \"#utility.yul\":4608:4640   */\n      calldataload\n        /* \"#utility.yul\":4649:4682   */\n      tag_397\n        /* \"#utility.yul\":4608:4640   */\n      dup2\n        /* \"#utility.yul\":4649:4682   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":5425:5780   */\n    tag_124:\n        /* \"#utility.yul\":5627:5629   */\n      0x20\n        /* \"#utility.yul\":5609:5630   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5666:5668   */\n      0x1f\n        /* \"#utility.yul\":5646:5664   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5639:5669   */\n      mstore\n        /* \"#utility.yul\":5705:5738   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":5700:5702   */\n      0x40\n        /* \"#utility.yul\":5685:5703   */\n      dup3\n      add\n        /* \"#utility.yul\":5678:5739   */\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x60\n        /* \"#utility.yul\":5756:5774   */\n      add\n      swap1\n        /* \"#utility.yul\":5425:5780   */\n      jump\t// out\n        /* \"#utility.yul\":5999:6409   */\n    tag_141:\n        /* \"#utility.yul\":6201:6203   */\n      0x20\n        /* \"#utility.yul\":6183:6204   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6240:6242   */\n      0x2e\n        /* \"#utility.yul\":6220:6238   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6213:6243   */\n      mstore\n        /* \"#utility.yul\":6279:6313   */\n      0x4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520\n        /* \"#utility.yul\":6274:6276   */\n      0x40\n        /* \"#utility.yul\":6259:6277   */\n      dup3\n      add\n        /* \"#utility.yul\":6252:6314   */\n      mstore\n      shl(0x90, 0x746865204167656e7420726f6c65)\n        /* \"#utility.yul\":6345:6347   */\n      0x60\n        /* \"#utility.yul\":6330:6348   */\n      dup3\n      add\n        /* \"#utility.yul\":6323:6367   */\n      mstore\n        /* \"#utility.yul\":6399:6402   */\n      0x80\n        /* \"#utility.yul\":6384:6403   */\n      add\n      swap1\n        /* \"#utility.yul\":5999:6409   */\n      jump\t// out\n        /* \"#utility.yul\":7112:7239   */\n    tag_169:\n        /* \"#utility.yul\":7173:7183   */\n      0x4e487b71\n        /* \"#utility.yul\":7168:7171   */\n      0xe0\n        /* \"#utility.yul\":7164:7184   */\n      shl\n        /* \"#utility.yul\":7161:7162   */\n      0x00\n        /* \"#utility.yul\":7154:7185   */\n      mstore\n        /* \"#utility.yul\":7204:7208   */\n      0x32\n        /* \"#utility.yul\":7201:7202   */\n      0x04\n        /* \"#utility.yul\":7194:7209   */\n      mstore\n        /* \"#utility.yul\":7228:7232   */\n      0x24\n        /* \"#utility.yul\":7225:7226   */\n      0x00\n        /* \"#utility.yul\":7218:7233   */\n      revert\n        /* \"#utility.yul\":7513:7758   */\n    tag_178:\n        /* \"#utility.yul\":7571:7577   */\n      0x00\n        /* \"#utility.yul\":7624:7626   */\n      0x20\n        /* \"#utility.yul\":7612:7621   */\n      dup3\n        /* \"#utility.yul\":7603:7610   */\n      dup5\n        /* \"#utility.yul\":7599:7622   */\n      sub\n        /* \"#utility.yul\":7595:7627   */\n      slt\n        /* \"#utility.yul\":7592:7644   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":7640:7641   */\n      0x00\n        /* \"#utility.yul\":7637:7638   */\n      dup1\n        /* \"#utility.yul\":7630:7642   */\n      revert\n        /* \"#utility.yul\":7592:7644   */\n    tag_435:\n        /* \"#utility.yul\":7679:7688   */\n      dup2\n        /* \"#utility.yul\":7666:7689   */\n      calldataload\n        /* \"#utility.yul\":7698:7728   */\n      tag_390\n        /* \"#utility.yul\":7722:7727   */\n      dup2\n        /* \"#utility.yul\":7698:7728   */\n      tag_371\n      jump\t// in\n        /* \"#utility.yul\":7763:7890   */\n    tag_373:\n        /* \"#utility.yul\":7824:7834   */\n      0x4e487b71\n        /* \"#utility.yul\":7819:7822   */\n      0xe0\n        /* \"#utility.yul\":7815:7835   */\n      shl\n        /* \"#utility.yul\":7812:7813   */\n      0x00\n        /* \"#utility.yul\":7805:7836   */\n      mstore\n        /* \"#utility.yul\":7855:7859   */\n      0x11\n        /* \"#utility.yul\":7852:7853   */\n      0x04\n        /* \"#utility.yul\":7845:7860   */\n      mstore\n        /* \"#utility.yul\":7879:7883   */\n      0x24\n        /* \"#utility.yul\":7876:7877   */\n      0x00\n        /* \"#utility.yul\":7869:7884   */\n      revert\n        /* \"#utility.yul\":7895:8030   */\n    tag_180:\n        /* \"#utility.yul\":7934:7937   */\n      0x00\n        /* \"#utility.yul\":7955:7972   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7952:7995   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":7975:7993   */\n      tag_440\n      tag_373\n      jump\t// in\n    tag_440:\n      pop\n        /* \"#utility.yul\":8022:8023   */\n      0x01\n        /* \"#utility.yul\":8011:8024   */\n      add\n      swap1\n        /* \"#utility.yul\":7895:8030   */\n      jump\t// out\n        /* \"#utility.yul\":8035:8284   */\n    tag_194:\n        /* \"#utility.yul\":8104:8110   */\n      0x00\n        /* \"#utility.yul\":8157:8159   */\n      0x20\n        /* \"#utility.yul\":8145:8154   */\n      dup3\n        /* \"#utility.yul\":8136:8143   */\n      dup5\n        /* \"#utility.yul\":8132:8155   */\n      sub\n        /* \"#utility.yul\":8128:8160   */\n      slt\n        /* \"#utility.yul\":8125:8177   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8173:8174   */\n      0x00\n        /* \"#utility.yul\":8170:8171   */\n      dup1\n        /* \"#utility.yul\":8163:8175   */\n      revert\n        /* \"#utility.yul\":8125:8177   */\n    tag_442:\n        /* \"#utility.yul\":8205:8214   */\n      dup2\n        /* \"#utility.yul\":8199:8215   */\n      mload\n        /* \"#utility.yul\":8224:8254   */\n      tag_390\n        /* \"#utility.yul\":8248:8253   */\n      dup2\n        /* \"#utility.yul\":8224:8254   */\n      tag_371\n      jump\t// in\n        /* \"#utility.yul\":8615:8742   */\n    tag_256:\n        /* \"#utility.yul\":8676:8686   */\n      0x4e487b71\n        /* \"#utility.yul\":8671:8674   */\n      0xe0\n        /* \"#utility.yul\":8667:8687   */\n      shl\n        /* \"#utility.yul\":8664:8665   */\n      0x00\n        /* \"#utility.yul\":8657:8688   */\n      mstore\n        /* \"#utility.yul\":8707:8711   */\n      0x41\n        /* \"#utility.yul\":8704:8705   */\n      0x04\n        /* \"#utility.yul\":8697:8712   */\n      mstore\n        /* \"#utility.yul\":8731:8735   */\n      0x24\n        /* \"#utility.yul\":8728:8729   */\n      0x00\n        /* \"#utility.yul\":8721:8736   */\n      revert\n        /* \"#utility.yul\":8747:9022   */\n    tag_374:\n        /* \"#utility.yul\":8818:8820   */\n      0x40\n        /* \"#utility.yul\":8812:8821   */\n      mload\n        /* \"#utility.yul\":8883:8885   */\n      0x1f\n        /* \"#utility.yul\":8864:8877   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8860:8887   */\n      and\n        /* \"#utility.yul\":8848:8888   */\n      dup2\n      add\n        /* \"#utility.yul\":8918:8936   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8903:8937   */\n      dup2\n      gt\n        /* \"#utility.yul\":8939:8961   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8900:8962   */\n      or\n        /* \"#utility.yul\":8897:8985   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8965:8983   */\n      tag_448\n      tag_256\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9001:9003   */\n      0x40\n        /* \"#utility.yul\":8994:9016   */\n      mstore\n        /* \"#utility.yul\":8747:9022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9027:9210   */\n    tag_375:\n        /* \"#utility.yul\":9087:9091   */\n      0x00\n        /* \"#utility.yul\":9120:9138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9112:9118   */\n      dup3\n        /* \"#utility.yul\":9109:9139   */\n      gt\n        /* \"#utility.yul\":9106:9162   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":9142:9160   */\n      tag_451\n      tag_256\n      jump\t// in\n    tag_451:\n      pop\n        /* \"#utility.yul\":9187:9188   */\n      0x05\n        /* \"#utility.yul\":9183:9197   */\n      shl\n        /* \"#utility.yul\":9199:9203   */\n      0x20\n        /* \"#utility.yul\":9179:9204   */\n      add\n      swap1\n        /* \"#utility.yul\":9027:9210   */\n      jump\t// out\n        /* \"#utility.yul\":9215:10096   */\n    tag_240:\n        /* \"#utility.yul\":9310:9316   */\n      0x00\n        /* \"#utility.yul\":9341:9343   */\n      0x20\n        /* \"#utility.yul\":9384:9386   */\n      dup1\n        /* \"#utility.yul\":9372:9381   */\n      dup4\n        /* \"#utility.yul\":9363:9370   */\n      dup6\n        /* \"#utility.yul\":9359:9382   */\n      sub\n        /* \"#utility.yul\":9355:9387   */\n      slt\n        /* \"#utility.yul\":9352:9404   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":9400:9401   */\n      0x00\n        /* \"#utility.yul\":9397:9398   */\n      dup1\n        /* \"#utility.yul\":9390:9402   */\n      revert\n        /* \"#utility.yul\":9352:9404   */\n    tag_453:\n        /* \"#utility.yul\":9433:9442   */\n      dup3\n        /* \"#utility.yul\":9427:9443   */\n      mload\n        /* \"#utility.yul\":9466:9484   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9458:9464   */\n      dup2\n        /* \"#utility.yul\":9455:9485   */\n      gt\n        /* \"#utility.yul\":9452:9502   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":9498:9499   */\n      0x00\n        /* \"#utility.yul\":9495:9496   */\n      dup1\n        /* \"#utility.yul\":9488:9500   */\n      revert\n        /* \"#utility.yul\":9452:9502   */\n    tag_454:\n        /* \"#utility.yul\":9521:9543   */\n      dup4\n      add\n        /* \"#utility.yul\":9574:9578   */\n      0x1f\n        /* \"#utility.yul\":9566:9579   */\n      dup2\n      add\n        /* \"#utility.yul\":9562:9589   */\n      dup6\n      sgt\n        /* \"#utility.yul\":9552:9607   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9603:9604   */\n      0x00\n        /* \"#utility.yul\":9600:9601   */\n      dup1\n        /* \"#utility.yul\":9593:9605   */\n      revert\n        /* \"#utility.yul\":9552:9607   */\n    tag_455:\n        /* \"#utility.yul\":9632:9634   */\n      dup1\n        /* \"#utility.yul\":9626:9635   */\n      mload\n        /* \"#utility.yul\":9655:9715   */\n      tag_456\n        /* \"#utility.yul\":9671:9714   */\n      tag_457\n        /* \"#utility.yul\":9711:9713   */\n      dup3\n        /* \"#utility.yul\":9671:9714   */\n      tag_375\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9655:9715   */\n      tag_374\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9749:9764   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":9831:9832   */\n      0x05\n        /* \"#utility.yul\":9827:9837   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":9819:9838   */\n      dup3\n      add\n        /* \"#utility.yul\":9815:9843   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":9780:9792   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":9855:9874   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":9852:9891   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9884:9885   */\n      dup1\n        /* \"#utility.yul\":9877:9889   */\n      revert\n        /* \"#utility.yul\":9852:9891   */\n    tag_458:\n        /* \"#utility.yul\":9911:9922   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":9931:10066   */\n    tag_459:\n        /* \"#utility.yul\":9947:9953   */\n      dup3\n        /* \"#utility.yul\":9942:9945   */\n      dup5\n        /* \"#utility.yul\":9939:9954   */\n      lt\n        /* \"#utility.yul\":9931:10066   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":10013:10023   */\n      dup4\n      mload\n        /* \"#utility.yul\":10001:10024   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9964:9976   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":10044:10056   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":9931:10066   */\n      jump(tag_459)\n    tag_461:\n        /* \"#utility.yul\":10085:10090   */\n      swap8\n        /* \"#utility.yul\":9215:10096   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10283:11258   */\n    tag_252:\n        /* \"#utility.yul\":10397:10403   */\n      0x00\n        /* \"#utility.yul\":10428:10430   */\n      0x20\n        /* \"#utility.yul\":10471:10473   */\n      dup1\n        /* \"#utility.yul\":10459:10468   */\n      dup4\n        /* \"#utility.yul\":10450:10457   */\n      dup6\n        /* \"#utility.yul\":10446:10469   */\n      sub\n        /* \"#utility.yul\":10442:10474   */\n      slt\n        /* \"#utility.yul\":10439:10491   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":10487:10488   */\n      0x00\n        /* \"#utility.yul\":10484:10485   */\n      dup1\n        /* \"#utility.yul\":10477:10489   */\n      revert\n        /* \"#utility.yul\":10439:10491   */\n    tag_464:\n        /* \"#utility.yul\":10520:10529   */\n      dup3\n        /* \"#utility.yul\":10514:10530   */\n      mload\n        /* \"#utility.yul\":10553:10571   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10545:10551   */\n      dup2\n        /* \"#utility.yul\":10542:10572   */\n      gt\n        /* \"#utility.yul\":10539:10589   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":10585:10586   */\n      0x00\n        /* \"#utility.yul\":10582:10583   */\n      dup1\n        /* \"#utility.yul\":10575:10587   */\n      revert\n        /* \"#utility.yul\":10539:10589   */\n    tag_465:\n        /* \"#utility.yul\":10608:10630   */\n      dup4\n      add\n        /* \"#utility.yul\":10661:10665   */\n      0x1f\n        /* \"#utility.yul\":10653:10666   */\n      dup2\n      add\n        /* \"#utility.yul\":10649:10676   */\n      dup6\n      sgt\n        /* \"#utility.yul\":10639:10694   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10690:10691   */\n      0x00\n        /* \"#utility.yul\":10687:10688   */\n      dup1\n        /* \"#utility.yul\":10680:10692   */\n      revert\n        /* \"#utility.yul\":10639:10694   */\n    tag_466:\n        /* \"#utility.yul\":10719:10721   */\n      dup1\n        /* \"#utility.yul\":10713:10722   */\n      mload\n        /* \"#utility.yul\":10742:10802   */\n      tag_467\n        /* \"#utility.yul\":10758:10801   */\n      tag_457\n        /* \"#utility.yul\":10798:10800   */\n      dup3\n        /* \"#utility.yul\":10758:10801   */\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":10742:10802   */\n    tag_467:\n        /* \"#utility.yul\":10836:10851   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":10918:10919   */\n      0x05\n        /* \"#utility.yul\":10914:10924   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":10906:10925   */\n      dup3\n      add\n        /* \"#utility.yul\":10902:10930   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10867:10879   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":10942:10961   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":10939:10978   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":10974:10975   */\n      0x00\n        /* \"#utility.yul\":10971:10972   */\n      dup1\n        /* \"#utility.yul\":10964:10976   */\n      revert\n        /* \"#utility.yul\":10939:10978   */\n    tag_469:\n        /* \"#utility.yul\":10998:11009   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":11018:11228   */\n    tag_470:\n        /* \"#utility.yul\":11034:11040   */\n      dup3\n        /* \"#utility.yul\":11029:11032   */\n      dup5\n        /* \"#utility.yul\":11026:11041   */\n      lt\n        /* \"#utility.yul\":11018:11228   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":11107:11110   */\n      dup4\n        /* \"#utility.yul\":11101:11111   */\n      mload\n        /* \"#utility.yul\":11124:11155   */\n      tag_473\n        /* \"#utility.yul\":11149:11154   */\n      dup2\n        /* \"#utility.yul\":11124:11155   */\n      tag_370\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11168:11186   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11051:11063   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":11206:11218   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":11018:11228   */\n      jump(tag_470)\n        /* \"#utility.yul\":11743:11993   */\n    tag_376:\n        /* \"#utility.yul\":11828:11829   */\n      0x00\n        /* \"#utility.yul\":11838:11951   */\n    tag_477:\n        /* \"#utility.yul\":11852:11858   */\n      dup4\n        /* \"#utility.yul\":11849:11850   */\n      dup2\n        /* \"#utility.yul\":11846:11859   */\n      lt\n        /* \"#utility.yul\":11838:11951   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":11928:11939   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11922:11940   */\n      mload\n        /* \"#utility.yul\":11909:11920   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11902:11941   */\n      mstore\n        /* \"#utility.yul\":11874:11876   */\n      0x20\n        /* \"#utility.yul\":11867:11877   */\n      add\n        /* \"#utility.yul\":11838:11951   */\n      jump(tag_477)\n    tag_479:\n      pop\n      pop\n        /* \"#utility.yul\":11985:11986   */\n      0x00\n        /* \"#utility.yul\":11967:11983   */\n      swap2\n      add\n        /* \"#utility.yul\":11960:11987   */\n      mstore\n        /* \"#utility.yul\":11743:11993   */\n      jump\t// out\n        /* \"#utility.yul\":11998:12388   */\n    tag_377:\n        /* \"#utility.yul\":12073:12078   */\n      0x00\n        /* \"#utility.yul\":12107:12125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12099:12105   */\n      dup4\n        /* \"#utility.yul\":12096:12126   */\n      gt\n        /* \"#utility.yul\":12093:12149   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12129:12147   */\n      tag_482\n      tag_256\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12167:12224   */\n      tag_483\n        /* \"#utility.yul\":12212:12214   */\n      0x1f\n        /* \"#utility.yul\":12191:12206   */\n      dup5\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12187:12216   */\n      and\n        /* \"#utility.yul\":12218:12222   */\n      0x20\n        /* \"#utility.yul\":12183:12223   */\n      add\n        /* \"#utility.yul\":12167:12224   */\n      tag_374\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12158:12224   */\n      swap1\n      pop\n        /* \"#utility.yul\":12247:12253   */\n      dup3\n        /* \"#utility.yul\":12240:12245   */\n      dup2\n        /* \"#utility.yul\":12233:12254   */\n      mstore\n        /* \"#utility.yul\":12287:12290   */\n      dup4\n        /* \"#utility.yul\":12278:12284   */\n      dup4\n        /* \"#utility.yul\":12273:12276   */\n      dup4\n        /* \"#utility.yul\":12269:12285   */\n      add\n        /* \"#utility.yul\":12266:12291   */\n      gt\n        /* \"#utility.yul\":12263:12308   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":12304:12305   */\n      0x00\n        /* \"#utility.yul\":12301:12302   */\n      dup1\n        /* \"#utility.yul\":12294:12306   */\n      revert\n        /* \"#utility.yul\":12263:12308   */\n    tag_484:\n        /* \"#utility.yul\":12317:12382   */\n      tag_390\n        /* \"#utility.yul\":12375:12381   */\n      dup4\n        /* \"#utility.yul\":12368:12372   */\n      0x20\n        /* \"#utility.yul\":12361:12366   */\n      dup4\n        /* \"#utility.yul\":12357:12373   */\n      add\n        /* \"#utility.yul\":12352:12355   */\n      dup5\n        /* \"#utility.yul\":12317:12382   */\n      tag_376\n      jump\t// in\n        /* \"#utility.yul\":12393:12628   */\n    tag_378:\n        /* \"#utility.yul\":12446:12451   */\n      0x00\n        /* \"#utility.yul\":12499:12502   */\n      dup3\n        /* \"#utility.yul\":12492:12496   */\n      0x1f\n        /* \"#utility.yul\":12484:12490   */\n      dup4\n        /* \"#utility.yul\":12480:12497   */\n      add\n        /* \"#utility.yul\":12476:12503   */\n      slt\n        /* \"#utility.yul\":12466:12521   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12517:12518   */\n      0x00\n        /* \"#utility.yul\":12514:12515   */\n      dup1\n        /* \"#utility.yul\":12507:12519   */\n      revert\n        /* \"#utility.yul\":12466:12521   */\n    tag_487:\n        /* \"#utility.yul\":12539:12622   */\n      tag_390\n        /* \"#utility.yul\":12618:12621   */\n      dup4\n        /* \"#utility.yul\":12609:12615   */\n      dup4\n        /* \"#utility.yul\":12603:12616   */\n      mload\n        /* \"#utility.yul\":12596:12600   */\n      0x20\n        /* \"#utility.yul\":12588:12594   */\n      dup6\n        /* \"#utility.yul\":12584:12601   */\n      add\n        /* \"#utility.yul\":12539:12622   */\n      tag_377\n      jump\t// in\n        /* \"#utility.yul\":12633:13769   */\n    tag_281:\n        /* \"#utility.yul\":12776:12782   */\n      0x00\n        /* \"#utility.yul\":12784:12790   */\n      dup1\n        /* \"#utility.yul\":12792:12798   */\n      0x00\n        /* \"#utility.yul\":12800:12806   */\n      dup1\n        /* \"#utility.yul\":12808:12814   */\n      0x00\n        /* \"#utility.yul\":12816:12822   */\n      dup1\n        /* \"#utility.yul\":12869:12872   */\n      0xc0\n        /* \"#utility.yul\":12857:12866   */\n      dup8\n        /* \"#utility.yul\":12848:12855   */\n      dup10\n        /* \"#utility.yul\":12844:12867   */\n      sub\n        /* \"#utility.yul\":12840:12873   */\n      slt\n        /* \"#utility.yul\":12837:12890   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12886:12887   */\n      0x00\n        /* \"#utility.yul\":12883:12884   */\n      dup1\n        /* \"#utility.yul\":12876:12888   */\n      revert\n        /* \"#utility.yul\":12837:12890   */\n    tag_490:\n        /* \"#utility.yul\":12915:12924   */\n      dup7\n        /* \"#utility.yul\":12909:12925   */\n      mload\n        /* \"#utility.yul\":12899:12925   */\n      swap6\n      pop\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12954:12963   */\n      dup8\n        /* \"#utility.yul\":12950:12968   */\n      add\n        /* \"#utility.yul\":12944:12969   */\n      mload\n        /* \"#utility.yul\":12934:12969   */\n      swap5\n      pop\n        /* \"#utility.yul\":13012:13014   */\n      0x40\n        /* \"#utility.yul\":13001:13010   */\n      dup8\n        /* \"#utility.yul\":12997:13015   */\n      add\n        /* \"#utility.yul\":12991:13016   */\n      mload\n        /* \"#utility.yul\":13025:13056   */\n      tag_491\n        /* \"#utility.yul\":13050:13055   */\n      dup2\n        /* \"#utility.yul\":13025:13056   */\n      tag_370\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13124:13126   */\n      0x60\n        /* \"#utility.yul\":13109:13127   */\n      dup9\n      add\n        /* \"#utility.yul\":13103:13128   */\n      mload\n        /* \"#utility.yul\":13075:13080   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":13147:13165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13177:13191   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13174:13208   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":13204:13205   */\n      0x00\n        /* \"#utility.yul\":13201:13202   */\n      dup1\n        /* \"#utility.yul\":13194:13206   */\n      revert\n        /* \"#utility.yul\":13174:13208   */\n    tag_492:\n        /* \"#utility.yul\":13227:13287   */\n      tag_493\n        /* \"#utility.yul\":13279:13286   */\n      dup11\n        /* \"#utility.yul\":13270:13276   */\n      dup4\n        /* \"#utility.yul\":13259:13268   */\n      dup12\n        /* \"#utility.yul\":13255:13277   */\n      add\n        /* \"#utility.yul\":13227:13287   */\n      tag_378\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13217:13287   */\n      swap5\n      pop\n        /* \"#utility.yul\":13333:13336   */\n      0x80\n        /* \"#utility.yul\":13322:13331   */\n      dup10\n        /* \"#utility.yul\":13318:13337   */\n      add\n        /* \"#utility.yul\":13312:13338   */\n      mload\n        /* \"#utility.yul\":13296:13338   */\n      swap2\n      pop\n        /* \"#utility.yul\":13363:13365   */\n      dup1\n        /* \"#utility.yul\":13353:13361   */\n      dup3\n        /* \"#utility.yul\":13350:13366   */\n      gt\n        /* \"#utility.yul\":13347:13383   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":13379:13380   */\n      0x00\n        /* \"#utility.yul\":13376:13377   */\n      dup1\n        /* \"#utility.yul\":13369:13381   */\n      revert\n        /* \"#utility.yul\":13347:13383   */\n    tag_494:\n        /* \"#utility.yul\":13402:13464   */\n      tag_495\n        /* \"#utility.yul\":13456:13463   */\n      dup11\n        /* \"#utility.yul\":13445:13453   */\n      dup4\n        /* \"#utility.yul\":13434:13443   */\n      dup12\n        /* \"#utility.yul\":13430:13454   */\n      add\n        /* \"#utility.yul\":13402:13464   */\n      tag_378\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13392:13464   */\n      swap4\n      pop\n        /* \"#utility.yul\":13510:13513   */\n      0xa0\n        /* \"#utility.yul\":13499:13508   */\n      dup10\n        /* \"#utility.yul\":13495:13514   */\n      add\n        /* \"#utility.yul\":13489:13515   */\n      mload\n        /* \"#utility.yul\":13473:13515   */\n      swap2\n      pop\n        /* \"#utility.yul\":13540:13542   */\n      dup1\n        /* \"#utility.yul\":13530:13538   */\n      dup3\n        /* \"#utility.yul\":13527:13543   */\n      gt\n        /* \"#utility.yul\":13524:13560   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13556:13557   */\n      0x00\n        /* \"#utility.yul\":13553:13554   */\n      dup1\n        /* \"#utility.yul\":13546:13558   */\n      revert\n        /* \"#utility.yul\":13524:13560   */\n    tag_496:\n      pop\n        /* \"#utility.yul\":13579:13603   */\n      dup8\n      add\n        /* \"#utility.yul\":13634:13638   */\n      0x1f\n        /* \"#utility.yul\":13626:13639   */\n      dup2\n      add\n        /* \"#utility.yul\":13622:13649   */\n      dup10\n      sgt\n        /* \"#utility.yul\":13612:13667   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":13663:13664   */\n      0x00\n        /* \"#utility.yul\":13660:13661   */\n      dup1\n        /* \"#utility.yul\":13653:13665   */\n      revert\n        /* \"#utility.yul\":13612:13667   */\n    tag_497:\n        /* \"#utility.yul\":13686:13763   */\n      tag_498\n        /* \"#utility.yul\":13755:13762   */\n      dup10\n        /* \"#utility.yul\":13750:13752   */\n      dup3\n        /* \"#utility.yul\":13744:13753   */\n      mload\n        /* \"#utility.yul\":13739:13741   */\n      0x20\n        /* \"#utility.yul\":13735:13737   */\n      dup5\n        /* \"#utility.yul\":13731:13742   */\n      add\n        /* \"#utility.yul\":13686:13763   */\n      tag_377\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13676:13763   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":12633:13769   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":13774:14044   */\n    tag_379:\n        /* \"#utility.yul\":13815:13818   */\n      0x00\n        /* \"#utility.yul\":13853:13858   */\n      dup2\n        /* \"#utility.yul\":13847:13859   */\n      mload\n        /* \"#utility.yul\":13880:13886   */\n      dup1\n        /* \"#utility.yul\":13875:13878   */\n      dup5\n        /* \"#utility.yul\":13868:13887   */\n      mstore\n        /* \"#utility.yul\":13896:13972   */\n      tag_500\n        /* \"#utility.yul\":13965:13971   */\n      dup2\n        /* \"#utility.yul\":13958:13962   */\n      0x20\n        /* \"#utility.yul\":13953:13956   */\n      dup7\n        /* \"#utility.yul\":13949:13963   */\n      add\n        /* \"#utility.yul\":13942:13946   */\n      0x20\n        /* \"#utility.yul\":13935:13940   */\n      dup7\n        /* \"#utility.yul\":13931:13947   */\n      add\n        /* \"#utility.yul\":13896:13972   */\n      tag_376\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14026:14028   */\n      0x1f\n        /* \"#utility.yul\":14005:14020   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14001:14030   */\n      and\n        /* \"#utility.yul\":13992:14031   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":14033:14037   */\n      0x20\n        /* \"#utility.yul\":13988:14038   */\n      add\n      swap3\n        /* \"#utility.yul\":13774:14044   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14049:14613   */\n    tag_289:\n        /* \"#utility.yul\":14344:14345   */\n      0x01\n        /* \"#utility.yul\":14340:14341   */\n      dup1\n        /* \"#utility.yul\":14335:14338   */\n      0xa0\n        /* \"#utility.yul\":14331:14342   */\n      shl\n        /* \"#utility.yul\":14327:14346   */\n      sub\n        /* \"#utility.yul\":14319:14325   */\n      dup6\n        /* \"#utility.yul\":14315:14347   */\n      and\n        /* \"#utility.yul\":14304:14313   */\n      dup2\n        /* \"#utility.yul\":14297:14348   */\n      mstore\n        /* \"#utility.yul\":14384:14390   */\n      dup4\n        /* \"#utility.yul\":14379:14381   */\n      0x20\n        /* \"#utility.yul\":14368:14377   */\n      dup3\n        /* \"#utility.yul\":14364:14382   */\n      add\n        /* \"#utility.yul\":14357:14391   */\n      mstore\n        /* \"#utility.yul\":14427:14430   */\n      0x80\n        /* \"#utility.yul\":14422:14424   */\n      0x40\n        /* \"#utility.yul\":14411:14420   */\n      dup3\n        /* \"#utility.yul\":14407:14425   */\n      add\n        /* \"#utility.yul\":14400:14431   */\n      mstore\n        /* \"#utility.yul\":14278:14282   */\n      0x00\n        /* \"#utility.yul\":14454:14499   */\n      tag_502\n        /* \"#utility.yul\":14494:14497   */\n      0x80\n        /* \"#utility.yul\":14483:14492   */\n      dup4\n        /* \"#utility.yul\":14479:14498   */\n      add\n        /* \"#utility.yul\":14471:14477   */\n      dup6\n        /* \"#utility.yul\":14454:14499   */\n      tag_379\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14547:14556   */\n      dup3\n        /* \"#utility.yul\":14539:14545   */\n      dup2\n        /* \"#utility.yul\":14535:14557   */\n      sub\n        /* \"#utility.yul\":14530:14532   */\n      0x60\n        /* \"#utility.yul\":14519:14528   */\n      dup5\n        /* \"#utility.yul\":14515:14533   */\n      add\n        /* \"#utility.yul\":14508:14558   */\n      mstore\n        /* \"#utility.yul\":14575:14607   */\n      tag_461\n        /* \"#utility.yul\":14600:14606   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup6\n        /* \"#utility.yul\":14575:14607   */\n      tag_379\n      jump\t// in\n        /* \"#utility.yul\":14618:14895   */\n    tag_292:\n        /* \"#utility.yul\":14685:14691   */\n      0x00\n        /* \"#utility.yul\":14738:14740   */\n      0x20\n        /* \"#utility.yul\":14726:14735   */\n      dup3\n        /* \"#utility.yul\":14717:14724   */\n      dup5\n        /* \"#utility.yul\":14713:14736   */\n      sub\n        /* \"#utility.yul\":14709:14741   */\n      slt\n        /* \"#utility.yul\":14706:14758   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":14754:14755   */\n      0x00\n        /* \"#utility.yul\":14751:14752   */\n      dup1\n        /* \"#utility.yul\":14744:14756   */\n      revert\n        /* \"#utility.yul\":14706:14758   */\n    tag_505:\n        /* \"#utility.yul\":14786:14795   */\n      dup2\n        /* \"#utility.yul\":14780:14796   */\n      mload\n        /* \"#utility.yul\":14839:14844   */\n      dup1\n        /* \"#utility.yul\":14832:14845   */\n      iszero\n        /* \"#utility.yul\":14825:14846   */\n      iszero\n        /* \"#utility.yul\":14818:14823   */\n      dup2\n        /* \"#utility.yul\":14815:14847   */\n      eq\n        /* \"#utility.yul\":14805:14865   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":14861:14862   */\n      0x00\n        /* \"#utility.yul\":14858:14859   */\n      dup1\n        /* \"#utility.yul\":14851:14863   */\n      revert\n        /* \"#utility.yul\":14900:15028   */\n    tag_298:\n        /* \"#utility.yul\":14967:14976   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14988:14999   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14985:15022   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":15002:15020   */\n      tag_131\n      tag_373\n      jump\t// in\n        /* \"#utility.yul\":15033:15301   */\n    tag_318:\n        /* \"#utility.yul\":15120:15126   */\n      0x00\n        /* \"#utility.yul\":15173:15175   */\n      0x20\n        /* \"#utility.yul\":15161:15170   */\n      dup3\n        /* \"#utility.yul\":15152:15159   */\n      dup5\n        /* \"#utility.yul\":15148:15171   */\n      sub\n        /* \"#utility.yul\":15144:15176   */\n      slt\n        /* \"#utility.yul\":15141:15193   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":15189:15190   */\n      0x00\n        /* \"#utility.yul\":15186:15187   */\n      dup1\n        /* \"#utility.yul\":15179:15191   */\n      revert\n        /* \"#utility.yul\":15141:15193   */\n    tag_511:\n        /* \"#utility.yul\":15221:15230   */\n      dup2\n        /* \"#utility.yul\":15215:15231   */\n      mload\n        /* \"#utility.yul\":15240:15271   */\n      tag_390\n        /* \"#utility.yul\":15265:15270   */\n      dup2\n        /* \"#utility.yul\":15240:15271   */\n      tag_370\n      jump\t// in\n\n    auxdata: 0xa26469706673582212207121dd261cccd5df3ed945917028fcad6bed79bbf8c7bd85d55a95cd8cbf183b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611abb806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384e79842116100b8578063b4f3fcb71161007c578063b4f3fcb7146102c5578063b9209e33146102d6578063e744d789146102e9578063f0eb5e54146102fc578063f11abfd81461030f578063f2fde38b1461032057600080fd5b806384e79842146102495780638da5cb5b1461025c5780638e098ca11461028c57806397a6278e1461029f578063a8d29d1d146102b257600080fd5b8063454a03e01161010a578063454a03e0146101cf5780635dbe47e8146101e2578063653dc9f1146101f5578063670af6a914610208578063715018a61461021b5780637e42683b1461022357600080fd5b8063184b9559146101475780631ffbb0641461015c57806326d941ae146101845780633b239a7f146101975780633b3e12f4146101aa575b600080fd5b61015a6101553660046113d9565b610333565b005b61016f61016a366004611424565b61056a565b60405190151581526020015b60405180910390f35b61015a610192366004611424565b61057c565b61015a6101a5366004611458565b6105ce565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161017b565b61015a6101dd366004611491565b61069a565b61016f6101f0366004611424565b61076d565b61015a61020336600461151d565b610797565b61015a610216366004611424565b610835565b61015a610887565b610236610231366004611424565b61089b565b60405161ffff909116815260200161017b565b61015a610257366004611424565b61090a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101b7565b61015a61029a3660046115b7565b61097a565b61015a6102ad366004611424565b610a50565b61015a6102c0366004611424565b610ac0565b6002546001600160a01b03166101b7565b61016f6102e4366004611424565b610b8d565b61015a6102f7366004611424565b611016565b6101b761030a366004611424565b611068565b6003546001600160a01b03166101b7565b61015a61032e366004611424565b6110d7565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103795750825b905060008267ffffffffffffffff1660011480156103965750303b155b9050811580156103a4575080155b156103c25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156103ec57845460ff60401b1916600160401b1785555b6001600160a01b0388161580159061040c57506001600160a01b03871615155b801561042057506001600160a01b03861615155b6104455760405162461bcd60e51b815260040161043c906115e5565b60405180910390fd5b600180546001600160a01b03808a166001600160a01b03199283168117909355600280548c831690841617905560038054918a16919092161790556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a26040516001600160a01b038916907f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a26040516001600160a01b038716907f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a261051a33611115565b831561056057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b60006105768183611126565b92915050565b6105846111a9565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a250565b6105d73361056a565b6105f35760405162461bcd60e51b815260040161043c9061161c565b600354604051639f3418d560e01b81526001600160a01b03848116600483015261ffff8416602483015290911690639f3418d590604401600060405180830381600087803b15801561064457600080fd5b505af1158015610658573d6000803e3d6000fd5b505060405161ffff841692506001600160a01b03851691507f04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee85390600090a35050565b6106a33361056a565b6106bf5760405162461bcd60e51b815260040161043c9061161c565b60035460405163a53410dd60e01b81526001600160a01b038581166004830152848116602483015261ffff841660448301529091169063a53410dd90606401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b50506040516001600160a01b038086169350861691507f6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af1990600090a3505050565b60008061077983611068565b6001600160a01b03160361078f57506000919050565b506001919050565b60005b8581101561082c5761081a8787838181106107b7576107b761166a565b90506020020160208101906107cc9190611424565b8686848181106107de576107de61166a565b90506020020160208101906107f39190611424565b8585858181106108055761080561166a565b90506020020160208101906101dd9190611680565b80610824816116b3565b91505061079a565b50505050505050565b61083d6111a9565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a250565b61088f6111a9565b6108996000611204565b565b600354604051631c9f84ef60e21b81526001600160a01b038381166004830152600092169063727e13bc90602401602060405180830381865afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906116cc565b6109126111a9565b6001600160a01b0381166109385760405162461bcd60e51b815260040161043c906115e5565b610943600082611275565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6109833361056a565b61099f5760405162461bcd60e51b815260040161043c9061161c565b60006109aa83611068565b600354604051637402e7c360e11b81526001600160a01b038681166004830152858116602483015292935091169063e805cf8690604401600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b50506040516001600160a01b038086169350841691507fe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf601090600090a3505050565b610a586111a9565b6001600160a01b038116610a7e5760405162461bcd60e51b815260040161043c906115e5565b610a896000826112f1565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b610ac93361056a565b610ae55760405162461bcd60e51b815260040161043c9061161c565b6000610af082611068565b60035460405163cf191bcd60e01b81526001600160a01b03858116600483015292935091169063cf191bcd90602401600060405180830381600087803b158015610b3957600080fd5b505af1158015610b4d573d6000803e3d6000fd5b50506040516001600160a01b038085169350851691507f59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f32790600090a35050565b600080610b9983611068565b6001600160a01b031603610baf57506000919050565b600154604080516337c2758160e21b815290516000926001600160a01b03169163df09d60491600480830192869291908290030181865afa158015610bf8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c209190810190611754565b90508051600003610c345750600192915050565b600080600060608060005b86518110156110075760025487516000916001600160a01b0316906352c111d1908a9085908110610c7257610c7261166a565b60200260200101516040518263ffffffff1660e01b8152600401610c9891815260200190565b600060405180830381865afa158015610cb5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cdd91908101906117ea565b90508051600003610cf8575060009998505050505050505050565b6000815167ffffffffffffffff811115610d1457610d146116e9565b604051908082528060200260200182016040528015610d3d578160200160208202803683370190505b50905060005b8251811015610dea57828181518110610d5e57610d5e61166a565b60200260200101518a8581518110610d7857610d7861166a565b6020026020010151604051602001610da59291906001600160a01b03929092168252602082015260400190565b60405160208183030381529060405280519060200120828281518110610dcd57610dcd61166a565b602090810291909101015280610de2816116b3565b915050610d43565b5060005b8151811015610ff157610e008c611068565b6001600160a01b031663c9100bcb838381518110610e2057610e2061166a565b60200260200101516040518263ffffffff1660e01b8152600401610e4691815260200190565b600060405180830381865afa158015610e63573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8b919081019061190c565b508e51949d50929b50909950975095508a9085908110610ead57610ead61166a565b60200260200101518903610fb957866001600160a01b031663c0969a6e610ed38e611068565b8c8781518110610ee557610ee561166a565b602002602001015189896040518563ffffffff1660e01b8152600401610f0e94939291906119fa565b602060405180830381865afa925050508015610f47575060408051601f3d908101601f19168201909252610f4491810190611a33565b60015b610f765760018251610f599190611a55565b8103610f71575060009b9a5050505050505050505050565b610fdf565b8015610f8157825191505b80158015610f9b575060018351610f989190611a55565b82145b15610fb3575060009c9b505050505050505050505050565b50610fdf565b60018251610fc79190611a55565b8103610fdf575060009b9a5050505050505050505050565b80610fe9816116b3565b915050610dee565b5050508080610fff906116b3565b915050610c3f565b50600198975050505050505050565b61101e6111a9565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a250565b600354604051637988d3a560e01b81526001600160a01b0383811660048301526000921690637988d3a590602401602060405180830381865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190611a68565b6110df6111a9565b6001600160a01b03811661110957604051631e4fbdf760e01b81526000600482015260240161043c565b61111281611204565b50565b61111d611373565b611112816113bc565b60006001600160a01b0382166111895760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161043c565b506001600160a01b03166000908152602091909152604090205460ff1690565b336111db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108995760405163118cdaa760e01b815233600482015260240161043c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61127f8282611126565b156112cc5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161043c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6112fb8282611126565b6113515760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161043c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661089957604051631afcd79f60e31b815260040160405180910390fd5b6110df611373565b6001600160a01b038116811461111257600080fd5b6000806000606084860312156113ee57600080fd5b83356113f9816113c4565b92506020840135611409816113c4565b91506040840135611419816113c4565b809150509250925092565b60006020828403121561143657600080fd5b8135611441816113c4565b9392505050565b61ffff8116811461111257600080fd5b6000806040838503121561146b57600080fd5b8235611476816113c4565b9150602083013561148681611448565b809150509250929050565b6000806000606084860312156114a657600080fd5b83356114b1816113c4565b925060208401356114c1816113c4565b9150604084013561141981611448565b60008083601f8401126114e357600080fd5b50813567ffffffffffffffff8111156114fb57600080fd5b6020830191508360208260051b850101111561151657600080fd5b9250929050565b6000806000806000806060878903121561153657600080fd5b863567ffffffffffffffff8082111561154e57600080fd5b61155a8a838b016114d1565b9098509650602089013591508082111561157357600080fd5b61157f8a838b016114d1565b9096509450604089013591508082111561159857600080fd5b506115a589828a016114d1565b979a9699509497509295939492505050565b600080604083850312156115ca57600080fd5b82356115d5816113c4565b91506020830135611486816113c4565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b6020808252602e908201527f4167656e74526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204167656e7420726f6c6560901b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561169257600080fd5b813561144181611448565b634e487b7160e01b600052601160045260246000fd5b6000600182016116c5576116c561169d565b5060010190565b6000602082840312156116de57600080fd5b815161144181611448565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611728576117286116e9565b604052919050565b600067ffffffffffffffff82111561174a5761174a6116e9565b5060051b60200190565b6000602080838503121561176757600080fd5b825167ffffffffffffffff81111561177e57600080fd5b8301601f8101851361178f57600080fd5b80516117a261179d82611730565b6116ff565b81815260059190911b820183019083810190878311156117c157600080fd5b928401925b828410156117df578351825292840192908401906117c6565b979650505050505050565b600060208083850312156117fd57600080fd5b825167ffffffffffffffff81111561181457600080fd5b8301601f8101851361182557600080fd5b805161183361179d82611730565b81815260059190911b8201830190838101908783111561185257600080fd5b928401925b828410156117df57835161186a816113c4565b82529284019290840190611857565b60005b8381101561189457818101518382015260200161187c565b50506000910152565b600067ffffffffffffffff8311156118b7576118b76116e9565b6118ca601f8401601f19166020016116ff565b90508281528383830111156118de57600080fd5b611441836020830184611879565b600082601f8301126118fd57600080fd5b6114418383516020850161189d565b60008060008060008060c0878903121561192557600080fd5b8651955060208701519450604087015161193e816113c4565b606088015190945067ffffffffffffffff8082111561195c57600080fd5b6119688a838b016118ec565b9450608089015191508082111561197e57600080fd5b61198a8a838b016118ec565b935060a08901519150808211156119a057600080fd5b508701601f810189136119b257600080fd5b6119c18982516020840161189d565b9150509295509295509295565b600081518084526119e6816020860160208601611879565b601f01601f19169290920160200192915050565b60018060a01b0385168152836020820152608060408201526000611a2160808301856119ce565b82810360608401526117df81856119ce565b600060208284031215611a4557600080fd5b8151801515811461144157600080fd5b818103818111156105765761057661169d565b600060208284031215611a7a57600080fd5b8151611441816113c456fea26469706673582212207121dd261cccd5df3ed945917028fcad6bed79bbf8c7bd85d55a95cd8cbf183b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ABB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84E79842 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB4F3FCB7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB4F3FCB7 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE744D789 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF0EB5E54 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xF11ABFD8 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84E79842 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8E098CA1 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA8D29D1D EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x454A03E0 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x454A03E0 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x653DC9F1 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x670AF6A9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x7E42683B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x184B9559 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x26D941AE EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x3B239A7F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x3B3E12F4 EQ PUSH2 0x1AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x887 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x396 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x420 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO JUMPDEST PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP13 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP11 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x51A CALLER PUSH2 0x1115 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x560 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP2 DUP4 PUSH2 0x1126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x584 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5D7 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9F3418D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9F3418D5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xFFFF DUP5 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 POP PUSH32 0x4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A3 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA53410DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA53410DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 POP DUP7 AND SWAP2 POP PUSH32 0x6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x779 DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x78F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH2 0x81A DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B7 PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x805 JUMPI PUSH2 0x805 PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST DUP1 PUSH2 0x824 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x83D PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x88F PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x899 PUSH1 0x0 PUSH2 0x1204 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C9F84EF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x727E13BC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x912 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x943 PUSH1 0x0 DUP3 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x983 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7402E7C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xE805CF86 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 POP DUP5 AND SWAP2 POP PUSH32 0xE98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x0 DUP3 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xAC9 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCF191BCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xCF191BCD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 POP DUP6 AND SWAP2 POP PUSH32 0x59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB99 DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBAF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x37C27581 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDF09D604 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC20 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC34 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1007 JUMPI PUSH1 0x2 SLOAD DUP8 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x52C111D1 SWAP1 DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCDD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x17EA JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCF8 JUMPI POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD14 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD3D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xDEA JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD5E JUMPI PUSH2 0xD5E PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI PUSH2 0xD78 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA5 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xDE2 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD43 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xE00 DUP13 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9100BCB DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE20 JUMPI PUSH2 0xE20 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE8B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST POP DUP15 MLOAD SWAP5 SWAP14 POP SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xEAD JUMPI PUSH2 0xEAD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 SUB PUSH2 0xFB9 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0969A6E PUSH2 0xED3 DUP15 PUSH2 0x1068 JUMP JUMPDEST DUP13 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI PUSH2 0xEE5 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF47 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF44 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x1 DUP3 MLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP2 SUB PUSH2 0xF71 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF81 JUMPI DUP3 MLOAD SWAP2 POP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0xF9B JUMPI POP PUSH1 0x1 DUP4 MLOAD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP3 EQ JUMPDEST ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x0 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP2 SUB PUSH2 0xFDF JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xFE9 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDEE JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xFFF SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC3F JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x101E PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7988D3A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7988D3A5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x43C JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x1204 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x111D PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x11DB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x43C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x127F DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12FB DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DF PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13F9 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1409 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1419 DUP2 PUSH2 0x13C4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1476 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14B1 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1419 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155A DUP11 DUP4 DUP12 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x157F DUP11 DUP4 DUP12 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A5 DUP10 DUP3 DUP11 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15D5 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x746865204167656E7420726F6C65 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16C5 JUMPI PUSH2 0x16C5 PUSH2 0x169D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1441 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1728 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x174A JUMPI PUSH2 0x174A PUSH2 0x16E9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x178F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x17A2 PUSH2 0x179D DUP3 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x17DF JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1833 PUSH2 0x179D DUP3 PUSH2 0x1730 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x17DF JUMPI DUP4 MLOAD PUSH2 0x186A DUP2 PUSH2 0x13C4 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1894 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x187C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x18B7 JUMPI PUSH2 0x18B7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x16FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x18DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1441 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1441 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x193E DUP2 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1968 DUP11 DUP4 DUP12 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198A DUP11 DUP4 DUP12 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x19B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C1 DUP10 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19CE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x17DF DUP2 DUP6 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x576 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1441 DUP2 PUSH2 0x13C4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x21DD261CCCD5DF3ED945917028FCAD6BED79 0xBB 0xF8 0xC7 0xBD DUP6 0xD5 GAS SWAP6 0xCD DUP13 0xBF XOR EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4256:7800:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_378": {
									"entryPoint": 4373,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_405": {
									"entryPoint": 5052,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_693": {
									"entryPoint": 4979,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_446": {
									"entryPoint": 4521,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_770": {
									"entryPoint": null,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_761": {
									"entryPoint": null,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_517": {
									"entryPoint": 4612,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAgent_1955": {
									"entryPoint": 2314,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2032": {
									"entryPoint": 4725,
									"id": 2032,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@batchRegisterIdentity_946": {
									"entryPoint": 1943,
									"id": 946,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@contains_1402": {
									"entryPoint": 1901,
									"id": 1402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deleteIdentity_1030": {
									"entryPoint": 2752,
									"id": 1030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@has_2085": {
									"entryPoint": 4390,
									"id": 2085,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@identityStorage_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@identity_1446": {
									"entryPoint": 4200,
									"id": 1446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@init_905": {
									"entryPoint": 819,
									"id": 905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@investorCountry_1342": {
									"entryPoint": 2203,
									"id": 1342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAgent_1996": {
									"entryPoint": 1386,
									"id": 1996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isVerified_1327": {
									"entryPoint": 2957,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@issuersRegistry_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerIdentity_1430": {
									"entryPoint": 1690,
									"id": 1430,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@removeAgent_1983": {
									"entryPoint": 2640,
									"id": 1983,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_2058": {
									"entryPoint": 4849,
									"id": 2058,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_460": {
									"entryPoint": 2183,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setClaimTopicsRegistry_1070": {
									"entryPoint": 2101,
									"id": 1070,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setIdentityRegistryStorage_1050": {
									"entryPoint": 1404,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTrustedIssuersRegistry_1090": {
									"entryPoint": 4118,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@topicsRegistry_1364": {
									"entryPoint": null,
									"id": 1364,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_488": {
									"entryPoint": 4311,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCountry_1002": {
									"entryPoint": 1486,
									"id": 1002,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateIdentity_978": {
									"entryPoint": 2426,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_available_length_bytes_fromMemory": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes_fromMemory": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$328": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$328t_uint16": {
									"entryPoint": 5265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IIdentity_$328": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IIdentity_$328_fromMemory": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16_fromMemory": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_bytes": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_contract$_IIdentity_$328__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_contract$_IIdentity_$328_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IClaimIssuer_$49_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$1479__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$1770__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$328__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$328_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$1871__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint16": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16468:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:15"
															},
															"nodeType": "YulIf",
															"src": "69:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "254:425:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "275:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "284:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "271:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "296:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "267:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:32:15"
															},
															"nodeType": "YulIf",
															"src": "264:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "325:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "351:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "338:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "329:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "395:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "370:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "410:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "420:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "410:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "434:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "466:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "477:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "462:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "449:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "438:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "515:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "490:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "490:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "532:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "542:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "532:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "558:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "590:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "601:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "573:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "562:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "639:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "614:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "614:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "656:17:15",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "666:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "204:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "215:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "227:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "235:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "243:6:15",
														"type": ""
													}
												],
												"src": "150:529:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:177:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "800:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "809:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "812:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "802:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "802:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "802:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:32:15"
															},
															"nodeType": "YulIf",
															"src": "764:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "825:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "851:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "838:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "829:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "895:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "870:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "910:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "920:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "910:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "720:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "731:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "743:6:15",
														"type": ""
													}
												],
												"src": "684:247:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1031:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1041:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1053:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1049:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1041:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1108:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1101:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1094:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1076:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1011:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1022:4:15",
														"type": ""
													}
												],
												"src": "936:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1172:73:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1223:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1232:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1225:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1225:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1225:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1195:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1206:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1213:6:15",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1202:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1202:18:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1192:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1192:29:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1185:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:37:15"
															},
															"nodeType": "YulIf",
															"src": "1182:57:15"
														}
													]
												},
												"name": "validator_revert_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1161:5:15",
														"type": ""
													}
												],
												"src": "1128:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1336:300:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1357:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1366:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1378:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:32:15"
															},
															"nodeType": "YulIf",
															"src": "1346:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1407:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1420:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1411:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1477:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1452:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1452:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1492:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1502:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1516:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1548:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1559:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1531:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1520:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1596:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1572:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1572:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1572:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1613:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1623:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1294:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1305:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1317:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1325:6:15",
														"type": ""
													}
												],
												"src": "1250:386:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1771:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1781:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1793:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1789:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1781:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1823:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1854:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1859:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1850:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1850:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1863:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1816:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$1479__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1740:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1751:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1762:4:15",
														"type": ""
													}
												],
												"src": "1641:232:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:424:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2044:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2053:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2046:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2019:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2040:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:32:15"
															},
															"nodeType": "YulIf",
															"src": "2008:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2069:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2095:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2082:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2073:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2139:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2114:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2154:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2164:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2178:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2210:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2221:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2206:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2206:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2193:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2182:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2259:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2234:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2234:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2276:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2286:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2302:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2334:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2345:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2317:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2306:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2382:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2358:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2399:17:15",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2409:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$328t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1948:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1959:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1971:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1979:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1987:6:15",
														"type": ""
													}
												],
												"src": "1878:544:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2511:283:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2560:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2569:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2562:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2539:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2547:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2535:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2554:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2531:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2524:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:35:15"
															},
															"nodeType": "YulIf",
															"src": "2521:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2585:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2608:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2595:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2658:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2667:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2670:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2660:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2660:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2660:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2630:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2627:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:30:15"
															},
															"nodeType": "YulIf",
															"src": "2624:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2683:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2699:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2707:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2683:8:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2772:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2784:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2774:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2774:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2774:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2735:6:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2747:1:15",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2750:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2743:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2743:14:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:27:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2760:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:38:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2724:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:47:15"
															},
															"nodeType": "YulIf",
															"src": "2721:67:15"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2474:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2482:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2490:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2500:6:15",
														"type": ""
													}
												],
												"src": "2427:367:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3024:879:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3070:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3072:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3072:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3045:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3041:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3041:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3037:32:15"
															},
															"nodeType": "YulIf",
															"src": "3034:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3095:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3122:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3109:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3099:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3141:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3151:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3145:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3196:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3205:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3208:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3198:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3198:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3198:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3184:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3192:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:14:15"
															},
															"nodeType": "YulIf",
															"src": "3178:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3221:96:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3300:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3285:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3285:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3309:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3247:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:70:15"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "3225:8:15",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "3235:8:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:18:15",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "3336:8:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3353:18:15",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "3363:8:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3380:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3424:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3396:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3384:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3457:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3466:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3459:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3459:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3459:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3443:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3453:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3440:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:16:15"
															},
															"nodeType": "YulIf",
															"src": "3437:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3482:98:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3550:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3561:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3546:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3572:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3508:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:72:15"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3486:8:15",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3496:8:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3589:18:15",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3599:8:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3616:18:15",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3626:8:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3616:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3643:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3676:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3687:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3672:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3672:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3659:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:32:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3647:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3720:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3729:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3732:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3722:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3722:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3722:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3706:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3716:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3703:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:16:15"
															},
															"nodeType": "YulIf",
															"src": "3700:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3745:98:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3813:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3824:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3835:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3771:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:72:15"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "3749:8:15",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "3759:8:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3852:18:15",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "3862:8:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3879:18:15",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "3889:8:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3879:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2950:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2961:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2973:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2981:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2989:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2997:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3005:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3013:6:15",
														"type": ""
													}
												],
												"src": "2799:1104:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:89:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4059:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4074:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4070:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4052:38:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3976:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:15",
														"type": ""
													}
												],
												"src": "3908:188:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4202:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4212:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4224:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4235:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4220:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4212:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4269:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4285:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4290:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4281:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4281:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4294:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4277:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4171:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4182:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4193:4:15",
														"type": ""
													}
												],
												"src": "4101:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4413:301:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4459:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4468:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4471:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4461:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4461:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4461:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4434:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4443:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4430:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4430:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4455:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:32:15"
															},
															"nodeType": "YulIf",
															"src": "4423:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4484:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4497:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4488:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4554:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4529:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4529:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4569:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4579:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4593:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4608:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4597:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4674:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4649:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4649:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4691:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4701:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4691:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$328",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4371:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4382:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4394:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4402:6:15",
														"type": ""
													}
												],
												"src": "4309:405:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4852:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4862:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4874:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4885:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4870:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4862:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4904:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4919:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4935:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4940:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4931:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4931:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4944:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4927:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4927:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4915:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4915:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$1871__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4821:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4832:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4843:4:15",
														"type": ""
													}
												],
												"src": "4719:235:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5077:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5087:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5095:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5087:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5129:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5144:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5160:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5165:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5156:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5156:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5169:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5152:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5152:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$328__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5046:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5057:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5068:4:15",
														"type": ""
													}
												],
												"src": "4959:220:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5318:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5328:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5340:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5351:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5336:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5328:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5370:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5385:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5401:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5406:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5397:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5397:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5410:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5393:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5393:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$1770__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5287:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5298:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5309:4:15",
														"type": ""
													}
												],
												"src": "5184:236:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5599:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5616:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5627:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5609:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5650:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5661:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5646:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5639:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5639:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5689:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5700:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:18:15"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5705:33:15",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:61:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:61:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5748:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5756:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5748:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5576:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5590:4:15",
														"type": ""
													}
												],
												"src": "5425:355:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5893:101:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5903:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5915:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5926:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5903:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5960:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5968:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5956:31:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5938:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:50:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5938:50:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5862:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5873:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5884:4:15",
														"type": ""
													}
												],
												"src": "5785:209:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6173:236:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6190:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6201:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6183:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6183:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6224:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6235:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6220:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:2:15",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6213:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6263:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6274:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6259:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6259:18:15"
																	},
																	{
																		"hexValue": "4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6279:34:15",
																		"type": "",
																		"value": "AgentRole: caller does not have "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6252:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6334:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6345:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6330:18:15"
																	},
																	{
																		"hexValue": "746865204167656e7420726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6350:16:15",
																		"type": "",
																		"value": "the Agent role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6323:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6323:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6323:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6376:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6388:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6399:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6384:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6376:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6150:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6164:4:15",
														"type": ""
													}
												],
												"src": "5999:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6541:158:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6551:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6563:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6574:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6559:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6551:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6593:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6608:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6624:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6629:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6620:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6620:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6633:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6616:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6616:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6604:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6604:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6586:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6657:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6668:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6677:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6685:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6646:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6646:47:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6502:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6513:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6521:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6532:4:15",
														"type": ""
													}
												],
												"src": "6414:285:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6876:231:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6886:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6898:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6909:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6894:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6894:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6886:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6921:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6939:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6944:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6935:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6935:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6925:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6966:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6981:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6989:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7024:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7009:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7033:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7041:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7029:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7002:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7065:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7076:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7061:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:19:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7054:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7054:47:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IIdentity_$328_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6829:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6840:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6848:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6856:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6867:4:15",
														"type": ""
													}
												],
												"src": "6704:403:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7144:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7161:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7168:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7173:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7154:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7204:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7194:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7225:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7218:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7112:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7331:177:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7377:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7386:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7379:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7379:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7379:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7352:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7344:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:32:15"
															},
															"nodeType": "YulIf",
															"src": "7341:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7402:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7428:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7415:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7406:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7472:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7447:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7447:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7487:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7497:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IIdentity_$328",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7297:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7308:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7320:6:15",
														"type": ""
													}
												],
												"src": "7244:264:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7582:176:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7628:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7637:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7640:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7630:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7630:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7603:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7612:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7599:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7599:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7624:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:32:15"
															},
															"nodeType": "YulIf",
															"src": "7592:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7653:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7666:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7657:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7722:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "7698:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7698:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7698:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7737:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7747:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7548:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7559:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7571:6:15",
														"type": ""
													}
												],
												"src": "7513:245:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7795:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7819:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7824:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7815:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7815:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7852:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7845:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7845:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7763:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7942:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7973:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7975:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7975:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7975:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7969:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7965:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7965:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7955:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:17:15"
															},
															"nodeType": "YulIf",
															"src": "7952:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8004:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8015:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8011:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7924:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7934:3:15",
														"type": ""
													}
												],
												"src": "7895:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8115:169:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8161:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8170:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8173:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8163:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8163:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8163:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8136:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8145:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8132:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8157:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8128:32:15"
															},
															"nodeType": "YulIf",
															"src": "8125:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8186:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8205:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8199:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8199:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8190:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8248:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "8224:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8224:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8263:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8273:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8263:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8081:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8092:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8104:6:15",
														"type": ""
													}
												],
												"src": "8035:249:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8435:175:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8445:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8457:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8468:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8445:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8480:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8498:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8503:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8494:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8507:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8490:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8490:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8484:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8540:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8548:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8536:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8536:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8518:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8572:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8583:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8568:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8592:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8600:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8588:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8588:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8561:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8561:43:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IIdentity_$328__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8396:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8407:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8415:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8426:4:15",
														"type": ""
													}
												],
												"src": "8289:321:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8664:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8671:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8676:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8667:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8667:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8704:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8707:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8697:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8728:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8731:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8721:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8721:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8615:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8792:230:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8802:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8818:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8812:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8812:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8802:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8830:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8852:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "8868:4:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8874:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8864:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8864:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8883:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8879:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8879:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8860:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8860:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8834:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8963:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8965:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8965:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8965:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8906:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8918:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8903:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8903:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8942:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8954:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8939:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8900:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:62:15"
															},
															"nodeType": "YulIf",
															"src": "8897:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9001:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9005:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8994:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8772:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8781:6:15",
														"type": ""
													}
												],
												"src": "8747:275:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9096:114:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9140:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9142:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9142:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9142:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9112:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9120:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9109:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:30:15"
															},
															"nodeType": "YulIf",
															"src": "9106:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9171:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9187:1:15",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9190:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9183:14:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9199:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9179:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:25:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9171:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9076:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9087:4:15",
														"type": ""
													}
												],
												"src": "9027:183:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9321:775:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9331:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9341:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9335:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9388:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9397:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9400:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9390:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9390:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9390:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9363:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9372:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9359:23:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9384:2:15"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9355:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:32:15"
															},
															"nodeType": "YulIf",
															"src": "9352:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9413:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9433:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9427:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:16:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9417:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9486:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9495:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9498:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9488:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9488:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9488:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9458:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9466:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9455:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9455:30:15"
															},
															"nodeType": "YulIf",
															"src": "9452:50:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9511:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9536:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9521:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9515:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9591:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9600:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9603:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9593:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9593:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9593:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "9570:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9574:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9566:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9566:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9581:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9562:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9555:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9555:35:15"
															},
															"nodeType": "YulIf",
															"src": "9552:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9616:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9632:2:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9626:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:9:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "9620:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9644:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "9711:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "9671:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9671:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9655:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9648:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9724:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "9737:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "9728:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9756:3:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "9761:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9773:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9784:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9789:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9780:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9773:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9801:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "9823:2:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9831:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "9834:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9827:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9827:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9819:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9819:19:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9840:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9815:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9815:28:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9805:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9875:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9884:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9887:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9877:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9877:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9877:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9858:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9866:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9855:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:19:15"
															},
															"nodeType": "YulIf",
															"src": "9852:39:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9900:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9915:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9919:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9911:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:11:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "9904:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9987:79:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10008:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "10019:3:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10013:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10013:10:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10001:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10001:23:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10001:23:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10037:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10048:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10053:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10044:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10044:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10037:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9942:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9947:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9939:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9955:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9957:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9968:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9973:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9964:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9964:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9957:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9935:3:15",
																"statements": []
															},
															"src": "9931:135:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10075:15:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "10085:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9287:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9298:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9310:6:15",
														"type": ""
													}
												],
												"src": "9215:881:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10202:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10212:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10224:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10235:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10220:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10212:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10254:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10265:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10247:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10247:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10247:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10171:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10182:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10193:4:15",
														"type": ""
													}
												],
												"src": "10101:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10408:850:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10418:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10428:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10422:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10475:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10484:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10487:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10477:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10477:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10477:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10450:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10459:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10446:23:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10471:2:15"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:32:15"
															},
															"nodeType": "YulIf",
															"src": "10439:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10500:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10520:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10514:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10514:16:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10504:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10573:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10582:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10585:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10575:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10575:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10575:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10545:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10553:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10542:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10542:30:15"
															},
															"nodeType": "YulIf",
															"src": "10539:50:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10598:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10612:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10623:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10608:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10608:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10602:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10678:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10687:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10690:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10680:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10680:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10680:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "10657:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10661:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10653:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10653:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10668:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10649:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:35:15"
															},
															"nodeType": "YulIf",
															"src": "10639:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10703:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10719:2:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10713:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:9:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "10707:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10731:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "10798:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "10758:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10742:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10742:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10735:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10811:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "10824:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "10815:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10843:3:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "10848:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10836:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10836:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10836:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10860:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10871:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10876:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10867:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10867:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10860:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10888:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "10910:2:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10918:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "10921:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10914:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10914:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10906:19:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10927:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10902:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10902:28:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10892:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10962:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10971:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10974:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10964:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10964:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10964:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10945:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10953:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10942:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10942:19:15"
															},
															"nodeType": "YulIf",
															"src": "10939:39:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10987:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11002:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11006:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:11:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "10991:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11074:154:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11088:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11107:3:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11101:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11101:10:15"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "11092:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "11149:5:15"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "11124:24:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11124:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11124:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11175:3:15"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "11180:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11168:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11168:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11168:18:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11199:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11210:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11215:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11206:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11206:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11199:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11029:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11034:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11026:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11026:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11042:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11044:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11055:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11060:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11051:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11051:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11044:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11022:3:15",
																"statements": []
															},
															"src": "11018:210:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11237:15:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "11247:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11237:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10374:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10385:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10397:6:15",
														"type": ""
													}
												],
												"src": "10283:975:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11411:145:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11421:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11433:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11444:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11429:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11421:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11463:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11478:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11494:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11499:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11490:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11490:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11503:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11486:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11486:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11474:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11474:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11456:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11456:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11538:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11523:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11543:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11516:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11516:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11516:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IClaimIssuer_$49_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11372:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11383:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11391:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11402:4:15",
														"type": ""
													}
												],
												"src": "11263:293:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11662:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11672:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11684:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11695:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11680:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11680:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11672:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11714:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11725:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11707:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11707:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11631:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11642:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11653:4:15",
														"type": ""
													}
												],
												"src": "11561:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11809:184:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11819:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11828:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11823:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11888:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11913:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11918:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11909:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11909:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11932:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11937:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11928:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11928:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11922:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11922:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11902:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11902:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11902:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11849:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11852:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11846:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11860:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11862:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11871:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11874:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11867:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11867:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11862:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11842:3:15",
																"statements": []
															},
															"src": "11838:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11971:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11976:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11967:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11985:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11960:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11960:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11787:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11792:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11797:6:15",
														"type": ""
													}
												],
												"src": "11743:250:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12083:305:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12127:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12129:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12129:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12129:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12099:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12107:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12096:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12096:30:15"
															},
															"nodeType": "YulIf",
															"src": "12093:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12158:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12195:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12203:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12191:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12191:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12212:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12208:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12208:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12187:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12187:29:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12218:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12183:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12183:40:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12167:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:57:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12158:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12240:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12247:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:21:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12292:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12301:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12304:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12294:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12294:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12294:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12273:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12278:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12269:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12269:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12287:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12266:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12266:25:15"
															},
															"nodeType": "YulIf",
															"src": "12263:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12352:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "12361:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12368:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12357:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12357:16:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12375:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12317:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12317:65:15"
														}
													]
												},
												"name": "abi_decode_available_length_bytes_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12052:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12057:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12065:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12073:5:15",
														"type": ""
													}
												],
												"src": "11998:390:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12456:172:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12505:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12514:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12517:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12507:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12507:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12507:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12484:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12492:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12480:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12480:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12499:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12476:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12476:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12469:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12469:35:15"
															},
															"nodeType": "YulIf",
															"src": "12466:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12530:92:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12588:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12596:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12584:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12584:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12609:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12603:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12603:13:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12618:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "12539:44:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:83:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12530:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12430:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12438:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12446:5:15",
														"type": ""
													}
												],
												"src": "12393:235:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12827:942:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12874:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12883:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12886:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12876:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12876:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12876:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12848:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12857:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12844:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12844:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12869:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12840:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12840:33:15"
															},
															"nodeType": "YulIf",
															"src": "12837:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12899:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12915:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12909:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12899:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12934:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12944:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12944:25:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12978:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13001:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13012:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12997:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12997:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12991:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12991:25:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12982:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13050:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "13025:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13065:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13075:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "13065:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13089:39:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13113:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13124:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13109:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13109:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13103:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:25:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "13093:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13137:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13147:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13141:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13192:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13201:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13204:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13194:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13194:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13194:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13180:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13188:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13177:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13177:14:15"
															},
															"nodeType": "YulIf",
															"src": "13174:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13217:70:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13259:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13270:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13255:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13255:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13279:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13227:27:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:60:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "13217:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13296:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13322:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13333:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13318:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13318:19:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13312:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13312:26:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "13300:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13367:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13376:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13379:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13369:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13369:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13369:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "13353:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13363:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13350:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:16:15"
															},
															"nodeType": "YulIf",
															"src": "13347:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13392:72:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13434:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "13445:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13430:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13430:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13456:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13402:27:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13402:62:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "13392:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13473:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13499:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13510:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13495:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13495:19:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13489:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13489:26:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "13477:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13544:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13553:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13556:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13546:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13546:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13546:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "13530:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13540:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13527:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:16:15"
															},
															"nodeType": "YulIf",
															"src": "13524:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13569:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13583:9:15"
																	},
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "13594:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13579:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:24:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "13573:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13651:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13660:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13663:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13653:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13653:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13653:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "13630:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13634:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13626:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13626:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13641:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13622:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13615:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13615:35:15"
															},
															"nodeType": "YulIf",
															"src": "13612:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13676:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "13735:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13739:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "13750:2:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "13744:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13744:9:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13755:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13686:44:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:77:15"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "13676:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12753:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12764:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12776:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12784:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12792:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12800:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12808:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12816:6:15",
														"type": ""
													}
												],
												"src": "12633:1136:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13823:221:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13833:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13853:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13847:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13837:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13875:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13880:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13868:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13868:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13868:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13935:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13942:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13931:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13931:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13953:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13958:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13949:14:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13965:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13896:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13896:76:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13896:76:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13981:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13996:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "14009:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14017:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14005:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14005:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14026:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "14022:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14022:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14001:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14001:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:39:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14033:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13988:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13988:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13981:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13800:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13807:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13815:3:15",
														"type": ""
													}
												],
												"src": "13774:270:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14287:326:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14304:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14319:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14335:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14340:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "14331:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14331:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14344:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "14327:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14327:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14315:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14315:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14297:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14297:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14368:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14379:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14364:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14364:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14384:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14357:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14357:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14357:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14411:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14422:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14407:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14407:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14427:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14400:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14400:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14400:31:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14440:59:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14471:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14483:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14494:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14479:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14479:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "14454:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14454:45:15"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14444:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14519:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14530:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14515:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14515:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14539:6:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14547:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14535:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14508:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14508:50:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14508:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14567:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14592:6:15"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14600:6:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "14575:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14575:32:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14567:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$328_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14232:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14243:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14251:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14259:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14267:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14278:4:15",
														"type": ""
													}
												],
												"src": "14049:564:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14696:199:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14742:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14751:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14754:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14744:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14744:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14744:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14717:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14726:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14713:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14713:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14738:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14709:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14709:32:15"
															},
															"nodeType": "YulIf",
															"src": "14706:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14767:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14786:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14780:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14771:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14849:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14858:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14861:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14851:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14851:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14851:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14818:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "14839:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14832:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14832:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14825:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14825:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14815:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14815:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14808:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14808:40:15"
															},
															"nodeType": "YulIf",
															"src": "14805:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14874:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14884:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14874:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14662:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14673:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14685:6:15",
														"type": ""
													}
												],
												"src": "14618:277:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14949:79:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14959:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14971:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14974:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14967:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14967:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14959:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15000:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15002:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15002:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15002:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14991:4:15"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14997:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14988:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14988:11:15"
															},
															"nodeType": "YulIf",
															"src": "14985:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14931:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14934:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14940:4:15",
														"type": ""
													}
												],
												"src": "14900:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15131:170:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15177:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15186:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15189:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15179:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15179:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15179:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15152:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15161:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15148:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15173:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15144:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15144:32:15"
															},
															"nodeType": "YulIf",
															"src": "15141:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15202:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15221:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15215:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15215:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15206:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15265:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "15240:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15240:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15240:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15280:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15290:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15280:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IIdentity_$328_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15097:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15108:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15120:6:15",
														"type": ""
													}
												],
												"src": "15033:268:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15480:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15497:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15508:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15490:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15490:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15490:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15531:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15542:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15527:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15527:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15547:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15520:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15520:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15520:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15570:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15581:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15566:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15566:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15586:34:15",
																		"type": "",
																		"value": "Roles: account is the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15559:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15559:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15559:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15641:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15652:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15637:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15637:18:15"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:15",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15630:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15630:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15630:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15671:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15683:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15694:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15671:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15457:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15471:4:15",
														"type": ""
													}
												],
												"src": "15306:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15883:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15900:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15911:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15893:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15893:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15893:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15934:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15945:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15930:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15930:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15950:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15923:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15923:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15923:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15973:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15984:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15969:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15969:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15989:33:15",
																		"type": "",
																		"value": "Roles: account already has role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15962:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15962:61:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15962:61:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16032:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16044:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16055:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16040:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16040:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16032:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15860:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15874:4:15",
														"type": ""
													}
												],
												"src": "15709:355:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16243:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16260:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16271:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16253:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16253:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16253:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16294:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16305:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16290:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16290:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16310:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16283:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16283:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16283:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16333:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16344:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16329:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16329:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16349:34:15",
																		"type": "",
																		"value": "Roles: account does not have rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16322:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16322:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16322:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16404:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16415:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16400:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16400:18:15"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16420:3:15",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16393:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16393:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16393:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16433:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16445:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16456:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16441:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16441:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16433:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16220:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16234:4:15",
														"type": ""
													}
												],
												"src": "16069:397:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$1479__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$328t_uint16(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_uint16(value_2)\n        value2 := value_2\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$328(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$1871__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$328__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$1770__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"AgentRole: caller does not have \")\n        mstore(add(headStart, 96), \"the Agent role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n    }\n    function abi_encode_tuple_t_address_t_contract$_IIdentity_$328_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_IIdentity_$328(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IIdentity_$328__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_contract$_IClaimIssuer_$49_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(src, add(array, 0x20), length)\n    }\n    function abi_decode_bytes_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let offset := mload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_2)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value5 := abi_decode_available_length_bytes_fromMemory(add(_2, 32), mload(_2), dataEnd)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$328_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_contract$_IIdentity_$328_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c806384e79842116100b8578063b4f3fcb71161007c578063b4f3fcb7146102c5578063b9209e33146102d6578063e744d789146102e9578063f0eb5e54146102fc578063f11abfd81461030f578063f2fde38b1461032057600080fd5b806384e79842146102495780638da5cb5b1461025c5780638e098ca11461028c57806397a6278e1461029f578063a8d29d1d146102b257600080fd5b8063454a03e01161010a578063454a03e0146101cf5780635dbe47e8146101e2578063653dc9f1146101f5578063670af6a914610208578063715018a61461021b5780637e42683b1461022357600080fd5b8063184b9559146101475780631ffbb0641461015c57806326d941ae146101845780633b239a7f146101975780633b3e12f4146101aa575b600080fd5b61015a6101553660046113d9565b610333565b005b61016f61016a366004611424565b61056a565b60405190151581526020015b60405180910390f35b61015a610192366004611424565b61057c565b61015a6101a5366004611458565b6105ce565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161017b565b61015a6101dd366004611491565b61069a565b61016f6101f0366004611424565b61076d565b61015a61020336600461151d565b610797565b61015a610216366004611424565b610835565b61015a610887565b610236610231366004611424565b61089b565b60405161ffff909116815260200161017b565b61015a610257366004611424565b61090a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101b7565b61015a61029a3660046115b7565b61097a565b61015a6102ad366004611424565b610a50565b61015a6102c0366004611424565b610ac0565b6002546001600160a01b03166101b7565b61016f6102e4366004611424565b610b8d565b61015a6102f7366004611424565b611016565b6101b761030a366004611424565b611068565b6003546001600160a01b03166101b7565b61015a61032e366004611424565b6110d7565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103795750825b905060008267ffffffffffffffff1660011480156103965750303b155b9050811580156103a4575080155b156103c25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156103ec57845460ff60401b1916600160401b1785555b6001600160a01b0388161580159061040c57506001600160a01b03871615155b801561042057506001600160a01b03861615155b6104455760405162461bcd60e51b815260040161043c906115e5565b60405180910390fd5b600180546001600160a01b03808a166001600160a01b03199283168117909355600280548c831690841617905560038054918a16919092161790556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a26040516001600160a01b038916907f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a26040516001600160a01b038716907f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a261051a33611115565b831561056057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b60006105768183611126565b92915050565b6105846111a9565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a250565b6105d73361056a565b6105f35760405162461bcd60e51b815260040161043c9061161c565b600354604051639f3418d560e01b81526001600160a01b03848116600483015261ffff8416602483015290911690639f3418d590604401600060405180830381600087803b15801561064457600080fd5b505af1158015610658573d6000803e3d6000fd5b505060405161ffff841692506001600160a01b03851691507f04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee85390600090a35050565b6106a33361056a565b6106bf5760405162461bcd60e51b815260040161043c9061161c565b60035460405163a53410dd60e01b81526001600160a01b038581166004830152848116602483015261ffff841660448301529091169063a53410dd90606401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b50506040516001600160a01b038086169350861691507f6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af1990600090a3505050565b60008061077983611068565b6001600160a01b03160361078f57506000919050565b506001919050565b60005b8581101561082c5761081a8787838181106107b7576107b761166a565b90506020020160208101906107cc9190611424565b8686848181106107de576107de61166a565b90506020020160208101906107f39190611424565b8585858181106108055761080561166a565b90506020020160208101906101dd9190611680565b80610824816116b3565b91505061079a565b50505050505050565b61083d6111a9565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a250565b61088f6111a9565b6108996000611204565b565b600354604051631c9f84ef60e21b81526001600160a01b038381166004830152600092169063727e13bc90602401602060405180830381865afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906116cc565b6109126111a9565b6001600160a01b0381166109385760405162461bcd60e51b815260040161043c906115e5565b610943600082611275565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6109833361056a565b61099f5760405162461bcd60e51b815260040161043c9061161c565b60006109aa83611068565b600354604051637402e7c360e11b81526001600160a01b038681166004830152858116602483015292935091169063e805cf8690604401600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b50506040516001600160a01b038086169350841691507fe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf601090600090a3505050565b610a586111a9565b6001600160a01b038116610a7e5760405162461bcd60e51b815260040161043c906115e5565b610a896000826112f1565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b610ac93361056a565b610ae55760405162461bcd60e51b815260040161043c9061161c565b6000610af082611068565b60035460405163cf191bcd60e01b81526001600160a01b03858116600483015292935091169063cf191bcd90602401600060405180830381600087803b158015610b3957600080fd5b505af1158015610b4d573d6000803e3d6000fd5b50506040516001600160a01b038085169350851691507f59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f32790600090a35050565b600080610b9983611068565b6001600160a01b031603610baf57506000919050565b600154604080516337c2758160e21b815290516000926001600160a01b03169163df09d60491600480830192869291908290030181865afa158015610bf8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c209190810190611754565b90508051600003610c345750600192915050565b600080600060608060005b86518110156110075760025487516000916001600160a01b0316906352c111d1908a9085908110610c7257610c7261166a565b60200260200101516040518263ffffffff1660e01b8152600401610c9891815260200190565b600060405180830381865afa158015610cb5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cdd91908101906117ea565b90508051600003610cf8575060009998505050505050505050565b6000815167ffffffffffffffff811115610d1457610d146116e9565b604051908082528060200260200182016040528015610d3d578160200160208202803683370190505b50905060005b8251811015610dea57828181518110610d5e57610d5e61166a565b60200260200101518a8581518110610d7857610d7861166a565b6020026020010151604051602001610da59291906001600160a01b03929092168252602082015260400190565b60405160208183030381529060405280519060200120828281518110610dcd57610dcd61166a565b602090810291909101015280610de2816116b3565b915050610d43565b5060005b8151811015610ff157610e008c611068565b6001600160a01b031663c9100bcb838381518110610e2057610e2061166a565b60200260200101516040518263ffffffff1660e01b8152600401610e4691815260200190565b600060405180830381865afa158015610e63573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8b919081019061190c565b508e51949d50929b50909950975095508a9085908110610ead57610ead61166a565b60200260200101518903610fb957866001600160a01b031663c0969a6e610ed38e611068565b8c8781518110610ee557610ee561166a565b602002602001015189896040518563ffffffff1660e01b8152600401610f0e94939291906119fa565b602060405180830381865afa925050508015610f47575060408051601f3d908101601f19168201909252610f4491810190611a33565b60015b610f765760018251610f599190611a55565b8103610f71575060009b9a5050505050505050505050565b610fdf565b8015610f8157825191505b80158015610f9b575060018351610f989190611a55565b82145b15610fb3575060009c9b505050505050505050505050565b50610fdf565b60018251610fc79190611a55565b8103610fdf575060009b9a5050505050505050505050565b80610fe9816116b3565b915050610dee565b5050508080610fff906116b3565b915050610c3f565b50600198975050505050505050565b61101e6111a9565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a250565b600354604051637988d3a560e01b81526001600160a01b0383811660048301526000921690637988d3a590602401602060405180830381865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190611a68565b6110df6111a9565b6001600160a01b03811661110957604051631e4fbdf760e01b81526000600482015260240161043c565b61111281611204565b50565b61111d611373565b611112816113bc565b60006001600160a01b0382166111895760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161043c565b506001600160a01b03166000908152602091909152604090205460ff1690565b336111db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108995760405163118cdaa760e01b815233600482015260240161043c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61127f8282611126565b156112cc5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161043c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6112fb8282611126565b6113515760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161043c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661089957604051631afcd79f60e31b815260040160405180910390fd5b6110df611373565b6001600160a01b038116811461111257600080fd5b6000806000606084860312156113ee57600080fd5b83356113f9816113c4565b92506020840135611409816113c4565b91506040840135611419816113c4565b809150509250925092565b60006020828403121561143657600080fd5b8135611441816113c4565b9392505050565b61ffff8116811461111257600080fd5b6000806040838503121561146b57600080fd5b8235611476816113c4565b9150602083013561148681611448565b809150509250929050565b6000806000606084860312156114a657600080fd5b83356114b1816113c4565b925060208401356114c1816113c4565b9150604084013561141981611448565b60008083601f8401126114e357600080fd5b50813567ffffffffffffffff8111156114fb57600080fd5b6020830191508360208260051b850101111561151657600080fd5b9250929050565b6000806000806000806060878903121561153657600080fd5b863567ffffffffffffffff8082111561154e57600080fd5b61155a8a838b016114d1565b9098509650602089013591508082111561157357600080fd5b61157f8a838b016114d1565b9096509450604089013591508082111561159857600080fd5b506115a589828a016114d1565b979a9699509497509295939492505050565b600080604083850312156115ca57600080fd5b82356115d5816113c4565b91506020830135611486816113c4565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b6020808252602e908201527f4167656e74526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204167656e7420726f6c6560901b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561169257600080fd5b813561144181611448565b634e487b7160e01b600052601160045260246000fd5b6000600182016116c5576116c561169d565b5060010190565b6000602082840312156116de57600080fd5b815161144181611448565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611728576117286116e9565b604052919050565b600067ffffffffffffffff82111561174a5761174a6116e9565b5060051b60200190565b6000602080838503121561176757600080fd5b825167ffffffffffffffff81111561177e57600080fd5b8301601f8101851361178f57600080fd5b80516117a261179d82611730565b6116ff565b81815260059190911b820183019083810190878311156117c157600080fd5b928401925b828410156117df578351825292840192908401906117c6565b979650505050505050565b600060208083850312156117fd57600080fd5b825167ffffffffffffffff81111561181457600080fd5b8301601f8101851361182557600080fd5b805161183361179d82611730565b81815260059190911b8201830190838101908783111561185257600080fd5b928401925b828410156117df57835161186a816113c4565b82529284019290840190611857565b60005b8381101561189457818101518382015260200161187c565b50506000910152565b600067ffffffffffffffff8311156118b7576118b76116e9565b6118ca601f8401601f19166020016116ff565b90508281528383830111156118de57600080fd5b611441836020830184611879565b600082601f8301126118fd57600080fd5b6114418383516020850161189d565b60008060008060008060c0878903121561192557600080fd5b8651955060208701519450604087015161193e816113c4565b606088015190945067ffffffffffffffff8082111561195c57600080fd5b6119688a838b016118ec565b9450608089015191508082111561197e57600080fd5b61198a8a838b016118ec565b935060a08901519150808211156119a057600080fd5b508701601f810189136119b257600080fd5b6119c18982516020840161189d565b9150509295509295509295565b600081518084526119e6816020860160208601611879565b601f01601f19169290920160200192915050565b60018060a01b0385168152836020820152608060408201526000611a2160808301856119ce565b82810360608401526117df81856119ce565b600060208284031215611a4557600080fd5b8151801515811461144157600080fd5b818103818111156105765761057661169d565b600060208284031215611a7a57600080fd5b8151611441816113c456fea26469706673582212207121dd261cccd5df3ed945917028fcad6bed79bbf8c7bd85d55a95cd8cbf183b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84E79842 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB4F3FCB7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB4F3FCB7 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE744D789 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF0EB5E54 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xF11ABFD8 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84E79842 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8E098CA1 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA8D29D1D EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x454A03E0 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x454A03E0 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x653DC9F1 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x670AF6A9 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x7E42683B EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x184B9559 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x26D941AE EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x3B239A7F EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x3B3E12F4 EQ PUSH2 0x1AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x887 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x396 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x3EC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x40C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x420 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO JUMPDEST PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP13 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP11 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x51A CALLER PUSH2 0x1115 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x560 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP2 DUP4 PUSH2 0x1126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x584 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5D7 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9F3418D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9F3418D5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xFFFF DUP5 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 POP PUSH32 0x4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A3 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA53410DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA53410DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 POP DUP7 AND SWAP2 POP PUSH32 0x6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x779 DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x78F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH2 0x81A DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B7 PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x805 JUMPI PUSH2 0x805 PUSH2 0x166A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST DUP1 PUSH2 0x824 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x83D PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x88F PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x899 PUSH1 0x0 PUSH2 0x1204 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C9F84EF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x727E13BC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x16CC JUMP JUMPDEST PUSH2 0x912 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x943 PUSH1 0x0 DUP3 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x983 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AA DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7402E7C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xE805CF86 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP4 POP DUP5 AND SWAP2 POP PUSH32 0xE98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x0 DUP3 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xAC9 CALLER PUSH2 0x56A JUMP JUMPDEST PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCF191BCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xCF191BCD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 POP DUP6 AND SWAP2 POP PUSH32 0x59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB99 DUP4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBAF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x37C27581 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDF09D604 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC20 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1754 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC34 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1007 JUMPI PUSH1 0x2 SLOAD DUP8 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x52C111D1 SWAP1 DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xCDD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x17EA JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCF8 JUMPI POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD14 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD3D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xDEA JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD5E JUMPI PUSH2 0xD5E PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI PUSH2 0xD78 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA5 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xDE2 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD43 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xE00 DUP13 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9100BCB DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE20 JUMPI PUSH2 0xE20 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE8B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST POP DUP15 MLOAD SWAP5 SWAP14 POP SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xEAD JUMPI PUSH2 0xEAD PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 SUB PUSH2 0xFB9 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0969A6E PUSH2 0xED3 DUP15 PUSH2 0x1068 JUMP JUMPDEST DUP13 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xEE5 JUMPI PUSH2 0xEE5 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF47 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF44 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x1 DUP3 MLOAD PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP2 SUB PUSH2 0xF71 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF81 JUMPI DUP3 MLOAD SWAP2 POP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0xF9B JUMPI POP PUSH1 0x1 DUP4 MLOAD PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP3 EQ JUMPDEST ISZERO PUSH2 0xFB3 JUMPI POP PUSH1 0x0 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST DUP2 SUB PUSH2 0xFDF JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xFE9 DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDEE JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xFFF SWAP1 PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC3F JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x101E PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7988D3A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7988D3A5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x43C JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x1204 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x111D PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x1112 DUP2 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x11DB PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x43C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x127F DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12FB DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DF PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13F9 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1409 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1419 DUP2 PUSH2 0x13C4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1476 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x1448 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14B1 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14C1 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1419 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155A DUP11 DUP4 DUP12 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x157F DUP11 DUP4 DUP12 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A5 DUP10 DUP3 DUP11 ADD PUSH2 0x14D1 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15D5 DUP2 PUSH2 0x13C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1486 DUP2 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x746865204167656E7420726F6C65 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16C5 JUMPI PUSH2 0x16C5 PUSH2 0x169D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1441 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1728 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x174A JUMPI PUSH2 0x174A PUSH2 0x16E9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x178F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x17A2 PUSH2 0x179D DUP3 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x16FF JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x17DF JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1825 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1833 PUSH2 0x179D DUP3 PUSH2 0x1730 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x17DF JUMPI DUP4 MLOAD PUSH2 0x186A DUP2 PUSH2 0x13C4 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1894 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x187C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x18B7 JUMPI PUSH2 0x18B7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x16FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x18DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1441 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1441 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x193E DUP2 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1968 DUP11 DUP4 DUP12 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198A DUP11 DUP4 DUP12 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x19B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C1 DUP10 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A21 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19CE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x17DF DUP2 DUP6 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x576 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1441 DUP2 PUSH2 0x13C4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x21DD261CCCD5DF3ED945917028FCAD6BED79 0xBB 0xF8 0xC7 0xBD DUP6 0xD5 GAS SWAP6 0xCD DUP13 0xBF XOR EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4256:7800:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4864:814;;;;;;:::i;:::-;;:::i;:::-;;4703:103:13;;;;;;:::i;:::-;;:::i;:::-;;;1101:14:15;;1094:22;1076:41;;1064:2;1049:18;4703:103:13;;;;;;;;7195:248:7;;;;;;:::i;:::-;;:::i;6535:233::-;;;;;;:::i;:::-;;:::i;10857:124::-;10954:20;;-1:-1:-1;;;;;10954:20:7;10857:124;;;-1:-1:-1;;;;;1834:32:15;;;1816:51;;1804:2;1789:18;10857:124:7;1641:232:15;11536:294:7;;;;;;:::i;:::-;;:::i;11256:203::-;;;;;;:::i;:::-;;:::i;5760:337::-;;;;;;:::i;:::-;;:::i;7526:231::-;;;;;;:::i;:::-;;:::i;3165:101:4:-;;;:::i;10409:168:7:-;;;;;;:::i;:::-;;:::i;:::-;;;4082:6:15;4070:19;;;4052:38;;4040:2;4025:18;10409:168:7;3908:188:15;4295:194:13;;;;;;:::i;:::-;;:::i;2451:144:4:-;1323:22;2580:8;-1:-1:-1;;;;;2580:8:4;2451:144;;6172:289:7;;;;;;:::i;:::-;;:::i;4495:202:13:-;;;;;;:::i;:::-;;:::i;6843:265:7:-;;;;;;:::i;:::-;;:::i;10653:129::-;10754:21;;-1:-1:-1;;;;;10754:21:7;10653:129;;8213:2120;;;;;;:::i;:::-;;:::i;7843:250::-;;;;;;:::i;:::-;;:::i;11899:155::-;;;;;;:::i;:::-;;:::i;11057:130::-;11159:21;;-1:-1:-1;;;;;11159:21:7;11057:130;;3415:215:4;;;;;;:::i;:::-;;:::i;4864:814:7:-;8870:21:5;4302:15;;-1:-1:-1;;;4302:15:5;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:5;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:5;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:5;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:5;-1:-1:-1;;;5013:22:5;;;4979:67;-1:-1:-1;;;;;5049:37:7;::::1;::::0;;::::1;::::0;:87:::1;;-1:-1:-1::0;;;;;;5102:34:7;::::1;::::0;::::1;5049:87;:133;;;;-1:-1:-1::0;;;;;;5152:30:7;::::1;::::0;::::1;5049:133;5028:199;;;;-1:-1:-1::0;;;5028:199:7::1;;;;;;;:::i;:::-;;;;;;;;;5237:20;:65:::0;;-1:-1:-1;;;;;5237:65:7;;::::1;-1:-1:-1::0;;;;;;5237:65:7;;::::1;::::0;::::1;::::0;;;5312:21:::1;:72:::0;;;;::::1;::::0;;::::1;;::::0;;5394:21:::1;:66:::0;;;;::::1;::::0;;;::::1;;::::0;;5475:44:::1;::::0;::::1;::::0;5237:20:::1;::::0;5475:44:::1;5534:50;::::0;-1:-1:-1;;;;;5534:50:7;::::1;::::0;::::1;::::0;;;::::1;5599:36;::::0;-1:-1:-1;;;;;5599:36:7;::::1;::::0;::::1;::::0;;;::::1;5645:26;5660:10;5645:14;:26::i;:::-;5070:14:5::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:5;;;5142:14;;-1:-1:-1;5938:50:15;;5142:14:5;;5926:2:15;5911:18;5142:14:5;;;;;;;5066:101;4092:1081;;;;;4864:814:7;;;:::o;4703:103:13:-;4757:4;4780:19;4757:4;4792:6;4780:11;:19::i;:::-;4773:26;4703:103;-1:-1:-1;;4703:103:13:o;7195:248:7:-;2344:13:4;:11;:13::i;:::-;7303:21:7::1;:74:::0;;-1:-1:-1;;;;;;7303:74:7::1;-1:-1:-1::0;;;;;7303:74:7;::::1;::::0;;::::1;::::0;;;7392:44:::1;::::0;::::1;::::0;-1:-1:-1;;7392:44:7::1;7195:248:::0;:::o;6535:233::-;4201:19:13;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:13;;;;;;;:::i;:::-;6635:21:7::1;::::0;:73:::1;::::0;-1:-1:-1;;;6635:73:7;;-1:-1:-1;;;;;6604:32:15;;;6635:73:7::1;::::0;::::1;6586:51:15::0;6685:6;6673:19;;6653:18;;;6646:47;6635:21:7;;::::1;::::0;:49:::1;::::0;6559:18:15;;6635:73:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6723:38:7::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;;6723:38:7;::::1;::::0;-1:-1:-1;6723:38:7::1;::::0;;;::::1;6535:233:::0;;:::o;11536:294::-;4201:19:13;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:13;;;;;;;:::i;:::-;11688:21:7::1;::::0;:77:::1;::::0;-1:-1:-1;;;11688:77:7;;-1:-1:-1;;;;;6977:15:15;;;11688:77:7::1;::::0;::::1;6959:34:15::0;7029:15;;;7009:18;;;7002:43;7093:6;7081:19;;7061:18;;;7054:47;11688:21:7;;::::1;::::0;:42:::1;::::0;6894:18:15;;11688:77:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11780:43:7::1;::::0;-1:-1:-1;;;;;11780:43:7;;::::1;::::0;-1:-1:-1;11780:43:7;::::1;::::0;-1:-1:-1;11780:43:7::1;::::0;;;::::1;11536:294:::0;;;:::o;11256:203::-;11328:4;;11356:22;11365:12;11356:8;:22::i;:::-;-1:-1:-1;;;;;11348:45:7;;11344:88;;-1:-1:-1;11416:5:7;;11256:203;-1:-1:-1;11256:203:7:o;11344:88::-;-1:-1:-1;11448:4:7;;11256:203;-1:-1:-1;11256:203:7:o;5760:337::-;5953:9;5948:143;5968:25;;;5948:143;;;6014:66;6031:14;;6046:1;6031:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6050:11;;6062:1;6050:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6066:10;;6077:1;6066:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;6014:66::-;5995:3;;;;:::i;:::-;;;;5948:143;;;;5760:337;;;;;;:::o;7526:231::-;2344:13:4;:11;:13::i;:::-;7626:20:7::1;:65:::0;;-1:-1:-1;;;;;;7626:65:7::1;-1:-1:-1::0;;;;;7626:65:7;::::1;::::0;;::::1;::::0;;;7706:44:::1;::::0;::::1;::::0;-1:-1:-1;;7706:44:7::1;7526:231:::0;:::o;3165:101:4:-;2344:13;:11;:13::i;:::-;3229:30:::1;3256:1;3229:18;:30::i;:::-;3165:101::o:0;10409:168:7:-;10513:21;;:57;;-1:-1:-1;;;10513:57:7;;-1:-1:-1;;;;;1834:32:15;;;10513:57:7;;;1816:51:15;10488:6:7;;10513:21;;:43;;1789:18:15;;10513:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4295:194:13:-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4364:20:13;::::1;4356:64;;;;-1:-1:-1::0;;;4356:64:13::1;;;;;;;:::i;:::-;4430:19;:7;4442:6:::0;4430:11:::1;:19::i;:::-;4464:18;::::0;-1:-1:-1;;;;;4464:18:13;::::1;::::0;::::1;::::0;;;::::1;4295:194:::0;:::o;6172:289:7:-;4201:19:13;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:13;;;;;;;:::i;:::-;6277:21:7::1;6301:22;6310:12;6301:8;:22::i;:::-;6333:21;::::0;:67:::1;::::0;-1:-1:-1;;;6333:67:7;;-1:-1:-1;;;;;8536:15:15;;;6333:67:7::1;::::0;::::1;8518:34:15::0;8588:15;;;8568:18;;;8561:43;6277:46:7;;-1:-1:-1;6333:21:7;::::1;::::0;:42:::1;::::0;8453:18:15;;6333:67:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6415:39:7::1;::::0;-1:-1:-1;;;;;6415:39:7;;::::1;::::0;-1:-1:-1;6415:39:7;::::1;::::0;-1:-1:-1;6415:39:7::1;::::0;;;::::1;6267:194;6172:289:::0;;:::o;4495:202:13:-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4567:20:13;::::1;4559:64;;;;-1:-1:-1::0;;;4559:64:13::1;;;;;;;:::i;:::-;4633:22;:7;4648:6:::0;4633:14:::1;:22::i;:::-;4670:20;::::0;-1:-1:-1;;;;;4670:20:13;::::1;::::0;::::1;::::0;;;::::1;4495:202:::0;:::o;6843:265:7:-;4201:19:13;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:13;;;;;;;:::i;:::-;6927:21:7::1;6951:22;6960:12;6951:8;:22::i;:::-;6983:21;::::0;:61:::1;::::0;-1:-1:-1;;;6983:61:7;;-1:-1:-1;;;;;1834:32:15;;;6983:61:7::1;::::0;::::1;1816:51:15::0;6927:46:7;;-1:-1:-1;6983:21:7;::::1;::::0;:47:::1;::::0;1789:18:15;;6983:61:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7059:42:7::1;::::0;-1:-1:-1;;;;;7059:42:7;;::::1;::::0;-1:-1:-1;7059:42:7;::::1;::::0;-1:-1:-1;7059:42:7::1;::::0;;;::::1;6917:191;6843:265:::0;:::o;8213:2120::-;8287:4;;8315:22;8324:12;8315:8;:22::i;:::-;-1:-1:-1;;;;;8307:45:7;;8303:66;;-1:-1:-1;8362:5:7;;8213:2120;-1:-1:-1;8213:2120:7:o;8303:66::-;8417:20;;:37;;;-1:-1:-1;;;8417:37:7;;;;8378:36;;-1:-1:-1;;;;;8417:20:7;;:35;;:37;;;;;8378:36;;8417:37;;;;;;;:20;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8417:37:7;;;;;;;;;;;;:::i;:::-;8378:76;;8468:19;:26;8498:1;8468:31;8464:73;;-1:-1:-1;8522:4:7;;8213:2120;-1:-1:-1;;8213:2120:7:o;8464:73::-;8547:23;8580:14;8604;8628:16;8654:17;8681:18;8709:1597;8743:19;:26;8730:10;:39;8709:1597;;;8850:21;;8903:31;;8799:36;;-1:-1:-1;;;;;8850:21:7;;:52;;8903:19;;8923:10;;8903:31;;;;;;:::i;:::-;;;;;;;8850:85;;;;;;;;;;;;;10247:25:15;;10235:2;10220:18;;10101:177;8850:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8850:85:7;;;;;;;;;;;;:::i;:::-;8799:136;;8954:14;:21;8979:1;8954:26;8950:47;;-1:-1:-1;8990:5:7;;8213:2120;-1:-1:-1;;;;;;;;;8213:2120:7:o;8950:47::-;9011:25;9053:14;:21;9039:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9039:36:7;;9011:64;;9094:9;9089:172;9113:14;:21;9109:1;:25;9089:172;;;9194:14;9209:1;9194:17;;;;;;;;:::i;:::-;;;;;;;9213:19;9233:10;9213:31;;;;;;;;:::i;:::-;;;;;;;9183:62;;;;;;;;-1:-1:-1;;;;;11474:32:15;;;;11456:51;;11538:2;11523:18;;11516:34;11444:2;11429:18;;11263:293;9183:62:7;;;;;;;;;;;;;9173:73;;;;;;9159:8;9168:1;9159:11;;;;;;;;:::i;:::-;;;;;;;;;;:87;9136:3;;;;:::i;:::-;;;;9089:172;;;;9280:9;9275:1021;9299:8;:15;9295:1;:19;9275:1021;;;9388:22;9397:12;9388:8;:22::i;:::-;-1:-1:-1;;;;;9388:31:7;;9420:8;9429:1;9420:11;;;;;;;;:::i;:::-;;;;;;;9388:44;;;;;;;;;;;;;10247:25:15;;10235:2;10220:18;;10101:177;9388:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9388:44:7;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9474:31:7;;9339:93;;-1:-1:-1;9339:93:7;;-1:-1:-1;9339:93:7;;-1:-1:-1;9339:93:7;-1:-1:-1;9339:93:7;-1:-1:-1;9474:19:7;;9494:10;;9474:31;;;;;;:::i;:::-;;;;;;;9455:15;:50;9451:831;;9546:6;-1:-1:-1;;;;;9533:33:7;;9567:22;9576:12;9567:8;:22::i;:::-;9591:19;9611:10;9591:31;;;;;;;;:::i;:::-;;;;;;;9624:3;9653:4;9533:125;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;9533:125:7;;;;;;;;-1:-1:-1;;9533:125:7;;;;;;;;;;;;:::i;:::-;;;9529:644;;10078:1;10060:8;:15;:19;;;;:::i;:::-;10054:1;:26;10050:101;;-1:-1:-1;10119:5:7;;8213:2120;-1:-1:-1;;;;;;;;;;;8213:2120:7:o;10050:101::-;9451:831;;9529:644;9743:9;9710:145;;;9813:8;:15;9809:19;;9710:145;9885:9;9884:10;:40;;;;;9922:1;9904:8;:15;:19;;;;:::i;:::-;9898:1;:26;9884:40;9880:115;;;-1:-1:-1;9963:5:7;;8213:2120;-1:-1:-1;;;;;;;;;;;;8213:2120:7:o;9880:115::-;9659:358;9451:831;;;10225:1;10207:8;:15;:19;;;;:::i;:::-;10201:1;:26;10197:85;;-1:-1:-1;10258:5:7;;8213:2120;-1:-1:-1;;;;;;;;;;;8213:2120:7:o;10197:85::-;9316:3;;;;:::i;:::-;;;;9275:1021;;;;8785:1521;;8771:12;;;;;:::i;:::-;;;;8709:1597;;;-1:-1:-1;10322:4:7;;8213:2120;-1:-1:-1;;;;;;;;8213:2120:7:o;7843:250::-;2344:13:4;:11;:13::i;:::-;7949:21:7::1;:72:::0;;-1:-1:-1;;;;;;7949:72:7::1;-1:-1:-1::0;;;;;7949:72:7;::::1;::::0;;::::1;::::0;;;8036:50:::1;::::0;::::1;::::0;-1:-1:-1;;8036:50:7::1;7843:250:::0;:::o;11899:155::-;11997:21;;:50;;-1:-1:-1;;;11997:50:7;;-1:-1:-1;;;;;1834:32:15;;;11997:50:7;;;1816:51:15;11969:9:7;;11997:21;;:36;;1789:18:15;;11997:50:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3415:215:4:-;2344:13;:11;:13::i;:::-;-1:-1:-1;;;;;3499:22:4;::::1;3495:91;;3544:31;::::0;-1:-1:-1;;;3544:31:4;;3572:1:::1;3544:31;::::0;::::1;1816:51:15::0;1789:18;;3544:31:4::1;1641:232:15::0;3495:91:4::1;3595:28;3614:8;3595:18;:28::i;:::-;3415:215:::0;:::o;1857:127::-;6931:20:5;:18;:20::i;:::-;1939:38:4::1;1964:12;1939:24;:38::i;4596:200:14:-:0;4668:4;-1:-1:-1;;;;;4692:21:14;;4684:68;;;;-1:-1:-1;;;4684:68:14;;15508:2:15;4684:68:14;;;15490:21:15;15547:2;15527:18;;;15520:30;15586:34;15566:18;;;15559:62;-1:-1:-1;;;15637:18:15;;;15630:32;15679:19;;4684:68:14;15306:398:15;4684:68:14;-1:-1:-1;;;;;;4769:20:14;:11;:20;;;;;;;;;;;;;;;4596:200::o;2668:162:4:-;966:10:6;2727:7:4;1323:22;2580:8;-1:-1:-1;;;;;2580:8:4;;2451:144;2727:7;-1:-1:-1;;;;;2727:23:4;;2723:101;;2773:40;;-1:-1:-1;;;2773:40:4;;966:10:6;2773:40:4;;;1816:51:15;1789:18;;2773:40:4;1641:232:15;3784:248:4;1323:22;3933:8;;-1:-1:-1;;;;;;3951:19:4;;-1:-1:-1;;;;;3951:19:4;;;;;;;;3985:40;;3933:8;;;;;3985:40;;3857:24;;3985:40;3847:185;;3784:248;:::o;4077:175:14:-;4154:18;4158:4;4164:7;4154:3;:18::i;:::-;4153:19;4145:63;;;;-1:-1:-1;;;4145:63:14;;15911:2:15;4145:63:14;;;15893:21:15;15950:2;15930:18;;;15923:30;15989:33;15969:18;;;15962:61;16040:18;;4145:63:14;15709:355:15;4145:63:14;-1:-1:-1;;;;;4218:20:14;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;4218:27:14;4241:4;4218:27;;;4077:175::o;4327:180::-;4406:18;4410:4;4416:7;4406:3;:18::i;:::-;4398:64;;;;-1:-1:-1;;;4398:64:14;;16271:2:15;4398:64:14;;;16253:21:15;16310:2;16290:18;;;16283:30;16349:34;16329:18;;;16322:62;-1:-1:-1;;;16400:18:15;;;16393:31;16441:19;;4398:64:14;16069:397:15;4398:64:14;-1:-1:-1;;;;;4472:20:14;4495:5;4472:20;;;;;;;;;;;:28;;-1:-1:-1;;4472:28:14;;;4327:180::o;7084:141:5:-;8870:21;8560:40;-1:-1:-1;;;8560:40:5;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:5;;;;;;;;;;;1990:235:4;6931:20:5;:18;:20::i;14:131:15:-;-1:-1:-1;;;;;89:31:15;;79:42;;69:70;;135:1;132;125:12;150:529;227:6;235;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;351:9;338:23;370:31;395:5;370:31;:::i;:::-;420:5;-1:-1:-1;477:2:15;462:18;;449:32;490:33;449:32;490:33;:::i;:::-;542:7;-1:-1:-1;601:2:15;586:18;;573:32;614:33;573:32;614:33;:::i;:::-;666:7;656:17;;;150:529;;;;;:::o;684:247::-;743:6;796:2;784:9;775:7;771:23;767:32;764:52;;;812:1;809;802:12;764:52;851:9;838:23;870:31;895:5;870:31;:::i;:::-;920:5;684:247;-1:-1:-1;;;684:247:15:o;1128:117::-;1213:6;1206:5;1202:18;1195:5;1192:29;1182:57;;1235:1;1232;1225:12;1250:386;1317:6;1325;1378:2;1366:9;1357:7;1353:23;1349:32;1346:52;;;1394:1;1391;1384:12;1346:52;1433:9;1420:23;1452:31;1477:5;1452:31;:::i;:::-;1502:5;-1:-1:-1;1559:2:15;1544:18;;1531:32;1572;1531;1572;:::i;:::-;1623:7;1613:17;;;1250:386;;;;;:::o;1878:544::-;1971:6;1979;1987;2040:2;2028:9;2019:7;2015:23;2011:32;2008:52;;;2056:1;2053;2046:12;2008:52;2095:9;2082:23;2114:31;2139:5;2114:31;:::i;:::-;2164:5;-1:-1:-1;2221:2:15;2206:18;;2193:32;2234:33;2193:32;2234:33;:::i;:::-;2286:7;-1:-1:-1;2345:2:15;2330:18;;2317:32;2358;2317;2358;:::i;2427:367::-;2490:8;2500:6;2554:3;2547:4;2539:6;2535:17;2531:27;2521:55;;2572:1;2569;2562:12;2521:55;-1:-1:-1;2595:20:15;;2638:18;2627:30;;2624:50;;;2670:1;2667;2660:12;2624:50;2707:4;2699:6;2695:17;2683:29;;2767:3;2760:4;2750:6;2747:1;2743:14;2735:6;2731:27;2727:38;2724:47;2721:67;;;2784:1;2781;2774:12;2721:67;2427:367;;;;;:::o;2799:1104::-;2973:6;2981;2989;2997;3005;3013;3066:2;3054:9;3045:7;3041:23;3037:32;3034:52;;;3082:1;3079;3072:12;3034:52;3122:9;3109:23;3151:18;3192:2;3184:6;3181:14;3178:34;;;3208:1;3205;3198:12;3178:34;3247:70;3309:7;3300:6;3289:9;3285:22;3247:70;:::i;:::-;3336:8;;-1:-1:-1;3221:96:15;-1:-1:-1;3424:2:15;3409:18;;3396:32;;-1:-1:-1;3440:16:15;;;3437:36;;;3469:1;3466;3459:12;3437:36;3508:72;3572:7;3561:8;3550:9;3546:24;3508:72;:::i;:::-;3599:8;;-1:-1:-1;3482:98:15;-1:-1:-1;3687:2:15;3672:18;;3659:32;;-1:-1:-1;3703:16:15;;;3700:36;;;3732:1;3729;3722:12;3700:36;;3771:72;3835:7;3824:8;3813:9;3809:24;3771:72;:::i;:::-;2799:1104;;;;-1:-1:-1;2799:1104:15;;-1:-1:-1;2799:1104:15;;3862:8;;2799:1104;-1:-1:-1;;;2799:1104:15:o;4309:405::-;4394:6;4402;4455:2;4443:9;4434:7;4430:23;4426:32;4423:52;;;4471:1;4468;4461:12;4423:52;4510:9;4497:23;4529:31;4554:5;4529:31;:::i;:::-;4579:5;-1:-1:-1;4636:2:15;4621:18;;4608:32;4649:33;4608:32;4649:33;:::i;5425:355::-;5627:2;5609:21;;;5666:2;5646:18;;;5639:30;5705:33;5700:2;5685:18;;5678:61;5771:2;5756:18;;5425:355::o;5999:410::-;6201:2;6183:21;;;6240:2;6220:18;;;6213:30;6279:34;6274:2;6259:18;;6252:62;-1:-1:-1;;;6345:2:15;6330:18;;6323:44;6399:3;6384:19;;5999:410::o;7112:127::-;7173:10;7168:3;7164:20;7161:1;7154:31;7204:4;7201:1;7194:15;7228:4;7225:1;7218:15;7513:245;7571:6;7624:2;7612:9;7603:7;7599:23;7595:32;7592:52;;;7640:1;7637;7630:12;7592:52;7679:9;7666:23;7698:30;7722:5;7698:30;:::i;7763:127::-;7824:10;7819:3;7815:20;7812:1;7805:31;7855:4;7852:1;7845:15;7879:4;7876:1;7869:15;7895:135;7934:3;7955:17;;;7952:43;;7975:18;;:::i;:::-;-1:-1:-1;8022:1:15;8011:13;;7895:135::o;8035:249::-;8104:6;8157:2;8145:9;8136:7;8132:23;8128:32;8125:52;;;8173:1;8170;8163:12;8125:52;8205:9;8199:16;8224:30;8248:5;8224:30;:::i;8615:127::-;8676:10;8671:3;8667:20;8664:1;8657:31;8707:4;8704:1;8697:15;8731:4;8728:1;8721:15;8747:275;8818:2;8812:9;8883:2;8864:13;;-1:-1:-1;;8860:27:15;8848:40;;8918:18;8903:34;;8939:22;;;8900:62;8897:88;;;8965:18;;:::i;:::-;9001:2;8994:22;8747:275;;-1:-1:-1;8747:275:15:o;9027:183::-;9087:4;9120:18;9112:6;9109:30;9106:56;;;9142:18;;:::i;:::-;-1:-1:-1;9187:1:15;9183:14;9199:4;9179:25;;9027:183::o;9215:881::-;9310:6;9341:2;9384;9372:9;9363:7;9359:23;9355:32;9352:52;;;9400:1;9397;9390:12;9352:52;9433:9;9427:16;9466:18;9458:6;9455:30;9452:50;;;9498:1;9495;9488:12;9452:50;9521:22;;9574:4;9566:13;;9562:27;-1:-1:-1;9552:55:15;;9603:1;9600;9593:12;9552:55;9632:2;9626:9;9655:60;9671:43;9711:2;9671:43;:::i;:::-;9655:60;:::i;:::-;9749:15;;;9831:1;9827:10;;;;9819:19;;9815:28;;;9780:12;;;;9855:19;;;9852:39;;;9887:1;9884;9877:12;9852:39;9911:11;;;;9931:135;9947:6;9942:3;9939:15;9931:135;;;10013:10;;10001:23;;9964:12;;;;10044;;;;9931:135;;;10085:5;9215:881;-1:-1:-1;;;;;;;9215:881:15:o;10283:975::-;10397:6;10428:2;10471;10459:9;10450:7;10446:23;10442:32;10439:52;;;10487:1;10484;10477:12;10439:52;10520:9;10514:16;10553:18;10545:6;10542:30;10539:50;;;10585:1;10582;10575:12;10539:50;10608:22;;10661:4;10653:13;;10649:27;-1:-1:-1;10639:55:15;;10690:1;10687;10680:12;10639:55;10719:2;10713:9;10742:60;10758:43;10798:2;10758:43;:::i;10742:60::-;10836:15;;;10918:1;10914:10;;;;10906:19;;10902:28;;;10867:12;;;;10942:19;;;10939:39;;;10974:1;10971;10964:12;10939:39;10998:11;;;;11018:210;11034:6;11029:3;11026:15;11018:210;;;11107:3;11101:10;11124:31;11149:5;11124:31;:::i;:::-;11168:18;;11051:12;;;;11206;;;;11018:210;;11743:250;11828:1;11838:113;11852:6;11849:1;11846:13;11838:113;;;11928:11;;;11922:18;11909:11;;;11902:39;11874:2;11867:10;11838:113;;;-1:-1:-1;;11985:1:15;11967:16;;11960:27;11743:250::o;11998:390::-;12073:5;12107:18;12099:6;12096:30;12093:56;;;12129:18;;:::i;:::-;12167:57;12212:2;12191:15;;-1:-1:-1;;12187:29:15;12218:4;12183:40;12167:57;:::i;:::-;12158:66;;12247:6;12240:5;12233:21;12287:3;12278:6;12273:3;12269:16;12266:25;12263:45;;;12304:1;12301;12294:12;12263:45;12317:65;12375:6;12368:4;12361:5;12357:16;12352:3;12317:65;:::i;12393:235::-;12446:5;12499:3;12492:4;12484:6;12480:17;12476:27;12466:55;;12517:1;12514;12507:12;12466:55;12539:83;12618:3;12609:6;12603:13;12596:4;12588:6;12584:17;12539:83;:::i;12633:1136::-;12776:6;12784;12792;12800;12808;12816;12869:3;12857:9;12848:7;12844:23;12840:33;12837:53;;;12886:1;12883;12876:12;12837:53;12915:9;12909:16;12899:26;;12965:2;12954:9;12950:18;12944:25;12934:35;;13012:2;13001:9;12997:18;12991:25;13025:31;13050:5;13025:31;:::i;:::-;13124:2;13109:18;;13103:25;13075:5;;-1:-1:-1;13147:18:15;13177:14;;;13174:34;;;13204:1;13201;13194:12;13174:34;13227:60;13279:7;13270:6;13259:9;13255:22;13227:60;:::i;:::-;13217:70;;13333:3;13322:9;13318:19;13312:26;13296:42;;13363:2;13353:8;13350:16;13347:36;;;13379:1;13376;13369:12;13347:36;13402:62;13456:7;13445:8;13434:9;13430:24;13402:62;:::i;:::-;13392:72;;13510:3;13499:9;13495:19;13489:26;13473:42;;13540:2;13530:8;13527:16;13524:36;;;13556:1;13553;13546:12;13524:36;-1:-1:-1;13579:24:15;;13634:4;13626:13;;13622:27;-1:-1:-1;13612:55:15;;13663:1;13660;13653:12;13612:55;13686:77;13755:7;13750:2;13744:9;13739:2;13735;13731:11;13686:77;:::i;:::-;13676:87;;;12633:1136;;;;;;;;:::o;13774:270::-;13815:3;13853:5;13847:12;13880:6;13875:3;13868:19;13896:76;13965:6;13958:4;13953:3;13949:14;13942:4;13935:5;13931:16;13896:76;:::i;:::-;14026:2;14005:15;-1:-1:-1;;14001:29:15;13992:39;;;;14033:4;13988:50;;13774:270;-1:-1:-1;;13774:270:15:o;14049:564::-;14344:1;14340;14335:3;14331:11;14327:19;14319:6;14315:32;14304:9;14297:51;14384:6;14379:2;14368:9;14364:18;14357:34;14427:3;14422:2;14411:9;14407:18;14400:31;14278:4;14454:45;14494:3;14483:9;14479:19;14471:6;14454:45;:::i;:::-;14547:9;14539:6;14535:22;14530:2;14519:9;14515:18;14508:50;14575:32;14600:6;14592;14575:32;:::i;14618:277::-;14685:6;14738:2;14726:9;14717:7;14713:23;14709:32;14706:52;;;14754:1;14751;14744:12;14706:52;14786:9;14780:16;14839:5;14832:13;14825:21;14818:5;14815:32;14805:60;;14861:1;14858;14851:12;14900:128;14967:9;;;14988:11;;;14985:37;;;15002:18;;:::i;15033:268::-;15120:6;15173:2;15161:9;15152:7;15148:23;15144:32;15141:52;;;15189:1;15186;15179:12;15141:52;15221:9;15215:16;15240:31;15265:5;15240:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1368600",
								"executionCost": "1424",
								"totalCost": "1370024"
							},
							"external": {
								"addAgent(address)": "30353",
								"batchRegisterIdentity(address[],address[],uint16[])": "infinite",
								"contains(address)": "infinite",
								"deleteIdentity(address)": "infinite",
								"identity(address)": "infinite",
								"identityStorage()": "2441",
								"init(address,address,address)": "infinite",
								"investorCountry(address)": "infinite",
								"isAgent(address)": "2679",
								"isVerified(address)": "infinite",
								"issuersRegistry()": "2353",
								"owner()": "2376",
								"registerIdentity(address,address,uint16)": "infinite",
								"removeAgent(address)": "30410",
								"renounceOwnership()": "infinite",
								"setClaimTopicsRegistry(address)": "27990",
								"setIdentityRegistryStorage(address)": "27969",
								"setTrustedIssuersRegistry(address)": "27967",
								"topicsRegistry()": "2432",
								"transferOwnership(address)": "infinite",
								"updateCountry(address,uint16)": "infinite",
								"updateIdentity(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4256,
									"end": 12056,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207121dd261cccd5df3ed945917028fcad6bed79bbf8c7bd85d55a95cd8cbf183b64736f6c63430008110033",
									".code": [
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "84E79842"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "B4F3FCB7"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "B4F3FCB7"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "B9209E33"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "E744D789"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "F0EB5E54"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "F11ABFD8"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "84E79842"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "8E098CA1"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "97A6278E"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "A8D29D1D"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "454A03E0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "454A03E0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "5DBE47E8"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "653DC9F1"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "670AF6A9"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "7E42683B"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "184B9559"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "1FFBB064"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "26D941AE"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "3B239A7F"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "3B3E12F4"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 12056,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4864,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4864,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1101,
											"end": 1115,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1101,
											"end": 1115,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1076,
											"end": 1117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1076,
											"end": 1117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7195,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6535,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6535,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 10974,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10954,
											"end": 10974,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10954,
											"end": 10974,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1806,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10857,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1641,
											"end": 1873,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 11536,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 11536,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 11256,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 11256,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5760,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5760,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7526,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7526,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 10409,
											"end": 10577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 10409,
											"end": 10577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4090,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3908,
											"end": 4096,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6172,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 6172,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6843,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6843,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10782,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 10653,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10754,
											"end": 10775,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10754,
											"end": 10775,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10754,
											"end": 10775,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 10653,
											"end": 10782,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7843,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7843,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 11899,
											"end": 12054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 11899,
											"end": 12054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11187,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 11057,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 11057,
											"end": 11187,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 5,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5049,
											"end": 5086,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5086,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5049,
											"end": 5136,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5102,
											"end": 5136,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5136,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5049,
											"end": 5136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5182,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5182,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5049,
											"end": 5182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5028,
											"end": 5227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5028,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5384,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5519,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0"
										},
										{
											"begin": 5475,
											"end": 5519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5519,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0"
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5584,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C"
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5635,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5645,
											"end": 5671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5660,
											"end": 5670,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5645,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5645,
											"end": 5671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5645,
											"end": 5671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5645,
											"end": 5671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5938,
											"end": 5988,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 5988,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4780,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4799,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7303,
											"end": 7324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7377,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7392,
											"end": 7436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C"
										},
										{
											"begin": 7392,
											"end": 7436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7436,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F3418D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6637,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 6673,
											"end": 6692,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6673,
											"end": 6692,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6646,
											"end": 6693,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9F3418D5"
										},
										{
											"begin": 6635,
											"end": 6684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6559,
											"end": 6577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6708,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6635,
											"end": 6708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853"
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 6761,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11688,
											"end": 11709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11688,
											"end": 11709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A53410DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 6992,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6977,
											"end": 6992,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6977,
											"end": 6992,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6993,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7029,
											"end": 7044,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7045,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7054,
											"end": 7101,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A53410DD"
										},
										{
											"begin": 11688,
											"end": 11730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 11688,
											"end": 11765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19"
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11823,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11328,
											"end": 11332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11332,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11365,
											"end": 11377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 11356,
											"end": 11378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11378,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11356,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11348,
											"end": 11393,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11348,
											"end": 11393,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11344,
											"end": 11432,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11256,
											"end": 11459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11432,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11344,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11448,
											"end": 11452,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11448,
											"end": 11452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11256,
											"end": 11459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 5962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5993,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6031,
											"end": 6045,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6045,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6031,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6031,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6031,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6061,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6061,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6050,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6050,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6050,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6066,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6066,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6080,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6014,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5995,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 6097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7691,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7706,
											"end": 7750,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0"
										},
										{
											"begin": 7706,
											"end": 7750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7750,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3256,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3229,
											"end": 3259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 10409,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10534,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10513,
											"end": 10534,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9F84EF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10488,
											"end": 10494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10534,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10556,
											"name": "PUSH",
											"source": 7,
											"value": "727E13BC"
										},
										{
											"begin": 10513,
											"end": 10556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 10513,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4356,
											"end": 4420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4430,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4430,
											"end": 4449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6277,
											"end": 6298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6310,
											"end": 6322,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6301,
											"end": 6323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6301,
											"end": 6323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6354,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7402E7C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8552,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8603,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8588,
											"end": 8603,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8568,
											"end": 8586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 8604,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6277,
											"end": 6323,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6323,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E805CF86"
										},
										{
											"begin": 6333,
											"end": 6375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8453,
											"end": 8471,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8453,
											"end": 8471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6333,
											"end": 6400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010"
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6454,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6461,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4559,
											"end": 4623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4633,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4633,
											"end": 4655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "ED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6960,
											"end": 6972,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6951,
											"end": 6973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6951,
											"end": 6973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6983,
											"end": 7004,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF191BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6973,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6973,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 7004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "CF191BCD"
										},
										{
											"begin": 6983,
											"end": 7030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6983,
											"end": 7044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327"
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7101,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 7108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 7108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8324,
											"end": 8336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8315,
											"end": 8337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8337,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8315,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8307,
											"end": 8352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8352,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8303,
											"end": 8369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8369,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8303,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8437,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8417,
											"end": 8437,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37C27581"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8417,
											"end": 8437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8452,
											"name": "PUSH",
											"source": 7,
											"value": "DF09D604"
										},
										{
											"begin": 8417,
											"end": 8452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8414,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8414,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8437,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8417,
											"end": 8454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8417,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8468,
											"end": 8487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8468,
											"end": 8494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8468,
											"end": 8499,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8464,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8464,
											"end": 8537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8464,
											"end": 8537,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8464,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8594,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8644,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8654,
											"end": 8671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8743,
											"end": 8762,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8743,
											"end": 8769,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8769,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8871,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8850,
											"end": 8871,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8799,
											"end": 8835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8850,
											"end": 8871,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8902,
											"name": "PUSH",
											"source": 7,
											"value": "52C111D1"
										},
										{
											"begin": 8850,
											"end": 8902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8922,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8933,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 8903,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10235,
											"end": 10237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10101,
											"end": 10278,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8850,
											"end": 8935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8850,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8799,
											"end": 8935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8799,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 8975,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8979,
											"end": 8980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8980,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8950,
											"end": 8997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8990,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 8995,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8997,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8950,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9039,
											"end": 9075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9134,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9134,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9194,
											"end": 9211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9232,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9243,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9213,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11474,
											"end": 11506,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11474,
											"end": 11506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11474,
											"end": 11506,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11474,
											"end": 11506,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11538,
											"end": 11540,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11516,
											"end": 11550,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11447,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9173,
											"end": 9246,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9159,
											"end": 9170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9246,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 9136,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9307,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9314,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9397,
											"end": 9409,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 9388,
											"end": 9410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9410,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9388,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9419,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9419,
											"name": "PUSH",
											"source": 7,
											"value": "C9100BCB"
										},
										{
											"begin": 9420,
											"end": 9428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9420,
											"end": 9431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10247,
											"end": 10272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10235,
											"end": 10237,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10101,
											"end": 10278,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9388,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9388,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP14",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9432,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9474,
											"end": 9493,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9504,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9474,
											"end": 9505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9505,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9470,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9505,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9566,
											"name": "PUSH",
											"source": 7,
											"value": "C0969A6E"
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 9576,
											"end": 9588,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 9567,
											"end": 9589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9610,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9621,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9591,
											"end": 9622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9624,
											"end": 9627,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9653,
											"end": 9657,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 9533,
											"end": 9658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9533,
											"end": 9658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9533,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9529,
											"end": 10173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10060,
											"end": 10068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10075,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10060,
											"end": 10079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 10060,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10080,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10050,
											"end": 10151,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10119,
											"end": 10124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10124,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10050,
											"end": 10151,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10050,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 10173,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9529,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9710,
											"end": 9855,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9821,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9828,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9855,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 9710,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 9923,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9904,
											"end": 9912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9919,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9904,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 9904,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9924,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 9884,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9880,
											"end": 9995,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9963,
											"end": 9968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9968,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9995,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9880,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 10017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9451,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10207,
											"end": 10215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10222,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10207,
											"end": 10226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10207,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10227,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 10197,
											"end": 10282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10258,
											"end": 10263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10258,
											"end": 10263,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 10197,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 9316,
											"end": 9319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 10296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 10306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 10306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8771,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8709,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10322,
											"end": 10326,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10322,
											"end": 10326,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 10333,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 7970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7949,
											"end": 8021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 8021,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0"
										},
										{
											"begin": 8036,
											"end": 8086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 8086,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 8093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 11899,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12018,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11997,
											"end": 12018,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7988D3A5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12018,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "PUSH",
											"source": 7,
											"value": "7988D3A5"
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 11997,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1641,
											"end": 1873,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3595,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 1964,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1939,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15508,
											"end": 15510,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15490,
											"end": 15511,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15547,
											"end": 15549,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 15527,
											"end": 15545,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15527,
											"end": 15545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15527,
											"end": 15545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15520,
											"end": 15550,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15586,
											"end": 15620,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420697320746865207A65726F206164647265"
										},
										{
											"begin": 15566,
											"end": 15584,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15566,
											"end": 15584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15566,
											"end": 15584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15559,
											"end": 15621,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15630,
											"end": 15662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15679,
											"end": 15698,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15679,
											"end": 15698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 15306,
											"end": 15704,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1867,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1641,
											"end": 1873,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4154,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15911,
											"end": 15913,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15893,
											"end": 15914,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15950,
											"end": 15952,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15923,
											"end": 15953,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15989,
											"end": 16022,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 15969,
											"end": 15987,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15969,
											"end": 15987,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15969,
											"end": 15987,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15962,
											"end": 16023,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16040,
											"end": 16058,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16040,
											"end": 16058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 15709,
											"end": 16064,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4077,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4406,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16271,
											"end": 16273,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16253,
											"end": 16274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16310,
											"end": 16312,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 16290,
											"end": 16308,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16290,
											"end": 16308,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16290,
											"end": 16308,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16283,
											"end": 16313,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16349,
											"end": 16383,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C"
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16322,
											"end": 16384,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16400,
											"end": 16418,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16400,
											"end": 16418,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16400,
											"end": 16418,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16393,
											"end": 16424,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16441,
											"end": 16460,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 16441,
											"end": 16460,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 16069,
											"end": 16466,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 5,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 150,
											"end": 679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 227,
											"end": 233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 241,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 243,
											"end": 249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 298,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 284,
											"end": 293,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 275,
											"end": 282,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 271,
											"end": 294,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 267,
											"end": 299,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 351,
											"end": 360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 338,
											"end": 361,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 370,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 370,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 370,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 370,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 420,
											"end": 425,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 477,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 480,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 462,
											"end": 480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 449,
											"end": 481,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 490,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 449,
											"end": 481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 490,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 490,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 490,
											"end": 523,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 490,
											"end": 523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 542,
											"end": 549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 601,
											"end": 603,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 604,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 586,
											"end": 604,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 573,
											"end": 605,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 614,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 573,
											"end": 605,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 614,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 614,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 614,
											"end": 647,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 614,
											"end": 647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 666,
											"end": 673,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 656,
											"end": 673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 656,
											"end": 673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 150,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 684,
											"end": 931,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 684,
											"end": 931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 743,
											"end": 749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 764,
											"end": 816,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 764,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 764,
											"end": 816,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 812,
											"end": 813,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 802,
											"end": 814,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 764,
											"end": 816,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 764,
											"end": 816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 851,
											"end": 860,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 838,
											"end": 861,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 870,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 870,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 870,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 870,
											"end": 901,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 870,
											"end": 901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 920,
											"end": 925,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 684,
											"end": 931,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1221,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1182,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 1182,
											"end": 1239,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1380,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1364,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1349,
											"end": 1381,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1396,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 1346,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 1452,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 1452,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1572,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1572,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 1572,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1572,
											"end": 1604,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 1572,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1630,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1613,
											"end": 1630,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1613,
											"end": 1630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1613,
											"end": 1630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1878,
											"end": 2422,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1878,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1971,
											"end": 1977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2046,
											"end": 2058,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 2008,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2095,
											"end": 2104,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 2139,
											"end": 2144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2114,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2164,
											"end": 2169,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2193,
											"end": 2225,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 2193,
											"end": 2225,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 2234,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2267,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 2234,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 2358,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2490,
											"end": 2498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2554,
											"end": 2557,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2535,
											"end": 2552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2615,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2595,
											"end": 2615,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2627,
											"end": 2657,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2674,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 2624,
											"end": 2674,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2674,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 2624,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2705,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2770,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2743,
											"end": 2757,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2727,
											"end": 2765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2724,
											"end": 2771,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2774,
											"end": 2786,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2427,
											"end": 2794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3041,
											"end": 3064,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3037,
											"end": 3069,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3086,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 3034,
											"end": 3086,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3086,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 3034,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3181,
											"end": 3195,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3198,
											"end": 3210,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 3178,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3247,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3247,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 3247,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3247,
											"end": 3317,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 3247,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3317,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3440,
											"end": 3456,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3440,
											"end": 3456,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3440,
											"end": 3456,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 3437,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 3561,
											"end": 3569,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 3546,
											"end": 3570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 3508,
											"end": 3580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3580,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 3508,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3482,
											"end": 3580,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3687,
											"end": 3689,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3659,
											"end": 3691,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3659,
											"end": 3691,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3703,
											"end": 3719,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3719,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3730,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3722,
											"end": 3734,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3824,
											"end": 3832,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3822,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 3809,
											"end": 3833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 3771,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 3771,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3862,
											"end": 3870,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3862,
											"end": 3870,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 3903,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4309,
											"end": 4714,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4309,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4394,
											"end": 4400,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4452,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4430,
											"end": 4453,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4426,
											"end": 4458,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 4423,
											"end": 4475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4475,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 4423,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4520,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4554,
											"end": 4559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 4529,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4579,
											"end": 4584,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4638,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4608,
											"end": 4640,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4649,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4608,
											"end": 4640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4649,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 4649,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5425,
											"end": 5780,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 5425,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5609,
											"end": 5630,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5609,
											"end": 5630,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5609,
											"end": 5630,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5669,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5705,
											"end": 5738,
											"name": "PUSH",
											"source": 15,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5425,
											"end": 5780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5999,
											"end": 6409,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 5999,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6183,
											"end": 6204,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 15,
											"value": "2E"
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6213,
											"end": 6243,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6279,
											"end": 6313,
											"name": "PUSH",
											"source": 15,
											"value": "4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520"
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 6277,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6259,
											"end": 6277,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6252,
											"end": 6314,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746865204167656E7420726F6C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6345,
											"end": 6347,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6330,
											"end": 6348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6330,
											"end": 6348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6323,
											"end": 6367,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6399,
											"end": 6402,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6384,
											"end": 6403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6384,
											"end": 6403,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5999,
											"end": 6409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7112,
											"end": 7239,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 7112,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7173,
											"end": 7183,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7164,
											"end": 7184,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7185,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7194,
											"end": 7209,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7758,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 7513,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7599,
											"end": 7622,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7595,
											"end": 7627,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7592,
											"end": 7644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7592,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 7592,
											"end": 7644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7642,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7592,
											"end": 7644,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 7592,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7666,
											"end": 7689,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 7722,
											"end": 7727,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 7698,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7763,
											"end": 7890,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 7763,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7824,
											"end": 7834,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7819,
											"end": 7822,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7815,
											"end": 7835,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7836,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7845,
											"end": 7860,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7876,
											"end": 7877,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7884,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 8030,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 7895,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7934,
											"end": 7937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7952,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 7952,
											"end": 7995,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 7975,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 7975,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8011,
											"end": 8024,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8024,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 8030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8284,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 8035,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8104,
											"end": 8110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8157,
											"end": 8159,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8145,
											"end": 8154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8143,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8132,
											"end": 8155,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8128,
											"end": 8160,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8177,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 8125,
											"end": 8177,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8163,
											"end": 8175,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8177,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 8125,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8205,
											"end": 8214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 8248,
											"end": 8253,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 8224,
											"end": 8254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8615,
											"end": 8742,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 8615,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8676,
											"end": 8686,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 8671,
											"end": 8674,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8657,
											"end": 8688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8707,
											"end": 8711,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 8704,
											"end": 8705,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8697,
											"end": 8712,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8731,
											"end": 8735,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8728,
											"end": 8729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8736,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 9022,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 8747,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8818,
											"end": 8820,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8812,
											"end": 8821,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8864,
											"end": 8877,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8864,
											"end": 8877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8860,
											"end": 8887,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8888,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 8936,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8903,
											"end": 8937,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8903,
											"end": 8937,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8939,
											"end": 8961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8939,
											"end": 8961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8939,
											"end": 8961,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8900,
											"end": 8962,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8897,
											"end": 8985,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8897,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 8897,
											"end": 8985,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 8965,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8994,
											"end": 9016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 9022,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 9022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 9022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9210,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 9027,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9162,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9106,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9106,
											"end": 9162,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 9142,
											"end": 9160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9215,
											"end": 10096,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 9215,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9310,
											"end": 9316,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9372,
											"end": 9381,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9370,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9359,
											"end": 9382,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9355,
											"end": 9387,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9402,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9433,
											"end": 9442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9466,
											"end": 9484,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9458,
											"end": 9464,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9455,
											"end": 9485,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9452,
											"end": 9502,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9452,
											"end": 9502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 9452,
											"end": 9502,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9498,
											"end": 9499,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9488,
											"end": 9500,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9452,
											"end": 9502,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 9452,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9543,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9566,
											"end": 9579,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9579,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9562,
											"end": 9589,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 9552,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 9552,
											"end": 9607,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9593,
											"end": 9605,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9552,
											"end": 9607,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 9552,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9626,
											"end": 9635,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 9671,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 9711,
											"end": 9713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9671,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 9671,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9671,
											"end": 9714,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 9671,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 9655,
											"end": 9715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9715,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 9655,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9749,
											"end": 9764,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9749,
											"end": 9764,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9749,
											"end": 9764,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 9827,
											"end": 9837,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9827,
											"end": 9837,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9827,
											"end": 9837,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9827,
											"end": 9837,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9819,
											"end": 9838,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9819,
											"end": 9838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9815,
											"end": 9843,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9815,
											"end": 9843,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9815,
											"end": 9843,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9792,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9792,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9792,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9792,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9874,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9874,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9874,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9891,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 9852,
											"end": 9891,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9877,
											"end": 9889,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9891,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 9852,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9911,
											"end": 9922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9911,
											"end": 9922,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9911,
											"end": 9922,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9911,
											"end": 9922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9953,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9942,
											"end": 9945,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9939,
											"end": 9954,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10001,
											"end": 10024,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10001,
											"end": 10024,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10044,
											"end": 10056,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 9931,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10085,
											"end": 10090,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 9215,
											"end": 10096,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9215,
											"end": 10096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10283,
											"end": 11258,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 10283,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10428,
											"end": 10430,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10450,
											"end": 10457,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10446,
											"end": 10469,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10442,
											"end": 10474,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10491,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10439,
											"end": 10491,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10477,
											"end": 10489,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10491,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10439,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10520,
											"end": 10529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10571,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10545,
											"end": 10551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10542,
											"end": 10572,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10582,
											"end": 10583,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10587,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10539,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10608,
											"end": 10630,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10608,
											"end": 10630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10649,
											"end": 10676,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10688,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10680,
											"end": 10692,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 10639,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10719,
											"end": 10721,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10713,
											"end": 10722,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 10758,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 10798,
											"end": 10800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 10758,
											"end": 10801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 10802,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 10742,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10836,
											"end": 10851,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10918,
											"end": 10919,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 10914,
											"end": 10924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10914,
											"end": 10924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10914,
											"end": 10924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10914,
											"end": 10924,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 10925,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 10925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10902,
											"end": 10930,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10902,
											"end": 10930,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10902,
											"end": 10930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 10961,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 10961,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 10961,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10939,
											"end": 10978,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10939,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 10939,
											"end": 10978,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10971,
											"end": 10972,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10964,
											"end": 10976,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10939,
											"end": 10978,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 10939,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11034,
											"end": 11040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11029,
											"end": 11032,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11026,
											"end": 11041,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11107,
											"end": 11110,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11101,
											"end": 11111,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11124,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 11149,
											"end": 11154,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11124,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 11124,
											"end": 11155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11124,
											"end": 11155,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 11124,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11063,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11063,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11063,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11063,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11018,
											"end": 11228,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11743,
											"end": 11993,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 11743,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11858,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11849,
											"end": 11850,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11846,
											"end": 11859,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11928,
											"end": 11939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11928,
											"end": 11939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11928,
											"end": 11939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11922,
											"end": 11940,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 11920,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 11920,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 11920,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11874,
											"end": 11876,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11838,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11985,
											"end": 11986,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11960,
											"end": 11987,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11743,
											"end": 11993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11998,
											"end": 12388,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 11998,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12073,
											"end": 12078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12125,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12099,
											"end": 12105,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12126,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12149,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 12093,
											"end": 12149,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 12129,
											"end": 12147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12212,
											"end": 12214,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12191,
											"end": 12206,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12191,
											"end": 12206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12187,
											"end": 12216,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12183,
											"end": 12223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 12167,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12224,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12167,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12158,
											"end": 12224,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12158,
											"end": 12224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12240,
											"end": 12245,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12254,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12287,
											"end": 12290,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12278,
											"end": 12284,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12276,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12269,
											"end": 12285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12266,
											"end": 12291,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12308,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 12263,
											"end": 12308,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12302,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12294,
											"end": 12306,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12308,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 12263,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 12375,
											"end": 12381,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12366,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12357,
											"end": 12373,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12352,
											"end": 12355,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12317,
											"end": 12382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12393,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 12393,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12446,
											"end": 12451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12502,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12492,
											"end": 12496,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12490,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12480,
											"end": 12497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12476,
											"end": 12503,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 12466,
											"end": 12521,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12517,
											"end": 12518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12507,
											"end": 12519,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12521,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 12466,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 12618,
											"end": 12621,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12615,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12616,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12596,
											"end": 12600,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12594,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12601,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12539,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12776,
											"end": 12782,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12784,
											"end": 12790,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12792,
											"end": 12798,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12869,
											"end": 12872,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 12857,
											"end": 12866,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12844,
											"end": 12867,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12840,
											"end": 12873,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12890,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12837,
											"end": 12890,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12886,
											"end": 12887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12837,
											"end": 12890,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12837,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12915,
											"end": 12924,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12909,
											"end": 12925,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12899,
											"end": 12925,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12899,
											"end": 12925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12954,
											"end": 12963,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12944,
											"end": 12969,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12969,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12969,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13012,
											"end": 13014,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12991,
											"end": 13016,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 13050,
											"end": 13055,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 13025,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13056,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 13025,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13124,
											"end": 13126,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13109,
											"end": 13127,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 13109,
											"end": 13127,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13103,
											"end": 13128,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13080,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13147,
											"end": 13165,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13174,
											"end": 13208,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13174,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 13174,
											"end": 13208,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13201,
											"end": 13202,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13194,
											"end": 13206,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13174,
											"end": 13208,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 13174,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13227,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 13279,
											"end": 13286,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13270,
											"end": 13276,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13259,
											"end": 13268,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13255,
											"end": 13277,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13227,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 13227,
											"end": 13287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13227,
											"end": 13287,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 13227,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13217,
											"end": 13287,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13217,
											"end": 13287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13333,
											"end": 13336,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 13318,
											"end": 13337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13312,
											"end": 13338,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13296,
											"end": 13338,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13296,
											"end": 13338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13365,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13353,
											"end": 13361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13350,
											"end": 13366,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13383,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 13347,
											"end": 13383,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13379,
											"end": 13380,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13376,
											"end": 13377,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13369,
											"end": 13381,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13383,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 13347,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13402,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13456,
											"end": 13463,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13445,
											"end": 13453,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13434,
											"end": 13443,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13430,
											"end": 13454,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13402,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 13402,
											"end": 13464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13402,
											"end": 13464,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13402,
											"end": 13464,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13392,
											"end": 13464,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13392,
											"end": 13464,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 13499,
											"end": 13508,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 13495,
											"end": 13514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13473,
											"end": 13515,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13473,
											"end": 13515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13540,
											"end": 13542,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13530,
											"end": 13538,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13527,
											"end": 13543,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13560,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 13524,
											"end": 13560,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13556,
											"end": 13557,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13546,
											"end": 13558,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13560,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 13524,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13579,
											"end": 13603,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13579,
											"end": 13603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13638,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 13626,
											"end": 13639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13626,
											"end": 13639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13622,
											"end": 13649,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 13612,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13612,
											"end": 13667,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13663,
											"end": 13664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13661,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13653,
											"end": 13665,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13612,
											"end": 13667,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13612,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13686,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13755,
											"end": 13762,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 13750,
											"end": 13752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13744,
											"end": 13753,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13739,
											"end": 13741,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13735,
											"end": 13737,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13731,
											"end": 13742,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13686,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 13686,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13686,
											"end": 13763,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13686,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13676,
											"end": 13763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13676,
											"end": 13763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13676,
											"end": 13763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12633,
											"end": 13769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13774,
											"end": 14044,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 13774,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13818,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13847,
											"end": 13859,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13880,
											"end": 13886,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13875,
											"end": 13878,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13868,
											"end": 13887,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13896,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 13965,
											"end": 13971,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13958,
											"end": 13962,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13953,
											"end": 13956,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13949,
											"end": 13963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13942,
											"end": 13946,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13935,
											"end": 13940,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13931,
											"end": 13947,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13896,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 13896,
											"end": 13972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13896,
											"end": 13972,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 13896,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14001,
											"end": 14030,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14031,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14031,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14031,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14031,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14033,
											"end": 14037,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13988,
											"end": 14038,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13988,
											"end": 14038,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13774,
											"end": 14044,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13774,
											"end": 14044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14049,
											"end": 14613,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 14049,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14344,
											"end": 14345,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14340,
											"end": 14341,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14335,
											"end": 14338,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 14331,
											"end": 14342,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 14327,
											"end": 14346,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14319,
											"end": 14325,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14315,
											"end": 14347,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14304,
											"end": 14313,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14297,
											"end": 14348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 14390,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14379,
											"end": 14381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14368,
											"end": 14377,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14364,
											"end": 14382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14357,
											"end": 14391,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14427,
											"end": 14430,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 14422,
											"end": 14424,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14411,
											"end": 14420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14400,
											"end": 14431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14278,
											"end": 14282,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 14483,
											"end": 14492,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14479,
											"end": 14498,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14471,
											"end": 14477,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14454,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 14454,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14454,
											"end": 14499,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 14454,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14556,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14545,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14557,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14530,
											"end": 14532,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14519,
											"end": 14528,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14515,
											"end": 14533,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14508,
											"end": 14558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14575,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14575,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 14575,
											"end": 14607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14618,
											"end": 14895,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 14618,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14685,
											"end": 14691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14740,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14735,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14717,
											"end": 14724,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14713,
											"end": 14736,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14709,
											"end": 14741,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14758,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 14706,
											"end": 14758,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14754,
											"end": 14755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14744,
											"end": 14756,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14706,
											"end": 14758,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 14706,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14786,
											"end": 14795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14780,
											"end": 14796,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14839,
											"end": 14844,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14832,
											"end": 14845,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14825,
											"end": 14846,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14818,
											"end": 14823,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14815,
											"end": 14847,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14805,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 14805,
											"end": 14865,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14861,
											"end": 14862,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14859,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14851,
											"end": 14863,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14900,
											"end": 15028,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 14900,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14988,
											"end": 14999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14988,
											"end": 14999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14988,
											"end": 14999,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14985,
											"end": 15022,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14985,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 14985,
											"end": 15022,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 15002,
											"end": 15020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15033,
											"end": 15301,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 15033,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15120,
											"end": 15126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15175,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15152,
											"end": 15159,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15148,
											"end": 15171,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15144,
											"end": 15176,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15141,
											"end": 15193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15141,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 15141,
											"end": 15193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15189,
											"end": 15190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15186,
											"end": 15187,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15179,
											"end": 15191,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15141,
											"end": 15193,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 15141,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15221,
											"end": 15230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15215,
											"end": 15231,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 15265,
											"end": 15270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 15240,
											"end": 15271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistry.sol",
								"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/IRStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAgent(address)": "84e79842",
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"init(address,address,address)": "184b9559",
							"investorCountry(address)": "7e42683b",
							"isAgent(address)": "1ffbb064",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"owner()": "8da5cb5b",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"removeAgent(address)": "97a6278e",
							"renounceOwnership()": "715018a6",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"topicsRegistry()": "3b3e12f4",
							"transferOwnership(address)": "f2fde38b",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_identityStorage\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"batchRegisterIdentity(address[],address[],uint16[])\":{\"details\":\"See {IIdentityRegistry-batchRegisterIdentity}.\"},\"contains(address)\":{\"details\":\"See {IIdentityRegistry-contains}.\"},\"deleteIdentity(address)\":{\"details\":\"See {IIdentityRegistry-deleteIdentity}.\"},\"identity(address)\":{\"details\":\"See {IIdentityRegistry-identity}.\"},\"identityStorage()\":{\"details\":\"See {IIdentityRegistry-identityStorage}.\"},\"init(address,address,address)\":{\"details\":\"the constructor initiates the Identity Registry smart contract\",\"params\":{\"_claimTopicsRegistry\":\"the claim topics registry linked to the Identity Registry\",\"_identityStorage\":\"the identity registry storage linked to the Identity Registry  emits a `ClaimTopicsRegistrySet` event  emits a `TrustedIssuersRegistrySet` event  emits an `IdentityStorageSet` event\",\"_trustedIssuersRegistry\":\"the trusted issuers registry linked to the Identity Registry\"}},\"investorCountry(address)\":{\"details\":\"See {IIdentityRegistry-investorCountry}.\"},\"isVerified(address)\":{\"details\":\"See {IIdentityRegistry-isVerified}.\"},\"issuersRegistry()\":{\"details\":\"See {IIdentityRegistry-issuersRegistry}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerIdentity(address,address,uint16)\":{\"details\":\"See {IIdentityRegistry-registerIdentity}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setClaimTopicsRegistry(address)\":{\"details\":\"See {IIdentityRegistry-setClaimTopicsRegistry}.\"},\"setIdentityRegistryStorage(address)\":{\"details\":\"See {IIdentityRegistry-setIdentityRegistryStorage}.\"},\"setTrustedIssuersRegistry(address)\":{\"details\":\"See {IIdentityRegistry-setTrustedIssuersRegistry}.\"},\"topicsRegistry()\":{\"details\":\"See {IIdentityRegistry-topicsRegistry}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCountry(address,uint16)\":{\"details\":\"See {IIdentityRegistry-updateCountry}.\"},\"updateIdentity(address,address)\":{\"details\":\"See {IIdentityRegistry-updateIdentity}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsRegistrySet(address)\":{\"notice\":\"this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\"},\"CountryUpdated(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityRegistered(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityRemoved(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityStorageSet(address)\":{\"notice\":\"this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract\"},\"IdentityUpdated(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"TrustedIssuersRegistrySet(address)\":{\"notice\":\"this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/implementation/IdentityRegistry.sol\":\"IdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]},\"contracts t-rex/registry/implementation/IdentityRegistry.sol\":{\"keccak256\":\"0x061460bac83b545e9c6617b2c12a3b040a0b12846ee5bc92cb22bd3926f8a93b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://18e1b8635839aa5d84ee6114073564ac1818a5051e281611e1c1327d6f7aec29\",\"dweb:/ipfs/QmUE1mpEn17fREeoUDhxT7UPSA2XNHan5T7H5qN4R2Rrih\"]},\"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts t-rex/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts t-rex/registry/storage/IRStorage.sol\":{\"keccak256\":\"0xbf5d8d97eff5eeb3d160f53294627dbcbb65d85c4faa275c40fddec63b8af027\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1efbb1b0f18c0963d090f425a9dcd28df77bd8eb4cd9bd5af1ec06d62e30c9d0\",\"dweb:/ipfs/QmX9bSmdYjZSfAafkfieB8Rz9NwiVCLrrRHwf8G2QHxYyf\"]},\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":{\"keccak256\":\"0x8e5c6409d5d25a3d73e615fe568ea72edb0dae9e2393f392ec694b33655727e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://327c9f2b5f56bf3a969b852c4c22dfc6a67eb0e97ed0b15b386d930387ced245\",\"dweb:/ipfs/QmWMwpykNT2cihW4mVWtEcKwNtQ96YLnSJZCSzRCmBE9PD\"]},\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1907,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_agents",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)2005_storage"
							},
							{
								"astId": 1880,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenTopicsRegistry",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IClaimTopicsRegistry)1479"
							},
							{
								"astId": 1884,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenIssuersRegistry",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ITrustedIssuersRegistry)1871"
							},
							{
								"astId": 1888,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenIdentityStorage",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IIdentityRegistryStorage)1770"
							},
							{
								"astId": 1893,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IClaimTopicsRegistry)1479": {
								"encoding": "inplace",
								"label": "contract IClaimTopicsRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(IIdentityRegistryStorage)1770": {
								"encoding": "inplace",
								"label": "contract IIdentityRegistryStorage",
								"numberOfBytes": "20"
							},
							"t_contract(ITrustedIssuersRegistry)1871": {
								"encoding": "inplace",
								"label": "contract ITrustedIssuersRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)2005_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 2004,
										"contract": "contracts t-rex/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimTopicsRegistrySet(address)": {
								"notice": "this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"
							},
							"CountryUpdated(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityRegistered(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityRemoved(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityStorageSet(address)": {
								"notice": "this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract"
							},
							"IdentityUpdated(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"TrustedIssuersRegistrySet(address)": {
								"notice": "this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							},
							"getClaimTopics()": {
								"details": "Get the trusted claim topics for the security token",
								"returns": {
									"_0": "Array of trusted claim topics"
								}
							},
							"removeClaimTopic(uint256)": {
								"details": "Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the trusted claim topics for the security token\",\"returns\":{\"_0\":\"Array of trusted claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/IIdentityRegistry.sol": {
				"IIdentityRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchRegisterIdentity(address[],address[],uint16[])": {
								"details": "function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_countries": "The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events",
									"_identities": "The addresses of the corresponding identity contracts",
									"_userAddresses": "The addresses of the users"
								}
							},
							"contains(address)": {
								"details": "This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.",
								"params": {
									"_userAddress": "The address of the user to be checked."
								},
								"returns": {
									"_0": "'True' if the address is contained in the Identity Registry, 'false' if not."
								}
							},
							"deleteIdentity(address)": {
								"details": "Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_userAddress": "The address of the user to be removed  emits `IdentityRemoved` event"
								}
							},
							"identity(address)": {
								"details": "Returns the onchainID of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"identityStorage()": {
								"details": "Returns the IdentityRegistryStorage linked to the current IdentityRegistry."
							},
							"investorCountry(address)": {
								"details": "Returns the country code of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"isVerified(address)": {
								"details": "This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry",
								"params": {
									"_userAddress": "The address of the user to be verified."
								},
								"returns": {
									"_0": "'True' if the address is verified, 'false' if not."
								}
							},
							"issuersRegistry()": {
								"details": "Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."
							},
							"registerIdentity(address,address,uint16)": {
								"details": "Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_country": "The country of the investor  emits `IdentityRegistered` event",
									"_identity": "The address of the user's identity contract",
									"_userAddress": "The address of the user"
								}
							},
							"setClaimTopicsRegistry(address)": {
								"details": "Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_claimTopicsRegistry": "The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event"
								}
							},
							"setIdentityRegistryStorage(address)": {
								"details": "Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_identityRegistryStorage": "The address of the new Identity Registry Storage  emits `IdentityStorageSet` event"
								}
							},
							"setTrustedIssuersRegistry(address)": {
								"details": "Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_trustedIssuersRegistry": "The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event"
								}
							},
							"topicsRegistry()": {
								"details": "Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."
							},
							"updateCountry(address,uint16)": {
								"details": "Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_country": "The new country of the user  emits `CountryUpdated` event",
									"_userAddress": "The address of the user"
								}
							},
							"updateIdentity(address,address)": {
								"details": "Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_identity": "The address of the user's new identity contract  emits `IdentityUpdated` event",
									"_userAddress": "The address of the user"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"investorCountry(address)": "7e42683b",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"topicsRegistry()": "3b3e12f4",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRegisterIdentity(address[],address[],uint16[])\":{\"details\":\"function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_countries\":\"The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events\",\"_identities\":\"The addresses of the corresponding identity contracts\",\"_userAddresses\":\"The addresses of the users\"}},\"contains(address)\":{\"details\":\"This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.\",\"params\":{\"_userAddress\":\"The address of the user to be checked.\"},\"returns\":{\"_0\":\"'True' if the address is contained in the Identity Registry, 'false' if not.\"}},\"deleteIdentity(address)\":{\"details\":\"Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityRemoved` event\"}},\"identity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"identityStorage()\":{\"details\":\"Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\"},\"investorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"isVerified(address)\":{\"details\":\"This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry\",\"params\":{\"_userAddress\":\"The address of the user to be verified.\"},\"returns\":{\"_0\":\"'True' if the address is verified, 'false' if not.\"}},\"issuersRegistry()\":{\"details\":\"Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\"},\"registerIdentity(address,address,uint16)\":{\"details\":\"Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityRegistered` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"setClaimTopicsRegistry(address)\":{\"details\":\"Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_claimTopicsRegistry\":\"The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event\"}},\"setIdentityRegistryStorage(address)\":{\"details\":\"Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_identityRegistryStorage\":\"The address of the new Identity Registry Storage  emits `IdentityStorageSet` event\"}},\"setTrustedIssuersRegistry(address)\":{\"details\":\"Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_trustedIssuersRegistry\":\"The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event\"}},\"topicsRegistry()\":{\"details\":\"Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\"},\"updateCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryUpdated` event\",\"_userAddress\":\"The address of the user\"}},\"updateIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityUpdated` event\",\"_userAddress\":\"The address of the user\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsRegistrySet(address)\":{\"notice\":\"this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\"},\"CountryUpdated(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityRegistered(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityRemoved(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityStorageSet(address)\":{\"notice\":\"this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract\"},\"IdentityUpdated(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"TrustedIssuersRegistrySet(address)\":{\"notice\":\"this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts t-rex/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicsRegistrySet(address)": {
								"notice": "this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"
							},
							"CountryUpdated(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityRegistered(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityRemoved(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityStorageSet(address)": {
								"notice": "this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract"
							},
							"IdentityUpdated(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"TrustedIssuersRegistrySet(address)": {
								"notice": "this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"details": "adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The country of the investor  emits `IdentityStored` event",
									"_identity": "The address of the user's identity contract",
									"_userAddress": "The address of the user"
								}
							},
							"bindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to add."
								}
							},
							"linkedIdentityRegistries()": {
								"details": "Returns the identity registries linked to the storage contract"
							},
							"modifyStoredIdentity(address,address)": {
								"details": "Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_identity": "The address of the user's new identity contract  emits `IdentityModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"modifyStoredInvestorCountry(address,uint16)": {
								"details": "Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The new country of the user  emits `CountryModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"removeIdentityFromStorage(address)": {
								"details": "Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_userAddress": "The address of the user to be removed  emits `IdentityUnstored` event"
								}
							},
							"storedIdentity(address)": {
								"details": "Returns the onchainID of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"storedInvestorCountry(address)": {
								"details": "Returns the country code of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"unbindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to remove."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityStored` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"bindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to add.\"}},\"linkedIdentityRegistries()\":{\"details\":\"Returns the identity registries linked to the storage contract\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityModified` event\",\"_userAddress\":\"The address of the user\"}},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryModified` event\",\"_userAddress\":\"The address of the user\"}},\"removeIdentityFromStorage(address)\":{\"details\":\"Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityUnstored` event\"}},\"storedIdentity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"storedInvestorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"unbindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CountryModified(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityModified(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"IdentityRegistryBound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added\"},\"IdentityRegistryUnbound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed\"},\"IdentityStored(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityUnstored(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"}},\"kind\":\"user\",\"methods\":{\"bindIdentityRegistry(address)\":{\"notice\":\"Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS\"},\"unbindIdentityRegistry(address)\":{\"notice\":\"Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CountryModified(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityModified(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"IdentityRegistryBound(address)": {
								"notice": "this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added"
							},
							"IdentityRegistryUnbound(address)": {
								"notice": "this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed"
							},
							"IdentityStored(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityUnstored(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							}
						},
						"kind": "user",
						"methods": {
							"bindIdentityRegistry(address)": {
								"notice": "Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS"
							},
							"unbindIdentityRegistry(address)": {
								"notice": "Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract"
							}
						},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTrustedIssuer(address,uint256[])": {
								"details": "registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event",
									"_trustedIssuer": "The ClaimIssuer contract address of the trusted claim issuer."
								}
							},
							"getTrustedIssuerClaimTopics(address)": {
								"details": "Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.",
								"params": {
									"_trustedIssuer": "the trusted issuer concerned."
								},
								"returns": {
									"_0": "The set of claim topics that the trusted issuer is allowed to emit"
								}
							},
							"getTrustedIssuers()": {
								"details": "Function for getting all the trusted claim issuers stored.",
								"returns": {
									"_0": "array of all claim issuers registered."
								}
							},
							"getTrustedIssuersForClaimTopic(uint256)": {
								"details": "Function for getting all the trusted issuer allowed for a given claim topic.",
								"params": {
									"claimTopic": "the claim topic to get the trusted issuers for."
								},
								"returns": {
									"_0": "array of all claim issuer addresses that are allowed for the given claim topic."
								}
							},
							"hasClaimTopic(address,uint256)": {
								"details": "Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic",
								"params": {
									"_claimTopic": "the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it",
									"_issuer": "the address of the trusted issuer's ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted for this claim topic."
								}
							},
							"isTrustedIssuer(address)": {
								"details": "Checks if the ClaimIssuer contract is trusted",
								"params": {
									"_issuer": "the address of the ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted, false otherwise."
								}
							},
							"removeTrustedIssuer(address)": {
								"details": "Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first",
								"params": {
									"_trustedIssuer": "the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event"
								}
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event",
									"_trustedIssuer": "the claim issuer to update."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event\",\"_trustedIssuer\":\"The ClaimIssuer contract address of the trusted claim issuer.\"}},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\",\"params\":{\"_trustedIssuer\":\"the trusted issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the trusted issuer is allowed to emit\"}},\"getTrustedIssuers()\":{\"details\":\"Function for getting all the trusted claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the trusted issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the trusted issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the trusted issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted for this claim topic.\"}},\"isTrustedIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is trusted\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted, false otherwise.\"}},\"removeTrustedIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_trustedIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event\",\"_trustedIssuer\":\"the claim issuer to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerRemoved(address)": {
								"notice": "this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/storage/IRStorage.sol": {
				"IRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."
							},
							"_tokenIdentityStorage": {
								"details": "Address of the IdentityRegistryStorage Contract"
							},
							"_tokenIssuersRegistry": {
								"details": "Address of the TrustedIssuersRegistry Contract"
							},
							"_tokenTopicsRegistry": {
								"details": "Address of the ClaimTopicsRegistry Contract"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/storage/IRStorage.sol\":3995:4585  contract IRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/storage/IRStorage.sol\":3995:4585  contract IRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203ac1832a61e39713bfaed2a1d507c2fe698ea2baf748a0a63ed6416b72e8de5a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203ac1832a61e39713bfaed2a1d507c2fe698ea2baf748a0a63ed6416b72e8de5a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xC1 DUP4 0x2A PUSH2 0xE397 SGT 0xBF 0xAE 0xD2 LOG1 0xD5 SMOD 0xC2 INVALID PUSH10 0x8EA2BAF748A0A63ED641 PUSH12 0x72E8DE5A64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "3995:590:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203ac1832a61e39713bfaed2a1d507c2fe698ea2baf748a0a63ed6416b72e8de5a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xC1 DUP4 0x2A PUSH2 0xE397 SGT 0xBF 0xAE 0xD2 LOG1 0xD5 SMOD 0xC2 INVALID PUSH10 0x8EA2BAF748A0A63ED641 PUSH12 0x72E8DE5A64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "3995:590:12:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3995,
									"end": 4585,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ac1832a61e39713bfaed2a1d507c2fe698ea2baf748a0a63ed6416b72e8de5a64736f6c63430008110033",
									".code": [
										{
											"begin": 3995,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3995,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3995,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4585,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3995,
											"end": 4585,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistry.sol",
								"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/IRStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"},\"_tokenIdentityStorage\":{\"details\":\"Address of the IdentityRegistryStorage Contract\"},\"_tokenIssuersRegistry\":{\"details\":\"Address of the TrustedIssuersRegistry Contract\"},\"_tokenTopicsRegistry\":{\"details\":\"Address of the ClaimTopicsRegistry Contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/storage/IRStorage.sol\":\"IRStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts t-rex/registry/storage/IRStorage.sol\":{\"keccak256\":\"0xbf5d8d97eff5eeb3d160f53294627dbcbb65d85c4faa275c40fddec63b8af027\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1efbb1b0f18c0963d090f425a9dcd28df77bd8eb4cd9bd5af1ec06d62e30c9d0\",\"dweb:/ipfs/QmX9bSmdYjZSfAafkfieB8Rz9NwiVCLrrRHwf8G2QHxYyf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "contracts t-rex/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenTopicsRegistry",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IClaimTopicsRegistry)1479"
							},
							{
								"astId": 1884,
								"contract": "contracts t-rex/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenIssuersRegistry",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ITrustedIssuersRegistry)1871"
							},
							{
								"astId": 1888,
								"contract": "contracts t-rex/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenIdentityStorage",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IIdentityRegistryStorage)1770"
							},
							{
								"astId": 1893,
								"contract": "contracts t-rex/registry/storage/IRStorage.sol:IRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IClaimTopicsRegistry)1479": {
								"encoding": "inplace",
								"label": "contract IClaimTopicsRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(IIdentityRegistryStorage)1770": {
								"encoding": "inplace",
								"label": "contract IIdentityRegistryStorage",
								"numberOfBytes": "20"
							},
							"t_contract(ITrustedIssuersRegistry)1871": {
								"encoding": "inplace",
								"label": "contract ITrustedIssuersRegistry",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"AgentRoleUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "addAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "isAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "removeAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":3943:4808  contract AgentRoleUpgradeable is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":3943:4808  contract AgentRoleUpgradeable is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1ffbb064\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84e79842\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x97a6278e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_5:\n      tag_15\n      tag_18\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      tag_13\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_7:\n      tag_15\n      tag_25\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_15\n      tag_28\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_12:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      tag_31\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      dup2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4792:4798  _agent */\n      dup4\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4791  _agents.has */\n      tag_32\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      jump\t// in\n    tag_31:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4773:4799  return _agents.has(_agent) */\n      swap3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      tag_37\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3256:3257  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3247  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4364:4384  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1f\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1018   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1019   */\n      mstore\n        /* \"#utility.yul\":1036:1054   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      tag_45\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4437  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4442:4448  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4441  _agents.add */\n      tag_46\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      jump\t// in\n    tag_45:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4464:4482  AgentAdded(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xf68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4567:4587  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1f\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1018   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1019   */\n      mstore\n        /* \"#utility.yul\":1036:1054   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_43\n        /* \"#utility.yul\":705:1060   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n    tag_53:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      tag_55\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4640  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4648:4654  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4647  _agents.remove */\n      tag_56\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      jump\t// in\n    tag_55:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4670:4690  AgentRemoved(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3499:3521  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n      tag_60\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3572:3573  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      tag_43\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3614:3622  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3613  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_32:\n        /* \"contracts t-rex/roles/Roles.sol\":4668:4672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4692:4713  account != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1306:1308   */\n      0x22\n        /* \"#utility.yul\":1286:1304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1279:1309   */\n      mstore\n        /* \"#utility.yul\":1345:1379   */\n      0x526f6c65733a206163636f756e7420697320746865207a65726f206164647265\n        /* \"#utility.yul\":1325:1343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1318:1380   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":1396:1414   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1389:1421   */\n      mstore\n        /* \"#utility.yul\":1438:1457   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_43\n        /* \"#utility.yul\":1065:1463   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n    tag_64:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4780  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2668:2830  function _checkOwner() internal view virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      tag_70\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2750  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2723:2824  if (owner() != _msgSender()) {... */\n      tag_37\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_43\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3951:3970  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3881  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:4032  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n    tag_46:\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      tag_77\n        /* \"contracts t-rex/roles/Roles.sol\":4158:4162  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4164:4171  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4157  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      jump\t// in\n    tag_77:\n        /* \"contracts t-rex/roles/Roles.sol\":4153:4172  !has(role, account) */\n      iszero\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1652:1673   */\n      mstore\n        /* \"#utility.yul\":1709:1711   */\n      0x1f\n        /* \"#utility.yul\":1689:1707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1682:1712   */\n      mstore\n        /* \"#utility.yul\":1748:1781   */\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n        /* \"#utility.yul\":1728:1746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1721:1782   */\n      mstore\n        /* \"#utility.yul\":1799:1817   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_43\n        /* \"#utility.yul\":1468:1823   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4229  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4241:4245  true */\n      0x01\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n    tag_56:\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      tag_83\n        /* \"contracts t-rex/roles/Roles.sol\":4410:4414  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4416:4423  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4409  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      jump\t// in\n    tag_83:\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2012:2033   */\n      mstore\n        /* \"#utility.yul\":2069:2071   */\n      0x21\n        /* \"#utility.yul\":2049:2067   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2042:2072   */\n      mstore\n        /* \"#utility.yul\":2108:2142   */\n      0x526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c\n        /* \"#utility.yul\":2088:2106   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2081:2143   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":2159:2177   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2152:2183   */\n      mstore\n        /* \"#utility.yul\":2200:2219   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_43\n        /* \"#utility.yul\":1828:2225   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4495:4500  false */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4500  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_11:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_90:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_91:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610568806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100e6578063f2fde38b146100f9575b600080fd5b61007a610075366004610502565b61010c565b60405190151581526020015b60405180910390f35b61009761011e565b005b6100976100a7366004610502565b610132565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610086565b6100976100f4366004610502565b6101d7565b610097610107366004610502565b610277565b600061011881836102b5565b92915050565b610126610338565b6101306000610393565b565b61013a610338565b6001600160a01b0381166101955760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6101a0600082610404565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6101df610338565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640161018c565b610240600082610480565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61027f610338565b6001600160a01b0381166102a957604051631e4fbdf760e01b81526000600482015260240161018c565b6102b281610393565b50565b60006001600160a01b0382166103185760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161018c565b506001600160a01b03166000908152602091909152604090205460ff1690565b3361036a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101305760405163118cdaa760e01b815233600482015260240161018c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61040e82826102b5565b1561045b5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161018c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61048a82826102b5565b6104e05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161018c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561051457600080fd5b81356001600160a01b038116811461052b57600080fd5b939250505056fea264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x97 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP2 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x393 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13A PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 PUSH1 0x0 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x393 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x36A PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEB 0xB2 PUSH9 0xCB51D27193F6115D1 PUSH7 0x97B50A50219E49 0xD EXP PUSH12 0xE5B383D9FEC26D0A64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "3943:865:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_446": {
									"entryPoint": 824,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getOwnableStorage_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_517": {
									"entryPoint": 915,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAgent_1955": {
									"entryPoint": 306,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2032": {
									"entryPoint": 1028,
									"id": 2032,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_2085": {
									"entryPoint": 693,
									"id": 2085,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAgent_1996": {
									"entryPoint": 268,
									"id": 1996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAgent_1983": {
									"entryPoint": 471,
									"id": 1983,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_2058": {
									"entryPoint": 1152,
									"id": 2058,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_460": {
									"entryPoint": 286,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_488": {
									"entryPoint": 631,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2227:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:15"
															},
															"nodeType": "YulIf",
															"src": "94:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:15"
															},
															"nodeType": "YulIf",
															"src": "200:70:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:15",
														"type": ""
													}
												],
												"src": "14:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:15",
														"type": ""
													}
												],
												"src": "305:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "665:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "681:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "686:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "677:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "677:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "690:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:15",
														"type": ""
													}
												],
												"src": "497:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "896:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:15"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "985:33:15",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:61:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:61:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1028:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1040:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1028:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "870:4:15",
														"type": ""
													}
												],
												"src": "705:355:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1290:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1301:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1279:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1345:34:15",
																		"type": "",
																		"value": "Roles: account is the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1411:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1396:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:15"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1416:4:15",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1430:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1216:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:15",
														"type": ""
													}
												],
												"src": "1065:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1682:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1682:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1748:33:15",
																		"type": "",
																		"value": "Roles: account already has role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:61:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1721:61:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1791:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1791:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1619:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1633:4:15",
														"type": ""
													}
												],
												"src": "1468:355:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2002:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2053:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2103:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:18:15"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2108:34:15",
																		"type": "",
																		"value": "Roles: account does not have rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:18:15"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2179:3:15",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2192:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2192:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1979:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1993:4:15",
														"type": ""
													}
												],
												"src": "1828:397:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100e6578063f2fde38b146100f9575b600080fd5b61007a610075366004610502565b61010c565b60405190151581526020015b60405180910390f35b61009761011e565b005b6100976100a7366004610502565b610132565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610086565b6100976100f4366004610502565b6101d7565b610097610107366004610502565b610277565b600061011881836102b5565b92915050565b610126610338565b6101306000610393565b565b61013a610338565b6001600160a01b0381166101955760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6101a0600082610404565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6101df610338565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640161018c565b610240600082610480565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61027f610338565b6001600160a01b0381166102a957604051631e4fbdf760e01b81526000600482015260240161018c565b6102b281610393565b50565b60006001600160a01b0382166103185760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161018c565b506001600160a01b03166000908152602091909152604090205460ff1690565b3361036a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101305760405163118cdaa760e01b815233600482015260240161018c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61040e82826102b5565b1561045b5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161018c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61048a82826102b5565b6104e05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161018c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561051457600080fd5b81356001600160a01b038116811461052b57600080fd5b939250505056fea264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x97 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP2 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x393 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13A PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 PUSH1 0x0 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x393 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x36A PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEB 0xB2 PUSH9 0xCB51D27193F6115D1 PUSH7 0x97B50A50219E49 0xD EXP PUSH12 0xE5B383D9FEC26D0A64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "3943:865:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4703:103;;;;;;:::i;:::-;;:::i;:::-;;;470:14:15;;463:22;445:41;;433:2;418:18;4703:103:13;;;;;;;;3165:101:4;;;:::i;:::-;;4295:194:13;;;;;;:::i;:::-;;:::i;2451:144:4:-;1323:22;2580:8;2451:144;;-1:-1:-1;;;;;2580:8:4;;;643:51:15;;631:2;616:18;2451:144:4;497:203:15;4495:202:13;;;;;;:::i;:::-;;:::i;3415:215:4:-;;;;;;:::i;:::-;;:::i;4703:103:13:-;4757:4;4780:19;4757:4;4792:6;4780:11;:19::i;:::-;4773:26;4703:103;-1:-1:-1;;4703:103:13:o;3165:101:4:-;2344:13;:11;:13::i;:::-;3229:30:::1;3256:1;3229:18;:30::i;:::-;3165:101::o:0;4295:194:13:-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4364:20:13;::::1;4356:64;;;::::0;-1:-1:-1;;;4356:64:13;;907:2:15;4356:64:13::1;::::0;::::1;889:21:15::0;946:2;926:18;;;919:30;985:33;965:18;;;958:61;1036:18;;4356:64:13::1;;;;;;;;;4430:19;:7;4442:6:::0;4430:11:::1;:19::i;:::-;4464:18;::::0;-1:-1:-1;;;;;4464:18:13;::::1;::::0;::::1;::::0;;;::::1;4295:194:::0;:::o;4495:202::-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4567:20:13;::::1;4559:64;;;::::0;-1:-1:-1;;;4559:64:13;;907:2:15;4559:64:13::1;::::0;::::1;889:21:15::0;946:2;926:18;;;919:30;985:33;965:18;;;958:61;1036:18;;4559:64:13::1;705:355:15::0;4559:64:13::1;4633:22;:7;4648:6:::0;4633:14:::1;:22::i;:::-;4670:20;::::0;-1:-1:-1;;;;;4670:20:13;::::1;::::0;::::1;::::0;;;::::1;4495:202:::0;:::o;3415:215:4:-;2344:13;:11;:13::i;:::-;-1:-1:-1;;;;;3499:22:4;::::1;3495:91;;3544:31;::::0;-1:-1:-1;;;3544:31:4;;3572:1:::1;3544:31;::::0;::::1;643:51:15::0;616:18;;3544:31:4::1;497:203:15::0;3495:91:4::1;3595:28;3614:8;3595:18;:28::i;:::-;3415:215:::0;:::o;4596:200:14:-;4668:4;-1:-1:-1;;;;;4692:21:14;;4684:68;;;;-1:-1:-1;;;4684:68:14;;1267:2:15;4684:68:14;;;1249:21:15;1306:2;1286:18;;;1279:30;1345:34;1325:18;;;1318:62;-1:-1:-1;;;1396:18:15;;;1389:32;1438:19;;4684:68:14;1065:398:15;4684:68:14;-1:-1:-1;;;;;;4769:20:14;:11;:20;;;;;;;;;;;;;;;4596:200::o;2668:162:4:-;966:10:6;2727:7:4;1323:22;2580:8;-1:-1:-1;;;;;2580:8:4;;2451:144;2727:7;-1:-1:-1;;;;;2727:23:4;;2723:101;;2773:40;;-1:-1:-1;;;2773:40:4;;966:10:6;2773:40:4;;;643:51:15;616:18;;2773:40:4;497:203:15;3784:248:4;1323:22;3933:8;;-1:-1:-1;;;;;;3951:19:4;;-1:-1:-1;;;;;3951:19:4;;;;;;;;3985:40;;3933:8;;;;;3985:40;;3857:24;;3985:40;3847:185;;3784:248;:::o;4077:175:14:-;4154:18;4158:4;4164:7;4154:3;:18::i;:::-;4153:19;4145:63;;;;-1:-1:-1;;;4145:63:14;;1670:2:15;4145:63:14;;;1652:21:15;1709:2;1689:18;;;1682:30;1748:33;1728:18;;;1721:61;1799:18;;4145:63:14;1468:355:15;4145:63:14;-1:-1:-1;;;;;4218:20:14;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;4218:27:14;4241:4;4218:27;;;4077:175::o;4327:180::-;4406:18;4410:4;4416:7;4406:3;:18::i;:::-;4398:64;;;;-1:-1:-1;;;4398:64:14;;2030:2:15;4398:64:14;;;2012:21:15;2069:2;2049:18;;;2042:30;2108:34;2088:18;;;2081:62;-1:-1:-1;;;2159:18:15;;;2152:31;2200:19;;4398:64:14;1828:397:15;4398:64:14;-1:-1:-1;;;;;4472:20:14;4495:5;4472:20;;;;;;;;;;;:28;;-1:-1:-1;;4472:28:14;;;4327:180::o;14:286:15:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:15;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "276800",
								"executionCost": "318",
								"totalCost": "277118"
							},
							"external": {
								"addAgent(address)": "30323",
								"isAgent(address)": "2582",
								"owner()": "2345",
								"removeAgent(address)": "30358",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
									".code": [
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "1FFBB064"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "84E79842"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "97A6278E"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4780,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4799,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3256,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3229,
											"end": 3259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "PUSH",
											"source": 15,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 958,
											"end": 1019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4430,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4430,
											"end": 4449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "PUSH",
											"source": 15,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 958,
											"end": 1019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 705,
											"end": 1060,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4633,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4633,
											"end": 4655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "ED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3595,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1345,
											"end": 1379,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420697320746865207A65726F206164647265"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1380,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1421,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1065,
											"end": 1463,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4154,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1712,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1721,
											"end": 1782,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1468,
											"end": 1823,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4077,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4406,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2012,
											"end": 2033,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2142,
											"name": "PUSH",
											"source": 15,
											"value": "526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2152,
											"end": 2183,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1828,
											"end": 2225,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistry.sol",
								"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/IRStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAgent(address)": "84e79842",
							"isAgent(address)": "1ffbb064",
							"owner()": "8da5cb5b",
							"removeAgent(address)": "97a6278e",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":\"AgentRoleUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]},\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":{\"keccak256\":\"0x8e5c6409d5d25a3d73e615fe568ea72edb0dae9e2393f392ec694b33655727e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://327c9f2b5f56bf3a969b852c4c22dfc6a67eb0e97ed0b15b386d930387ced245\",\"dweb:/ipfs/QmWMwpykNT2cihW4mVWtEcKwNtQ96YLnSJZCSzRCmBE9PD\"]},\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1907,
								"contract": "contracts t-rex/roles/AgentRoleUpgradeable.sol:AgentRoleUpgradeable",
								"label": "_agents",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)2005_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)2005_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 2004,
										"contract": "contracts t-rex/roles/AgentRoleUpgradeable.sol:AgentRoleUpgradeable",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CREATE SELFDESTRUCT 0x25 LT PUSH32 0xF1CDFF3D560AF952AF1196B7440274F8575AE8B9F0A0F0B4535064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3926:872:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CREATE SELFDESTRUCT 0x25 LT PUSH32 0xF1CDFF3D560AF952AF1196B7440274F8575AE8B9F0A0F0B4535064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
									".code": [
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistry.sol",
								"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistry.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/IRStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/Roles.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 50,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 50,
							"sourceUnit": 329,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 328,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49,
								328,
								304,
								196
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 49,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 49,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 49,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										327
									],
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 328,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 49,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "88:1691:0",
							"usedErrors": []
						}
					],
					"src": "36:1744:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						]
					},
					"id": 197,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 59,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 70,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 81,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 92,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 89,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 101,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 110,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 196,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 196,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 196,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 196,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 159,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 196,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 172,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 173,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 196,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 196,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 196,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 197,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							304
						]
					},
					"id": 305,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 216,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 233,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 250,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 304,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 304,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 304,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 304,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 329,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 197,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 305,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 309,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "178:7:3"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "187:7:3"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 328,
							"linearizedBaseContracts": [
								328,
								304,
								196
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "201:334:3",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "549:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "581:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "571:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 314,
														"name": "IIdentity",
														"nameLocations": [
															"571:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "571:9:3"
													},
													"referencedDeclaration": 328,
													"src": "571:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "608:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "600:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "643:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "628:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "671:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "656:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:115:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "704:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:3"
									},
									"scope": 328,
									"src": "540:170:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 329,
							"src": "155:557:3",
							"usedErrors": []
						}
					],
					"src": "36:677:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							817
						],
						"OwnableUpgradeable": [
							518
						]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 818,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 331,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 817,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 334,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"814:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 817,
										"src": "814:18:4"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "814:18:4"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "285:487:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518,
								817,
								771
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "791:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"id": 338,
									"members": [
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "949:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 338,
											"src": "941:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 336,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "941:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "916:14:4",
									"nodeType": "StructDefinition",
									"scope": 518,
									"src": "909:53:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1104:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 518,
									"src": "1079:116:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 339,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1079:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1129:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1280:81:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1299:56:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1313:32:4",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1323:22:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": true,
														"src": "1313:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 341,
														"isOffset": false,
														"isSlot": false,
														"src": "1323:22:4",
														"valueSize": 1
													}
												],
												"id": 347,
												"nodeType": "InlineAssembly",
												"src": "1290:65:4"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1211:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:2:4"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1277:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1254:24:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "OwnableStorage",
														"nameLocations": [
															"1254:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "1254:14:4"
													},
													"referencedDeclaration": 338,
													"src": "1254:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:26:4"
									},
									"scope": 518,
									"src": "1202:159:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1367:85:4",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 354,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1463:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1498:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1490:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:17:4"
									},
									"src": "1457:50:4"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1513:82:4",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 359,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1606:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:15:4"
									},
									"src": "1600:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 365,
									"name": "OwnershipTransferred",
									"nameLocation": "1653:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1690:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1674:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1721:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1705:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:57:4"
									},
									"src": "1647:84:4"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1929:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1964:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1939:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1939:38:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1737:115:4",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 370,
												"name": "onlyInitializing",
												"nameLocations": [
													"1912:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "1912:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1912:16:4"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1866:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1889:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1881:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:22:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:4"
									},
									"scope": 518,
									"src": "1857:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "2072:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 385,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2086:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2110:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2102:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 386,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2102:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2102:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2086:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "2082:95:4",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "2114:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2163:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2155:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 392,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2155:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2155:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 391,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "2135:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2135:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 397,
															"nodeType": "RevertStatement",
															"src": "2128:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2205:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2186:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2186:32:4"
											}
										]
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "onlyInitializing",
												"nameLocations": [
													"2055:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2055:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2055:16:4"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1999:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2032:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "2024:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:22:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:0:4"
									},
									"scope": 518,
									"src": "1990:235:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2334:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 408,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2344:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "2344:13:4"
											},
											{
												"id": 411,
												"nodeType": "PlaceholderStatement",
												"src": "2367:1:4"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "2231:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 413,
									"name": "onlyOwner",
									"nameLocation": "2322:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:2:4"
									},
									"src": "2313:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2506:89:4",
										"statements": [
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2539:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "2516:24:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 420,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 419,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2516:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "2516:14:4"
															},
															"referencedDeclaration": 338,
															"src": "2516:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 422,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2543:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$338_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:47:4"
											},
											{
												"expression": {
													"expression": {
														"id": 425,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2580:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2582:6:4",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "2580:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 418,
												"id": 427,
												"nodeType": "Return",
												"src": "2573:15:4"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2381:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2460:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:4"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:4"
									},
									"scope": 518,
									"src": "2451:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2713:117:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2727:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2727:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 435,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2738:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2738:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2727:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "2723:101:4",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "2752:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 439,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "2800:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2800:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2773:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2773:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "RevertStatement",
															"src": "2766:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "2601:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2677:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2713:0:4"
									},
									"scope": 518,
									"src": "2668:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3219:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3256:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3248:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 453,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3248:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3248:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 452,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3229:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "3229:30:4"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2836:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 449,
												"name": "onlyOwner",
												"nameLocations": [
													"3209:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "3209:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3209:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3174:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:4"
									},
									"scope": 518,
									"src": "3165:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "3485:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 468,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3499:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3519:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 469,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3511:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3511:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3499:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "3495:91:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "3523:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3572:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3564:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 475,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3564:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3564:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 474,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "3544:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3544:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "RevertStatement",
															"src": "3537:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3614:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 483,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3595:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "3595:28:4"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3272:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyOwner",
												"nameLocations": [
													"3475:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "3475:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3475:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3424:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3450:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "3442:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:18:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3485:0:4"
									},
									"scope": 518,
									"src": "3415:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3847:185:4",
										"statements": [
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3880:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3857:24:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 495,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 494,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3857:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "3857:14:4"
															},
															"referencedDeclaration": 338,
															"src": "3857:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3884:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$338_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3884:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3857:47:4"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3922:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3914:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 500,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3914:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"expression": {
														"id": 502,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3933:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3935:6:4",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "3933:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3914:27:4"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 505,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3951:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3953:6:4",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "3951:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3962:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3951:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3951:19:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4006:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4016:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 511,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "3985:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3985:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "3980:45:4"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3636:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3793:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3820:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3812:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:18:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:0:4"
									},
									"scope": 518,
									"src": "3784:248:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 519,
							"src": "773:3261:4",
							"usedErrors": [
								354,
								359,
								534,
								537
							]
						}
					],
					"src": "102:3933:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							771
						]
					},
					"id": 772,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771
							],
							"name": "Initializable",
							"nameLocation": "2367:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"id": 528,
									"members": [
										{
											"constant": false,
											"id": 524,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 528,
											"src": "2813:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 523,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 527,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 528,
											"src": "2950:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 526,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:5",
									"nodeType": "StructDefinition",
									"scope": 771,
									"src": "2685:290:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 531,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "3098:115:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 529,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 530,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:5",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 534,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:5"
									},
									"src": "3285:30:5"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:5",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 537,
									"name": "NotInitializing",
									"nameLocation": "3389:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:5"
									},
									"src": "3383:24:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 542,
									"name": "Initialized",
									"nameLocation": "3514:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3526:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 539,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:5"
									},
									"src": "3508:34:5"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4092:1081:5",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4158:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 546,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 545,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "4158:20:5"
															},
															"referencedDeclaration": 528,
															"src": "4158:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 548,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4191:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:5"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:5",
													"subExpression": {
														"expression": {
															"id": 553,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4302:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "4302:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:5"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4327:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 557,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"expression": {
														"id": 559,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4348:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:5",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 524,
													"src": "4348:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:5"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4706:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 562,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4726:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 567,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4746:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:5"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4770:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4790:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 577,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$771",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$771",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 575,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:5",
														"subExpression": {
															"id": 585,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4856:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:5",
														"subExpression": {
															"id": 587,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4873:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "4851:91:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4887:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 590,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4908:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "4901:30:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 595,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4951:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "4951:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:5"
											},
											{
												"condition": {
													"id": 601,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "4983:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "4979:67:5",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "4999:47:5",
													"statements": [
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 602,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5013:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:5",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "5013:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:5"
														}
													]
												}
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:5"
											},
											{
												"condition": {
													"id": 611,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "5070:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "5066:101:5",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "5086:81:5",
													"statements": [
														{
															"expression": {
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 612,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5100:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:5",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "5100:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 617,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 618,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "5142:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "EmitStatement",
															"src": "5137:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 625,
									"name": "initializer",
									"nameLocation": "4078:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:5"
									},
									"src": "4069:1104:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "6291:392:5",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "6357:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 631,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 630,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "6357:20:5"
															},
															"referencedDeclaration": 528,
															"src": "6357:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "6390:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 636,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6431:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6431:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 638,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6450:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:5",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6450:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 640,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6468:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "IfStatement",
												"src": "6427:105:5",
												"trueBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "6477:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 643,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "6498:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 645,
															"nodeType": "RevertStatement",
															"src": "6491:30:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 648,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6541:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "6541:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 651,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "6558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:5"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 654,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6575:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6575:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:5"
											},
											{
												"id": 660,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:5"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 661,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6618:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6618:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 668,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6668:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 667,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "6656:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "EmitStatement",
												"src": "6651:25:5"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 672,
									"name": "reinitializer",
									"nameLocation": "6261:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6275:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 627,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:5"
									},
									"src": "6252:431:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "6921:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6931:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:5"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:5"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 680,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:5"
									},
									"src": "6893:76:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "7136:89:5",
										"statements": [
											{
												"condition": {
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 684,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7151:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "7146:73:5",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "7170:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 687,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "7191:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 689,
															"nodeType": "RevertStatement",
															"src": "7184:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:5",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:5"
									},
									"scope": 771,
									"src": "7084:141:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "7760:373:5",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "7826:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 698,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 697,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "7826:20:5"
															},
															"referencedDeclaration": 528,
															"src": "7826:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7859:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:5"
											},
											{
												"condition": {
													"expression": {
														"id": 703,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "7900:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:5",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 527,
													"src": "7900:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "7896:76:5",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "7917:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 705,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "7938:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "7931:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 710,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7985:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "7985:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 712,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "7981:146:5",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "8021:106:5",
													"statements": [
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 718,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "8035:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:5",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 524,
																	"src": "8035:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 722,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 721,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 730,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 729,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 728,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "8087:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "EmitStatement",
															"src": "8082:34:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:5"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:5"
									},
									"scope": 771,
									"src": "7711:422:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "8308:63:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 745,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "8325:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:5",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 524,
													"src": "8325:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 744,
												"id": 748,
												"nodeType": "Return",
												"src": "8318:46:5"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:5"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8300:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 742,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:5"
									},
									"scope": 771,
									"src": "8243:128:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "8543:64:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 756,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "8560:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:5",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 527,
													"src": "8560:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 755,
												"id": 759,
												"nodeType": "Return",
												"src": "8553:47:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:5"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8537:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:5"
									},
									"scope": 771,
									"src": "8487:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "8827:80:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:5",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 531,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:5",
														"valueSize": 1
													}
												],
												"id": 768,
												"nodeType": "InlineAssembly",
												"src": "8837:64:5"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:5",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "8795:30:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "8795:20:5"
													},
													"referencedDeclaration": 528,
													"src": "8795:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:5"
									},
									"scope": 771,
									"src": "8737:170:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 772,
							"src": "2349:6560:5",
							"usedErrors": [
								534,
								537
							]
						}
					],
					"src": "113:8797:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							817
						],
						"Initializable": [
							771
						]
					},
					"id": 818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 775,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 818,
							"sourceUnit": 772,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 774,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 771,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 777,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "728:13:6"
									},
									"id": 778,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 817,
							"linearizedBaseContracts": [
								817,
								771
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 780,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 817,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 786,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 817,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 795,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 794,
												"id": 797,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 817,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 804,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 803,
												"id": 806,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 817,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 812,
												"id": 814,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 817,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 818,
							"src": "688:505:6",
							"usedErrors": [
								534,
								537
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"contracts t-rex/registry/implementation/IdentityRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/implementation/IdentityRegistry.sol",
					"exportedSymbols": {
						"AgentRoleUpgradeable": [
							1997
						],
						"ContextUpgradeable": [
							817
						],
						"IClaimIssuer": [
							49
						],
						"IClaimTopicsRegistry": [
							1479
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"IIdentityRegistry": [
							1654
						],
						"IIdentityRegistryStorage": [
							1770
						],
						"IRStorage": [
							1894
						],
						"ITrustedIssuersRegistry": [
							1871
						],
						"IdentityRegistry": [
							1447
						],
						"OwnableUpgradeable": [
							518
						],
						"Roles": [
							2086
						]
					},
					"id": 1448,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 819,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:7"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 50,
							"src": "3842:67:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 821,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 329,
							"src": "3910:64:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
							"file": "../interface/IClaimTopicsRegistry.sol",
							"id": 822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1480,
							"src": "3976:47:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1872,
							"src": "4024:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistry.sol",
							"file": "../interface/IIdentityRegistry.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1655,
							"src": "4075:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/roles/AgentRoleUpgradeable.sol",
							"file": "../../roles/AgentRoleUpgradeable.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1998,
							"src": "4120:46:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1771,
							"src": "4167:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/storage/IRStorage.sol",
							"file": "../storage/IRStorage.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1448,
							"sourceUnit": 1895,
							"src": "4219:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IIdentityRegistry",
										"nameLocations": [
											"4285:17:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1654,
										"src": "4285:17:7"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "4285:17:7"
								},
								{
									"baseName": {
										"id": 830,
										"name": "AgentRoleUpgradeable",
										"nameLocations": [
											"4304:20:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1997,
										"src": "4304:20:7"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "4304:20:7"
								},
								{
									"baseName": {
										"id": 832,
										"name": "IRStorage",
										"nameLocations": [
											"4326:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1894,
										"src": "4326:9:7"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "4326:9:7"
								}
							],
							"canonicalName": "IdentityRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1447,
							"linearizedBaseContracts": [
								1447,
								1894,
								1997,
								518,
								817,
								771,
								1654
							],
							"name": "IdentityRegistry",
							"nameLocation": "4265:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "5018:660:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 846,
																		"name": "_trustedIssuersRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "5049:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5084:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5076:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5076:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5076:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5049:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 852,
																		"name": "_claimTopicsRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "5102:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5134:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5126:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 853,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5126:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5126:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5102:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5049:87:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "_identityStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "5152:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5180:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5172:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 860,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5172:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5172:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5152:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5049:133:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5193:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5028:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5028:199:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "5028:199:7"
											},
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 869,
														"name": "_tokenTopicsRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "5237:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 871,
																"name": "_claimTopicsRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "5281:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 870,
															"name": "IClaimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "5260:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IClaimTopicsRegistry_$1479_$",
																"typeString": "type(contract IClaimTopicsRegistry)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5260:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"src": "5237:65:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "5237:65:7"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 875,
														"name": "_tokenIssuersRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "5312:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 877,
																"name": "_trustedIssuersRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "5360:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 876,
															"name": "ITrustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "5336:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITrustedIssuersRegistry_$1871_$",
																"typeString": "type(contract ITrustedIssuersRegistry)"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5336:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"src": "5312:72:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "5312:72:7"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "_tokenIdentityStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "5394:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 883,
																"name": "_identityStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "5443:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 882,
															"name": "IIdentityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5418:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IIdentityRegistryStorage_$1770_$",
																"typeString": "type(contract IIdentityRegistryStorage)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5418:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"src": "5394:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "5394:66:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 888,
															"name": "_claimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "5498:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 887,
														"name": "ClaimTopicsRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "5475:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5475:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "EmitStatement",
												"src": "5470:49:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 892,
															"name": "_trustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5560:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "TrustedIssuersRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "5534:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5534:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "EmitStatement",
												"src": "5529:55:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "_identityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "5618:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 895,
														"name": "IdentityStorageSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "5599:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5599:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "EmitStatement",
												"src": "5594:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 900,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5660:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5664:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5660:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 899,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5645:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5645:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "5645:26:7"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "4343:516:7",
										"text": "  @dev the constructor initiates the Identity Registry smart contract\n  @param _trustedIssuersRegistry the trusted issuers registry linked to the Identity Registry\n  @param _claimTopicsRegistry the claim topics registry linked to the Identity Registry\n  @param _identityStorage the identity registry storage linked to the Identity Registry\n  emits a `ClaimTopicsRegistrySet` event\n  emits a `TrustedIssuersRegistrySet` event\n  emits an `IdentityStorageSet` event"
									},
									"functionSelector": "184b9559",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 843,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 842,
												"name": "initializer",
												"nameLocations": [
													"5006:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 625,
												"src": "5006:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5006:11:7"
										}
									],
									"name": "init",
									"nameLocation": "4873:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "4895:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "4887:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "4936:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "4928:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_identityStorage",
												"nameLocation": "4974:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "4966:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:119:7"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5018:0:7"
									},
									"scope": 1447,
									"src": "4864:814:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5938:159:7",
										"statements": [
											{
												"body": {
													"id": 943,
													"nodeType": "Block",
													"src": "6000:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 932,
																			"name": "_userAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "6031:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 934,
																		"indexExpression": {
																			"id": 933,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "6046:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6031:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 935,
																			"name": "_identities",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "6050:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptr",
																				"typeString": "contract IIdentity[] calldata"
																			}
																		},
																		"id": 937,
																		"indexExpression": {
																			"id": 936,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "6062:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6050:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$328",
																			"typeString": "contract IIdentity"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 938,
																			"name": "_countries",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "6066:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
																				"typeString": "uint16[] calldata"
																			}
																		},
																		"id": 940,
																		"indexExpression": {
																			"id": 939,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "6077:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6066:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$328",
																			"typeString": "contract IIdentity"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"id": 931,
																	"name": "registerIdentity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "6014:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IIdentity_$328_$_t_uint16_$returns$__$",
																		"typeString": "function (address,contract IIdentity,uint16)"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "6014:66:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "5968:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "_userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5972:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5972:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5968:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5961:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 944,
															"src": "5953:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5953:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5965:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5953:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5995:3:7",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "5995:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "5995:3:7"
												},
												"nodeType": "ForStatement",
												"src": "5948:143:7"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "5684:71:7",
										"text": "  @dev See {IIdentityRegistry-batchRegisterIdentity}."
									},
									"functionSelector": "653dc9f1",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "5769:21:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 918,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5929:8:7"
									},
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "5819:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5800:33:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 907,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5800:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 908,
													"nodeType": "ArrayTypeName",
													"src": "5800:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "5864:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5843:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 911,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 910,
															"name": "IIdentity",
															"nameLocations": [
																"5843:9:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 328,
															"src": "5843:9:7"
														},
														"referencedDeclaration": 328,
														"src": "5843:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$328",
															"typeString": "contract IIdentity"
														}
													},
													"id": 912,
													"nodeType": "ArrayTypeName",
													"src": "5843:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$328_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "5903:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5885:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 914,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "5885:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 915,
													"nodeType": "ArrayTypeName",
													"src": "5885:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5790:129:7"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5938:0:7"
									},
									"scope": 1447,
									"src": "5760:337:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1585
									],
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "6267:194:7",
										"statements": [
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "6287:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "6277:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$328",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 959,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 958,
																"name": "IIdentity",
																"nameLocations": [
																	"6277:9:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 328,
																"src": "6277:9:7"
															},
															"referencedDeclaration": 328,
															"src": "6277:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"arguments": [
														{
															"id": 962,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6310:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 961,
														"name": "identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "6301:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
															"typeString": "function (address) view returns (contract IIdentity)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6277:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6376:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "6390:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														],
														"expression": {
															"id": 965,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "6333:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6355:20:7",
														"memberName": "modifyStoredIdentity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1733,
														"src": "6333:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IIdentity_$328_$returns$__$",
															"typeString": "function (address,contract IIdentity) external"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "6333:67:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 973,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "6431:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 974,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "6444:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														],
														"id": 972,
														"name": "IdentityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "6415:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IIdentity_$328_$_t_contract$_IIdentity_$328_$returns$__$",
															"typeString": "function (contract IIdentity,contract IIdentity)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6415:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "EmitStatement",
												"src": "6410:44:7"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "6103:64:7",
										"text": "  @dev See {IIdentityRegistry-updateIdentity}."
									},
									"functionSelector": "8e098ca1",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 956,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 955,
												"name": "onlyAgent",
												"nameLocations": [
													"6257:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "6257:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6257:9:7"
										}
									],
									"name": "updateIdentity",
									"nameLocation": "6181:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 954,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6248:8:7"
									},
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "6196:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6196:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "6228:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "6218:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 951,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 950,
														"name": "IIdentity",
														"nameLocations": [
															"6218:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "6218:9:7"
													},
													"referencedDeclaration": 328,
													"src": "6218:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6195:43:7"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6267:0:7"
									},
									"scope": 1447,
									"src": "6172:289:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1576
									],
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "6625:143:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "6685:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "6699:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"id": 989,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "6635:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6657:27:7",
														"memberName": "modifyStoredInvestorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "6635:49:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16) external"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "6635:73:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 997,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "6738:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "6752:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 996,
														"name": "CountryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "6723:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6723:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "EmitStatement",
												"src": "6718:43:7"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "6467:63:7",
										"text": "  @dev See {IIdentityRegistry-updateCountry}."
									},
									"functionSelector": "3b239a7f",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 987,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "onlyAgent",
												"nameLocations": [
													"6615:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "6615:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6615:9:7"
										}
									],
									"name": "updateCountry",
									"nameLocation": "6544:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 985,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6606:8:7"
									},
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6566:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6558:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "6587:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6580:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 982,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6557:39:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6625:0:7"
									},
									"scope": 1447,
									"src": "6535:233:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1550
									],
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "6917:191:7",
										"statements": [
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "6937:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "6927:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$328",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 1012,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1011,
																"name": "IIdentity",
																"nameLocations": [
																	"6927:9:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 328,
																"src": "6927:9:7"
															},
															"referencedDeclaration": 328,
															"src": "6927:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"arguments": [
														{
															"id": 1015,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "6960:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1014,
														"name": "identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "6951:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
															"typeString": "function (address) view returns (contract IIdentity)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6951:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6927:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7031:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1018,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "6983:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7005:25:7",
														"memberName": "removeIdentityFromStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1716,
														"src": "6983:47:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6983:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "6983:61:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1025,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7075:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "7089:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														],
														"id": 1024,
														"name": "IdentityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "7059:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$328_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7059:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "EmitStatement",
												"src": "7054:47:7"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "6774:64:7",
										"text": "  @dev See {IIdentityRegistry-deleteIdentity}."
									},
									"functionSelector": "a8d29d1d",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "onlyAgent",
												"nameLocations": [
													"6907:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "6907:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6907:9:7"
										}
									],
									"name": "deleteIdentity",
									"nameLocation": "6852:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1007,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6898:8:7"
									},
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6875:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "6867:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6866:22:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6917:0:7"
									},
									"scope": 1447,
									"src": "6843:265:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "7293:150:7",
										"statements": [
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "_tokenIdentityStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "7303:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1041,
																"name": "_identityRegistryStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "7352:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1040,
															"name": "IIdentityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "7327:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IIdentityRegistryStorage_$1770_$",
																"typeString": "type(contract IIdentityRegistryStorage)"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:50:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"src": "7303:74:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "7303:74:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1046,
															"name": "_identityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "7411:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1045,
														"name": "IdentityStorageSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "7392:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7392:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "EmitStatement",
												"src": "7387:49:7"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "7114:76:7",
										"text": "  @dev See {IIdentityRegistry-setIdentityRegistryStorage}."
									},
									"functionSelector": "26d941ae",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1036,
												"name": "onlyOwner",
												"nameLocations": [
													"7283:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "7283:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7283:9:7"
										}
									],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "7204:26:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1035,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7274:8:7"
									},
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "7239:24:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7231:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:34:7"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7293:0:7"
									},
									"scope": 1447,
									"src": "7195:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1562
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "7616:141:7",
										"statements": [
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "_tokenTopicsRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "7626:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "_claimTopicsRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "7670:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1060,
															"name": "IClaimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "7649:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IClaimTopicsRegistry_$1479_$",
																"typeString": "type(contract IClaimTopicsRegistry)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7649:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"src": "7626:65:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "7626:65:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1066,
															"name": "_claimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "7729:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "ClaimTopicsRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "7706:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7706:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "EmitStatement",
												"src": "7701:49:7"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "7449:72:7",
										"text": "  @dev See {IIdentityRegistry-setClaimTopicsRegistry}."
									},
									"functionSelector": "670af6a9",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "onlyOwner",
												"nameLocations": [
													"7606:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "7606:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7606:9:7"
										}
									],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "7535:22:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1055,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7597:8:7"
									},
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "7566:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "7558:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7557:30:7"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7616:0:7"
									},
									"scope": 1447,
									"src": "7526:231:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1568
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "7939:154:7",
										"statements": [
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "_tokenIssuersRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "7949:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1081,
																"name": "_trustedIssuersRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "7997:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1080,
															"name": "ITrustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "7973:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITrustedIssuersRegistry_$1871_$",
																"typeString": "type(contract ITrustedIssuersRegistry)"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7973:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"src": "7949:72:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "7949:72:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1086,
															"name": "_trustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "8062:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1085,
														"name": "TrustedIssuersRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "8036:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8036:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "EmitStatement",
												"src": "8031:55:7"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "7763:75:7",
										"text": "  @dev See {IIdentityRegistry-setTrustedIssuersRegistry}."
									},
									"functionSelector": "e744d789",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "onlyOwner",
												"nameLocations": [
													"7929:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "7929:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7929:9:7"
										}
									],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "7852:25:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1075,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7920:8:7"
									},
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "7886:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "7878:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7878:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7877:33:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7939:0:7"
									},
									"scope": 1447,
									"src": "7843:250:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1615
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "8293:2040:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1102,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "8324:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1101,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "8315:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
																		"typeString": "function (address) view returns (contract IIdentity)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8315:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IIdentity_$328",
																	"typeString": "contract IIdentity"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IIdentity_$328",
																	"typeString": "contract IIdentity"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8307:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8307:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8350:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8342:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1105,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8342:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8342:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8307:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "8303:66:7",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "8354:15:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8362:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1098,
															"id": 1111,
															"nodeType": "Return",
															"src": "8355:12:7"
														}
													]
												}
											},
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "requiredClaimTopics",
														"nameLocation": "8395:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8378:36:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"nodeType": "ArrayTypeName",
															"src": "8378:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1119,
															"name": "_tokenTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "8417:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
																"typeString": "contract IClaimTopicsRegistry"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8438:14:7",
														"memberName": "getClaimTopics",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "8417:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (uint256[] memory)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8417:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:76:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1123,
															"name": "requiredClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "8468:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8488:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8468:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8498:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8468:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "8464:73:7",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "8501:36:7",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1098,
															"id": 1128,
															"nodeType": "Return",
															"src": "8515:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "foundClaimTopic",
														"nameLocation": "8555:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8547:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8547:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"nodeType": "VariableDeclarationStatement",
												"src": "8547:23:7"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "scheme",
														"nameLocation": "8588:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8580:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8580:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"nodeType": "VariableDeclarationStatement",
												"src": "8580:14:7"
											},
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "issuer",
														"nameLocation": "8612:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8604:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8604:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"nodeType": "VariableDeclarationStatement",
												"src": "8604:14:7"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "sig",
														"nameLocation": "8641:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8628:16:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1140,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8628:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"nodeType": "VariableDeclarationStatement",
												"src": "8628:16:7"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "8667:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8654:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1143,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"nodeType": "VariableDeclarationStatement",
												"src": "8654:17:7"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "claimTopic",
														"nameLocation": "8689:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8681:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8681:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"nodeType": "VariableDeclarationStatement",
												"src": "8681:18:7"
											},
											{
												"body": {
													"id": 1322,
													"nodeType": "Block",
													"src": "8785:1521:7",
													"statements": [
														{
															"assignments": [
																1164
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1164,
																	"mutability": "mutable",
																	"name": "trustedIssuers",
																	"nameLocation": "8821:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1322,
																	"src": "8799:36:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																		"typeString": "contract IClaimIssuer[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1162,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1161,
																				"name": "IClaimIssuer",
																				"nameLocations": [
																					"8799:12:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 49,
																				"src": "8799:12:7"
																			},
																			"referencedDeclaration": 49,
																			"src": "8799:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 1163,
																		"nodeType": "ArrayTypeName",
																		"src": "8799:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
																			"typeString": "contract IClaimIssuer[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1171,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1167,
																			"name": "requiredClaimTopics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "8903:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1169,
																		"indexExpression": {
																			"id": 1168,
																			"name": "claimTopic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "8923:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8903:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1165,
																		"name": "_tokenIssuersRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "8850:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
																			"typeString": "contract ITrustedIssuersRegistry"
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8872:30:7",
																	"memberName": "getTrustedIssuersForClaimTopic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1842,
																	"src": "8850:52:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) view external returns (contract IClaimIssuer[] memory)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8850:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																	"typeString": "contract IClaimIssuer[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8799:136:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1172,
																		"name": "trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "8954:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																			"typeString": "contract IClaimIssuer[] memory"
																		}
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8969:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8954:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8979:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8954:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1179,
															"nodeType": "IfStatement",
															"src": "8950:47:7",
															"trueBody": {
																"id": 1178,
																"nodeType": "Block",
																"src": "8982:15:7",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8990:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1098,
																		"id": 1177,
																		"nodeType": "Return",
																		"src": "8983:12:7"
																	}
																]
															}
														},
														{
															"assignments": [
																1184
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1184,
																	"mutability": "mutable",
																	"name": "claimIds",
																	"nameLocation": "9028:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1322,
																	"src": "9011:25:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1182,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "9011:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1183,
																		"nodeType": "ArrayTypeName",
																		"src": "9011:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																			"typeString": "bytes32[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1191,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1188,
																			"name": "trustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "9053:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																				"typeString": "contract IClaimIssuer[] memory"
																			}
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9068:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9053:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "9039:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes32[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1185,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "9043:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1186,
																		"nodeType": "ArrayTypeName",
																		"src": "9043:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																			"typeString": "bytes32[]"
																		}
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9039:36:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9011:64:7"
														},
														{
															"body": {
																"id": 1219,
																"nodeType": "Block",
																"src": "9141:120:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1203,
																					"name": "claimIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1184,
																					"src": "9159:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1205,
																				"indexExpression": {
																					"id": 1204,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "9168:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9159:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 1209,
																									"name": "trustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1164,
																									"src": "9194:14:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																										"typeString": "contract IClaimIssuer[] memory"
																									}
																								},
																								"id": 1211,
																								"indexExpression": {
																									"id": 1210,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1193,
																									"src": "9209:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9194:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																									"typeString": "contract IClaimIssuer"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1212,
																									"name": "requiredClaimTopics",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1118,
																									"src": "9213:19:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 1214,
																								"indexExpression": {
																									"id": 1213,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1147,
																									"src": "9233:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9213:31:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																									"typeString": "contract IClaimIssuer"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1207,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "9183:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "9187:6:7",
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"src": "9183:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 1215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9183:62:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1206,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "9173:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9173:73:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "9159:87:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1218,
																		"nodeType": "ExpressionStatement",
																		"src": "9159:87:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1196,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "9109:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1197,
																		"name": "trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "9113:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
																			"typeString": "contract IClaimIssuer[] memory"
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9128:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9113:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9109:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1220,
															"initializationExpression": {
																"assignments": [
																	1193
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1193,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "9102:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1220,
																		"src": "9094:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1192,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9094:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1195,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9106:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9094:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "9136:3:7",
																	"subExpression": {
																		"id": 1200,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "9136:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1202,
																"nodeType": "ExpressionStatement",
																"src": "9136:3:7"
															},
															"nodeType": "ForStatement",
															"src": "9089:172:7"
														},
														{
															"body": {
																"id": 1320,
																"nodeType": "Block",
																"src": "9321:975:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1232,
																						"name": "foundClaimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1132,
																						"src": "9340:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1233,
																						"name": "scheme",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1135,
																						"src": "9357:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1234,
																						"name": "issuer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1138,
																						"src": "9365:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1235,
																						"name": "sig",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "9373:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					{
																						"id": 1236,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1144,
																						"src": "9378:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					null
																				],
																				"id": 1237,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "9339:46:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$__$",
																					"typeString": "tuple(uint256,uint256,address,bytes memory,bytes memory,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1242,
																							"name": "claimIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1184,
																							"src": "9420:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																								"typeString": "bytes32[] memory"
																							}
																						},
																						"id": 1244,
																						"indexExpression": {
																							"id": 1243,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1222,
																							"src": "9429:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9420:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1239,
																								"name": "_userAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1093,
																								"src": "9397:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1238,
																							"name": "identity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1446,
																							"src": "9388:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
																								"typeString": "function (address) view returns (contract IIdentity)"
																							}
																						},
																						"id": 1240,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9388:22:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IIdentity_$328",
																							"typeString": "contract IIdentity"
																						}
																					},
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9411:8:7",
																					"memberName": "getClaim",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 294,
																					"src": "9388:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$",
																						"typeString": "function (bytes32) view external returns (uint256,uint256,address,bytes memory,bytes memory,string memory)"
																					}
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9388:44:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$",
																					"typeString": "tuple(uint256,uint256,address,bytes memory,bytes memory,string memory)"
																				}
																			},
																			"src": "9339:93:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1247,
																		"nodeType": "ExpressionStatement",
																		"src": "9339:93:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1248,
																				"name": "foundClaimTopic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "9455:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1249,
																					"name": "requiredClaimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "9474:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1251,
																				"indexExpression": {
																					"id": 1250,
																					"name": "claimTopic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "9494:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9474:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9455:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1308,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1222,
																					"src": "10201:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1312,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1309,
																									"name": "claimIds",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1184,
																									"src": "10207:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																										"typeString": "bytes32[] memory"
																									}
																								},
																								"id": 1310,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10216:6:7",
																								"memberName": "length",
																								"nodeType": "MemberAccess",
																								"src": "10207:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1311,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "10225:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "10207:19:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1313,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "10206:21:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10201:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1318,
																			"nodeType": "IfStatement",
																			"src": "10197:85:7",
																			"trueBody": {
																				"id": 1317,
																				"nodeType": "Block",
																				"src": "10229:53:7",
																				"statements": [
																					{
																						"expression": {
																							"hexValue": "66616c7365",
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10258:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "false"
																						},
																						"functionReturnParameters": 1098,
																						"id": 1316,
																						"nodeType": "Return",
																						"src": "10251:12:7"
																					}
																				]
																			}
																		},
																		"id": 1319,
																		"nodeType": "IfStatement",
																		"src": "9451:831:7",
																		"trueBody": {
																			"id": 1307,
																			"nodeType": "Block",
																			"src": "9507:684:7",
																			"statements": [
																				{
																					"clauses": [
																						{
																							"block": {
																								"id": 1291,
																								"nodeType": "Block",
																								"src": "9683:334:7",
																								"statements": [
																									{
																										"condition": {
																											"id": 1269,
																											"name": "_validity",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1267,
																											"src": "9743:9:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 1276,
																										"nodeType": "IfStatement",
																										"src": "9710:145:7",
																										"trueBody": {
																											"id": 1275,
																											"nodeType": "Block",
																											"src": "9779:76:7",
																											"statements": [
																												{
																													"expression": {
																														"id": 1273,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftHandSide": {
																															"id": 1270,
																															"name": "j",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1222,
																															"src": "9809:1:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "Assignment",
																														"operator": "=",
																														"rightHandSide": {
																															"expression": {
																																"id": 1271,
																																"name": "claimIds",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1184,
																																"src": "9813:8:7",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																	"typeString": "bytes32[] memory"
																																}
																															},
																															"id": 1272,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "9822:6:7",
																															"memberName": "length",
																															"nodeType": "MemberAccess",
																															"src": "9813:15:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "9809:19:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1274,
																													"nodeType": "ExpressionStatement",
																													"src": "9809:19:7"
																												}
																											]
																										}
																									},
																									{
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											},
																											"id": 1286,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 1278,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "UnaryOperation",
																												"operator": "!",
																												"prefix": true,
																												"src": "9884:10:7",
																												"subExpression": {
																													"id": 1277,
																													"name": "_validity",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1267,
																													"src": "9885:9:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bool",
																														"typeString": "bool"
																													}
																												},
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "&&",
																											"rightExpression": {
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1285,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1279,
																													"name": "j",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1222,
																													"src": "9898:1:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "==",
																												"rightExpression": {
																													"components": [
																														{
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1283,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"expression": {
																																	"id": 1280,
																																	"name": "claimIds",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1184,
																																	"src": "9904:8:7",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																		"typeString": "bytes32[] memory"
																																	}
																																},
																																"id": 1281,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberLocation": "9913:6:7",
																																"memberName": "length",
																																"nodeType": "MemberAccess",
																																"src": "9904:15:7",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"hexValue": "31",
																																"id": 1282,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "9922:1:7",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_1_by_1",
																																	"typeString": "int_const 1"
																																},
																																"value": "1"
																															},
																															"src": "9904:19:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1284,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "9903:21:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "9898:26:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"src": "9884:40:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 1290,
																										"nodeType": "IfStatement",
																										"src": "9880:115:7",
																										"trueBody": {
																											"id": 1289,
																											"nodeType": "Block",
																											"src": "9926:69:7",
																											"statements": [
																												{
																													"expression": {
																														"hexValue": "66616c7365",
																														"id": 1287,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "bool",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "9963:5:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														},
																														"value": "false"
																													},
																													"functionReturnParameters": 1098,
																													"id": 1288,
																													"nodeType": "Return",
																													"src": "9956:12:7"
																												}
																											]
																										}
																									}
																								]
																							},
																							"errorName": "",
																							"id": 1292,
																							"nodeType": "TryCatchClause",
																							"parameters": {
																								"id": 1268,
																								"nodeType": "ParameterList",
																								"parameters": [
																									{
																										"constant": false,
																										"id": 1267,
																										"mutability": "mutable",
																										"name": "_validity",
																										"nameLocation": "9672:9:7",
																										"nodeType": "VariableDeclaration",
																										"scope": 1292,
																										"src": "9667:14:7",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"typeName": {
																											"id": 1266,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "9667:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"src": "9666:16:7"
																							},
																							"src": "9659:358:7"
																						},
																						{
																							"block": {
																								"id": 1304,
																								"nodeType": "Block",
																								"src": "10024:149:7",
																								"statements": [
																									{
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 1299,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 1293,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1222,
																												"src": "10054:1:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"components": [
																													{
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 1297,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"expression": {
																																"id": 1294,
																																"name": "claimIds",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1184,
																																"src": "10060:8:7",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																	"typeString": "bytes32[] memory"
																																}
																															},
																															"id": 1295,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "10069:6:7",
																															"memberName": "length",
																															"nodeType": "MemberAccess",
																															"src": "10060:15:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"hexValue": "31",
																															"id": 1296,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "10078:1:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "10060:19:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 1298,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "10059:21:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10054:26:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 1303,
																										"nodeType": "IfStatement",
																										"src": "10050:101:7",
																										"trueBody": {
																											"id": 1302,
																											"nodeType": "Block",
																											"src": "10082:69:7",
																											"statements": [
																												{
																													"expression": {
																														"hexValue": "66616c7365",
																														"id": 1300,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "bool",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "10119:5:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														},
																														"value": "false"
																													},
																													"functionReturnParameters": 1098,
																													"id": 1301,
																													"nodeType": "Return",
																													"src": "10112:12:7"
																												}
																											]
																										}
																									}
																								]
																							},
																							"errorName": "",
																							"id": 1305,
																							"nodeType": "TryCatchClause",
																							"src": "10018:155:7"
																						}
																					],
																					"externalCall": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1258,
																										"name": "_userAddress",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1093,
																										"src": "9576:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1257,
																									"name": "identity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1446,
																									"src": "9567:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
																										"typeString": "function (address) view returns (contract IIdentity)"
																									}
																								},
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9567:22:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IIdentity_$328",
																									"typeString": "contract IIdentity"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 1260,
																									"name": "requiredClaimTopics",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1118,
																									"src": "9591:19:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 1262,
																								"indexExpression": {
																									"id": 1261,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1147,
																									"src": "9611:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9591:31:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1263,
																								"name": "sig",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1141,
																								"src": "9624:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"id": 1264,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1144,
																								"src": "9653:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_IIdentity_$328",
																									"typeString": "contract IIdentity"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1254,
																										"name": "issuer",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1138,
																										"src": "9546:6:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1253,
																									"name": "IClaimIssuer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 49,
																									"src": "9533:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IClaimIssuer_$49_$",
																										"typeString": "type(contract IClaimIssuer)"
																									}
																								},
																								"id": 1255,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9533:20:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																									"typeString": "contract IClaimIssuer"
																								}
																							},
																							"id": 1256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9554:12:7",
																							"memberName": "isClaimValid",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 48,
																							"src": "9533:33:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_contract$_IIdentity_$328_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (contract IIdentity,uint256,bytes memory,bytes memory) view external returns (bool)"
																							}
																						},
																						"id": 1265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9533:125:7",
																						"tryCall": true,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1306,
																					"nodeType": "TryStatement",
																					"src": "9529:644:7"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1225,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "9295:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1226,
																		"name": "claimIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "9299:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9308:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9299:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9295:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1321,
															"initializationExpression": {
																"assignments": [
																	1222
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1222,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "9288:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1321,
																		"src": "9280:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1221,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9280:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1224,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9292:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9280:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "9316:3:7",
																	"subExpression": {
																		"id": 1229,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "9316:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1231,
																"nodeType": "ExpressionStatement",
																"src": "9316:3:7"
															},
															"nodeType": "ForStatement",
															"src": "9275:1021:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "8730:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1154,
															"name": "requiredClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "8743:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8763:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8743:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8730:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1323,
												"initializationExpression": {
													"expression": {
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1149,
															"name": "claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8714:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8727:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8714:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1152,
													"nodeType": "ExpressionStatement",
													"src": "8714:14:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8771:12:7",
														"subExpression": {
															"id": 1157,
															"name": "claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "8771:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1159,
													"nodeType": "ExpressionStatement",
													"src": "8771:12:7"
												},
												"nodeType": "ForStatement",
												"src": "8709:1597:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10322:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1098,
												"id": 1325,
												"nodeType": "Return",
												"src": "10315:11:7"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "8099:60:7",
										"text": "  @dev See {IIdentityRegistry-isVerified}."
									},
									"functionSelector": "b9209e33",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "8222:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1095,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8269:8:7"
									},
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8241:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "8233:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8233:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8232:22:7"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "8287:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8287:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8286:6:7"
									},
									"scope": 1447,
									"src": "8213:2120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1632
									],
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "10496:81:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1338,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "10557:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1336,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "10513:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10535:21:7",
														"memberName": "storedInvestorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1769,
														"src": "10513:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint16_$",
															"typeString": "function (address) view external returns (uint16)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10513:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1340,
												"nodeType": "Return",
												"src": "10506:64:7"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "10339:65:7",
										"text": "  @dev See {IIdentityRegistry-investorCountry}."
									},
									"functionSelector": "7e42683b",
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "10418:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1332,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10470:8:7"
									},
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "10442:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "10434:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10434:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10433:22:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "10488:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1333,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10488:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:8:7"
									},
									"scope": 1447,
									"src": "10409:168:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1646
									],
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "10737:45:7",
										"statements": [
											{
												"expression": {
													"id": 1350,
													"name": "_tokenIssuersRegistry",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "10754:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1351,
												"nodeType": "Return",
												"src": "10747:28:7"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "10583:65:7",
										"text": "  @dev See {IIdentityRegistry-issuersRegistry}."
									},
									"functionSelector": "b4f3fcb7",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "10662:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10694:8:7"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10677:2:7"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "10712:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 1347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1346,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"10712:23:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1871,
														"src": "10712:23:7"
													},
													"referencedDeclaration": 1871,
													"src": "10712:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10711:25:7"
									},
									"scope": 1447,
									"src": "10653:129:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1653
									],
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "10937:44:7",
										"statements": [
											{
												"expression": {
													"id": 1361,
													"name": "_tokenTopicsRegistry",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1880,
													"src": "10954:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1362,
												"nodeType": "Return",
												"src": "10947:27:7"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "10788:64:7",
										"text": "  @dev See {IIdentityRegistry-topicsRegistry}."
									},
									"functionSelector": "3b3e12f4",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "10866:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10897:8:7"
									},
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10880:2:7"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "10915:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"10915:20:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1479,
														"src": "10915:20:7"
													},
													"referencedDeclaration": 1479,
													"src": "10915:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10914:22:7"
									},
									"scope": 1447,
									"src": "10857:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1639
									],
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "11142:45:7",
										"statements": [
											{
												"expression": {
													"id": 1372,
													"name": "_tokenIdentityStorage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1888,
													"src": "11159:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1373,
												"nodeType": "Return",
												"src": "11152:28:7"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "10987:65:7",
										"text": "  @dev See {IIdentityRegistry-identityStorage}."
									},
									"functionSelector": "f11abfd8",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "11066:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11098:8:7"
									},
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11081:2:7"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "11116:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 1369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1368,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"11116:24:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1770,
														"src": "11116:24:7"
													},
													"referencedDeclaration": 1770,
													"src": "11116:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11115:26:7"
									},
									"scope": 1447,
									"src": "11057:130:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1607
									],
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "11334:125:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1387,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "11365:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1386,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "11356:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
																		"typeString": "function (address) view returns (contract IIdentity)"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11356:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IIdentity_$328",
																	"typeString": "contract IIdentity"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IIdentity_$328",
																	"typeString": "contract IIdentity"
																}
															],
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11348:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11348:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11348:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11391:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11383:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1390,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11383:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11383:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11348:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1398,
												"nodeType": "IfStatement",
												"src": "11344:88:7",
												"trueBody": {
													"id": 1397,
													"nodeType": "Block",
													"src": "11395:37:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11416:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1383,
															"id": 1396,
															"nodeType": "Return",
															"src": "11409:12:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11448:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1383,
												"id": 1400,
												"nodeType": "Return",
												"src": "11441:11:7"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "11193:58:7",
										"text": "  @dev See {IIdentityRegistry-contains}."
									},
									"functionSelector": "5dbe47e8",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11265:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11310:8:7"
									},
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "11274:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11273:22:7"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "11328:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11328:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11327:6:7"
									},
									"scope": 1447,
									"src": "11256:203:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1544
									],
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "11678:152:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "11731:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "11745:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 1421,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "11756:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"id": 1416,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "11688:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11710:20:7",
														"memberName": "addIdentityToStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1710,
														"src": "11688:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IIdentity_$328_$_t_uint16_$returns$__$",
															"typeString": "function (address,contract IIdentity,uint16) external"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11688:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "11688:77:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1425,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "11799:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "11813:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$328",
																"typeString": "contract IIdentity"
															}
														],
														"id": 1424,
														"name": "IdentityRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "11780:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$328_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11780:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "EmitStatement",
												"src": "11775:48:7"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "11465:66:7",
										"text": "  @dev See {IIdentityRegistry-registerIdentity}."
									},
									"functionSelector": "454a03e0",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1414,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1413,
												"name": "onlyAgent",
												"nameLocations": [
													"11668:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "11668:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "11668:9:7"
										}
									],
									"name": "registerIdentity",
									"nameLocation": "11545:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1412,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11659:8:7"
									},
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11579:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "11571:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "11611:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "11601:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1406,
														"name": "IIdentity",
														"nameLocations": [
															"11601:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "11601:9:7"
													},
													"referencedDeclaration": 328,
													"src": "11601:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "11637:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "11630:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1409,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11630:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11561:90:7"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11678:0:7"
									},
									"scope": 1447,
									"src": "11536:294:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1624
									],
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "11980:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "12034:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1440,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "11997:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12019:14:7",
														"memberName": "storedIdentity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "11997:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_IIdentity_$328_$",
															"typeString": "function (address) view external returns (contract IIdentity)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11997:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1444,
												"nodeType": "Return",
												"src": "11990:57:7"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "11836:58:7",
										"text": "  @dev See {IIdentityRegistry-identity}."
									},
									"functionSelector": "f0eb5e54",
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "11908:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11951:8:7"
									},
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11925:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11917:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11917:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11916:22:7"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11969:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "IIdentity",
														"nameLocations": [
															"11969:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "11969:9:7"
													},
													"referencedDeclaration": 328,
													"src": "11969:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11968:11:7"
									},
									"scope": 1447,
									"src": "11899:155:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1448,
							"src": "4256:7800:7",
							"usedErrors": [
								354,
								359,
								534,
								537
							]
						}
					],
					"src": "3817:8240:7"
				},
				"id": 7
			},
			"contracts t-rex/registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							1479
						]
					},
					"id": 1480,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1449,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1479,
							"linearizedBaseContracts": [
								1479
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "3852:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "3879:241:8",
										"text": "  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"
									},
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 1454,
									"name": "ClaimTopicAdded",
									"nameLocation": "4131:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "4163:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "4147:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:28:8"
									},
									"src": "4125:50:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "4181:252:8",
										"text": "  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"
									},
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 1459,
									"name": "ClaimTopicRemoved",
									"nameLocation": "4444:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "4478:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "4462:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4462:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:28:8"
									},
									"src": "4438:52:8"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "4496:280:8",
										"text": " @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n cannot add more than 15 topics for 1 token as adding more could create gas issues\n @param _claimTopic The claim topic index"
									},
									"functionSelector": "c7b22551",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "4790:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "4812:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4804:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4803:21:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4833:0:8"
									},
									"scope": 1479,
									"src": "4781:53:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "4840:200:8",
										"text": "  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"
									},
									"functionSelector": "08297846",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "5054:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "5079:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "5071:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:21:8"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:0:8"
									},
									"scope": 1479,
									"src": "5045:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "5107:122:8",
										"text": "  @dev Get the trusted claim topics for the security token\n  @return Array of trusted claim topics"
									},
									"functionSelector": "df09d604",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "5243:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:2:8"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "5283:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1474,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5283:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1475,
													"nodeType": "ArrayTypeName",
													"src": "5283:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:18:8"
									},
									"scope": 1479,
									"src": "5234:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1480,
							"src": "3842:1461:8",
							"usedErrors": []
						}
					],
					"src": "3817:1487:8"
				},
				"id": 8
			},
			"contracts t-rex/registry/interface/IIdentityRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IClaimTopicsRegistry": [
							1479
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"IIdentityRegistry": [
							1654
						],
						"IIdentityRegistryStorage": [
							1770
						],
						"ITrustedIssuersRegistry": [
							1871
						]
					},
					"id": 1655,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1481,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:9"
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "./ITrustedIssuersRegistry.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 1872,
							"src": "3842:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
							"file": "./IClaimTopicsRegistry.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 1480,
							"src": "3882:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
							"file": "./IIdentityRegistryStorage.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 1771,
							"src": "3919:40:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1485,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 50,
							"src": "3961:67:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1655,
							"sourceUnit": 329,
							"src": "4029:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1654,
							"linearizedBaseContracts": [
								1654
							],
							"name": "IIdentityRegistry",
							"nameLocation": "4105:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "4129:256:9",
										"text": "  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"
									},
									"eventSelector": "7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0",
									"id": 1491,
									"name": "ClaimTopicsRegistrySet",
									"nameLocation": "4396:22:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopicsRegistry",
												"nameLocation": "4435:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "4419:35:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:37:9"
									},
									"src": "4390:66:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "4462:260:9",
										"text": "  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `identityStorage` is the address of the Identity Registry Storage contract"
									},
									"eventSelector": "2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c",
									"id": 1496,
									"name": "IdentityStorageSet",
									"nameLocation": "4733:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityStorage",
												"nameLocation": "4768:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "4752:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:33:9"
									},
									"src": "4727:58:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "4791:265:9",
										"text": "  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"
									},
									"eventSelector": "1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0",
									"id": 1501,
									"name": "TrustedIssuersRegistrySet",
									"nameLocation": "5067:25:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuersRegistry",
												"nameLocation": "5109:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "5093:38:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5093:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5092:40:9"
									},
									"src": "5061:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "5139:307:9",
										"text": "  this event is emitted when an Identity is registered into the Identity Registry.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19",
									"id": 1509,
									"name": "IdentityRegistered",
									"nameLocation": "5457:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5492:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5476:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "5527:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5509:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1505,
														"name": "IIdentity",
														"nameLocations": [
															"5509:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "5509:9:9"
													},
													"referencedDeclaration": 328,
													"src": "5509:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5475:61:9"
									},
									"src": "5451:86:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "5543:302:9",
										"text": "  this event is emitted when an Identity is removed from the Identity Registry.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327",
									"id": 1517,
									"name": "IdentityRemoved",
									"nameLocation": "5856:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5888:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "5872:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5872:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "5923:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "5905:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1513,
														"name": "IIdentity",
														"nameLocations": [
															"5905:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "5905:9:9"
													},
													"referencedDeclaration": 328,
													"src": "5905:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5871:61:9"
									},
									"src": "5850:83:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "5939:261:9",
										"text": "  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"
									},
									"eventSelector": "e98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010",
									"id": 1526,
									"name": "IdentityUpdated",
									"nameLocation": "6211:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "6245:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6227:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1519,
														"name": "IIdentity",
														"nameLocations": [
															"6227:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "6227:9:9"
													},
													"referencedDeclaration": 328,
													"src": "6227:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "6276:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6258:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "IIdentity",
														"nameLocations": [
															"6258:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "6258:9:9"
													},
													"referencedDeclaration": 328,
													"src": "6258:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6226:62:9"
									},
									"src": "6205:84:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "6295:295:9",
										"text": "  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"
									},
									"eventSelector": "04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853",
									"id": 1533,
									"name": "CountryUpdated",
									"nameLocation": "6601:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "6632:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "6616:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "6664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "6649:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1530,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:57:9"
									},
									"src": "6595:78:9"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "6679:474:9",
										"text": "  @dev Register an identity contract corresponding to a user address.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityRegistered` event"
									},
									"functionSelector": "454a03e0",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerIdentity",
									"nameLocation": "7167:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7201:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "7193:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "7233:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "7223:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1537,
														"name": "IIdentity",
														"nameLocations": [
															"7223:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "7223:9:9"
													},
													"referencedDeclaration": 328,
													"src": "7223:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "7259:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "7252:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1540,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7252:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7183:90:9"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7282:0:9"
									},
									"scope": 1654,
									"src": "7158:125:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "7289:356:9",
										"text": "  @dev Removes an user from the identity registry.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityRemoved` event"
									},
									"functionSelector": "a8d29d1d",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteIdentity",
									"nameLocation": "7659:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7682:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "7674:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7674:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7673:22:9"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7704:0:9"
									},
									"scope": 1654,
									"src": "7650:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "7711:312:9",
										"text": "  @dev Replace the actual identityRegistryStorage contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _identityRegistryStorage The address of the new Identity Registry Storage\n  emits `IdentityStorageSet` event"
									},
									"functionSelector": "26d941ae",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "8037:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "8072:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "8064:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8064:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8063:34:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8106:0:9"
									},
									"scope": 1654,
									"src": "8028:79:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "8113:304:9",
										"text": "  @dev Replace the actual claimTopicsRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _claimTopicsRegistry The address of the new claim Topics Registry\n  emits `ClaimTopicsRegistrySet` event"
									},
									"functionSelector": "670af6a9",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "8431:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "8462:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "8454:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8454:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8453:30:9"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8492:0:9"
									},
									"scope": 1654,
									"src": "8422:71:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "8499:316:9",
										"text": "  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n  emits `TrustedIssuersRegistrySet` event"
									},
									"functionSelector": "e744d789",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "8829:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "8863:23:9",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "8855:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:33:9"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8896:0:9"
									},
									"scope": 1654,
									"src": "8820:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "8903:410:9",
										"text": "  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryUpdated` event"
									},
									"functionSelector": "3b239a7f",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCountry",
									"nameLocation": "9327:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9349:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "9341:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9341:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "9370:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "9363:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1572,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9363:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9340:39:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9388:0:9"
									},
									"scope": 1654,
									"src": "9318:71:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "9395:526:9",
										"text": "  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityUpdated` event"
									},
									"functionSelector": "8e098ca1",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIdentity",
									"nameLocation": "9935:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9958:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "9950:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9950:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "9982:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "9972:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1580,
														"name": "IIdentity",
														"nameLocations": [
															"9972:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "9972:9:9"
													},
													"referencedDeclaration": 328,
													"src": "9972:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9949:43:9"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10001:0:9"
									},
									"scope": 1654,
									"src": "9926:76:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "10008:701:9",
										"text": "  @dev function allowing to register identities in batch\n  This function can only be called by a wallet set as agent of the smart contract\n  Requires that none of the users has an identity contract already registered.\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses of the users\n  @param _identities The addresses of the corresponding identity contracts\n  @param _countries The countries of the corresponding investors\n  emits _userAddresses.length `IdentityRegistered` events"
									},
									"functionSelector": "653dc9f1",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "10723:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "10773:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "10754:33:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1587,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10754:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1588,
													"nodeType": "ArrayTypeName",
													"src": "10754:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "10818:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "10797:32:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$328_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 1591,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1590,
															"name": "IIdentity",
															"nameLocations": [
																"10797:9:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 328,
															"src": "10797:9:9"
														},
														"referencedDeclaration": 328,
														"src": "10797:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$328",
															"typeString": "contract IIdentity"
														}
													},
													"id": 1592,
													"nodeType": "ArrayTypeName",
													"src": "10797:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$328_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "10857:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "10839:28:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 1594,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "10839:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 1595,
													"nodeType": "ArrayTypeName",
													"src": "10839:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10744:129:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10882:0:9"
									},
									"scope": 1654,
									"src": "10714:169:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "10889:292:9",
										"text": "  @dev This functions checks whether a wallet has its Identity registered or not\n  in the Identity Registry.\n  @param _userAddress The address of the user to be checked.\n  @return 'True' if the address is contained in the Identity Registry, 'false' if not."
									},
									"functionSelector": "5dbe47e8",
									"id": 1607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11195:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11212:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "11204:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11203:22:9"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "11249:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11249:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11248:6:9"
									},
									"scope": 1654,
									"src": "11186:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "11261:391:9",
										"text": "  @dev This functions checks whether an identity contract\n  corresponding to the provided user address has the required claims or not based\n  on the data fetched from trusted issuers registry and from the claim topics registry\n  @param _userAddress The address of the user to be verified.\n  @return 'True' if the address is verified, 'false' if not."
									},
									"functionSelector": "b9209e33",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "11666:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11685:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "11677:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11676:22:9"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "11722:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11722:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:6:9"
									},
									"scope": 1654,
									"src": "11657:71:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "11734:117:9",
										"text": "  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "f0eb5e54",
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "11865:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11882:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11874:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11874:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11873:22:9"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11919:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1620,
														"name": "IIdentity",
														"nameLocations": [
															"11919:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "11919:9:9"
													},
													"referencedDeclaration": 328,
													"src": "11919:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11918:11:9"
									},
									"scope": 1654,
									"src": "11856:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "11936:120:9",
										"text": "  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "7e42683b",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "12070:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "12094:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "12086:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12086:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12085:22:9"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "12131:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1629,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12131:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12130:8:9"
									},
									"scope": 1654,
									"src": "12061:78:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "12145:100:9",
										"text": "  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry."
									},
									"functionSelector": "f11abfd8",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "12259:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12274:2:9"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "12300:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 1636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1635,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"12300:24:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1770,
														"src": "12300:24:9"
													},
													"referencedDeclaration": 1770,
													"src": "12300:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12299:26:9"
									},
									"scope": 1654,
									"src": "12250:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "12332:99:9",
										"text": "  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."
									},
									"functionSelector": "b4f3fcb7",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "12445:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12460:2:9"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "12486:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 1643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1642,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"12486:23:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1871,
														"src": "12486:23:9"
													},
													"referencedDeclaration": 1871,
													"src": "12486:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12485:25:9"
									},
									"scope": 1654,
									"src": "12436:75:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "12517:96:9",
										"text": "  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."
									},
									"functionSelector": "3b3e12f4",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "12627:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12641:2:9"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "12667:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 1650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1649,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"12667:20:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1479,
														"src": "12667:20:9"
													},
													"referencedDeclaration": 1479,
													"src": "12667:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12666:22:9"
									},
									"scope": 1654,
									"src": "12618:71:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1655,
							"src": "4095:8596:9",
							"usedErrors": []
						}
					],
					"src": "3817:8875:9"
				},
				"id": 9
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"IIdentityRegistryStorage": [
							1770
						]
					},
					"id": 1771,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1656,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:10"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 329,
							"src": "3842:64:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1770,
							"linearizedBaseContracts": [
								1770
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "3918:24:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3966:306:10",
										"text": "  this event is emitted when an Identity is registered into the storage contract.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 1665,
									"name": "IdentityStored",
									"nameLocation": "4283:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4314:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "4298:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4349:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "4331:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1661,
														"name": "IIdentity",
														"nameLocations": [
															"4331:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "4331:9:10"
													},
													"referencedDeclaration": 328,
													"src": "4331:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:61:10"
									},
									"src": "4277:82:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "4365:301:10",
										"text": "  this event is emitted when an Identity is removed from the storage contract.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 1673,
									"name": "IdentityUnstored",
									"nameLocation": "4677:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4710:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4694:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4745:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4727:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1669,
														"name": "IIdentity",
														"nameLocations": [
															"4727:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "4727:9:10"
													},
													"referencedDeclaration": 328,
													"src": "4727:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:61:10"
									},
									"src": "4671:84:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "4761:261:10",
										"text": "  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"
									},
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 1682,
									"name": "IdentityModified",
									"nameLocation": "5033:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "5068:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5050:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1675,
														"name": "IIdentity",
														"nameLocations": [
															"5050:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "5050:9:10"
													},
													"referencedDeclaration": 328,
													"src": "5050:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "5099:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5081:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1678,
														"name": "IIdentity",
														"nameLocations": [
															"5081:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "5081:9:10"
													},
													"referencedDeclaration": 328,
													"src": "5081:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:62:10"
									},
									"src": "5027:85:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "5118:295:10",
										"text": "  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"
									},
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 1689,
									"name": "CountryModified",
									"nameLocation": "5424:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5456:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "5440:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "5488:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "5473:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1686,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:57:10"
									},
									"src": "5418:79:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "5503:240:10",
										"text": "  this event is emitted when an Identity Registry is bound to the storage contract\n  the event is emitted by the 'addIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry added"
									},
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 1694,
									"name": "IdentityRegistryBound",
									"nameLocation": "5754:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "5792:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "5776:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:34:10"
									},
									"src": "5748:62:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "5816:249:10",
										"text": "  this event is emitted when an Identity Registry is unbound from the storage contract\n  the event is emitted by the 'removeIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry removed"
									},
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 1699,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "6076:23:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "6116:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "6100:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:34:10"
									},
									"src": "6070:64:10"
								},
								{
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "6159:483:10",
										"text": "  @dev adds an identity contract corresponding to a user address in the storage.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityStored` event"
									},
									"functionSelector": "a53410dd",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "6656:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6694:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "6686:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "6726:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "6716:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1703,
														"name": "IIdentity",
														"nameLocations": [
															"6716:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "6716:9:10"
													},
													"referencedDeclaration": 328,
													"src": "6716:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "6752:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "6745:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1706,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:90:10"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6775:0:10"
									},
									"scope": 1770,
									"src": "6647:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "6782:349:10",
										"text": "  @dev Removes an user from the storage.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityUnstored` event"
									},
									"functionSelector": "cf191bcd",
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "7145:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7179:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "7171:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7171:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7170:22:10"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7201:0:10"
									},
									"scope": 1770,
									"src": "7136:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "7208:413:10",
										"text": "  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryModified` event"
									},
									"functionSelector": "9f3418d5",
									"id": 1724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "7635:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7671:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "7663:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7663:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "7692:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "7685:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1720,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7685:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:39:10"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7710:0:10"
									},
									"scope": 1770,
									"src": "7626:85:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "7717:529:10",
										"text": "  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityModified` event"
									},
									"functionSelector": "e805cf86",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "8260:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8289:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "8281:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8281:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "8313:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "8303:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "IIdentity",
														"nameLocations": [
															"8303:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "8303:9:10"
													},
													"referencedDeclaration": 328,
													"src": "8303:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8280:43:10"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8332:0:10"
									},
									"scope": 1770,
									"src": "8251:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "8339:426:10",
										"text": "  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n  cannot bind more than 300 IR to 1 IRS\n  @param _identityRegistry The identity registry address to add."
									},
									"functionSelector": "690a49f9",
									"id": 1739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "8779:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "8808:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "8800:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8799:27:10"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8835:0:10"
									},
									"scope": 1770,
									"src": "8770:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "8842:399:10",
										"text": "  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n  @param _identityRegistry The identity registry address to remove."
									},
									"functionSelector": "97a012f7",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "9255:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "9286:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "9278:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:27:10"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9313:0:10"
									},
									"scope": 1770,
									"src": "9246:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "9320:87:10",
										"text": "  @dev Returns the identity registries linked to the storage contract"
									},
									"functionSelector": "bf9eb959",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "9421:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9445:2:10"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "9471:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1748,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9471:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1749,
													"nodeType": "ArrayTypeName",
													"src": "9471:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9470:18:10"
									},
									"scope": 1770,
									"src": "9412:77:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "9495:117:10",
										"text": "  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "7988d3a5",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "9626:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9649:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "9641:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9640:22:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "9686:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1758,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1757,
														"name": "IIdentity",
														"nameLocations": [
															"9686:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "9686:9:10"
													},
													"referencedDeclaration": 328,
													"src": "9686:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:11:10"
									},
									"scope": 1770,
									"src": "9617:80:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "9703:120:10",
										"text": "  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "727e13bc",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "9837:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9867:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "9859:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9859:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:22:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "9904:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1766,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9904:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:8:10"
									},
									"scope": 1770,
									"src": "9828:84:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1771,
							"src": "3908:6006:10",
							"usedErrors": []
						}
					],
					"src": "3817:6098:10"
				},
				"id": 10
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"ITrustedIssuersRegistry": [
							1871
						]
					},
					"id": 1872,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1772,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:11"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1872,
							"sourceUnit": 50,
							"src": "3843:67:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1871,
							"linearizedBaseContracts": [
								1871
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "3922:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "3952:321:11",
										"text": "  this event is emitted when a trusted issuer is added in the registry.\n  the event is emitted by the addTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 1782,
									"name": "TrustedIssuerAdded",
									"nameLocation": "4284:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4324:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4303:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1775,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4303:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4303:12:11"
													},
													"referencedDeclaration": 49,
													"src": "4303:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "4349:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4339:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1778,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4339:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1779,
													"nodeType": "ArrayTypeName",
													"src": "4339:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:59:11"
									},
									"src": "4278:84:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "4368:242:11",
										"text": "  this event is emitted when a trusted issuer is removed from the registry.\n  the event is emitted by the removeTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
									},
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 1788,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "4621:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4663:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "4642:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1784,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4642:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4642:12:11"
													},
													"referencedDeclaration": 49,
													"src": "4642:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4641:36:11"
									},
									"src": "4615:63:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "4684:348:11",
										"text": "  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 1797,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "5043:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "5083:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5062:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1790,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5062:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5062:12:11"
													},
													"referencedDeclaration": 49,
													"src": "5062:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "5108:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5098:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1793,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5098:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1794,
													"nodeType": "ArrayTypeName",
													"src": "5098:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:59:11"
									},
									"src": "5037:84:11"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "5127:651:11",
										"text": "  @dev registers a ClaimIssuer contract as trusted claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Trusted issuers\n  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerAdded` event"
									},
									"functionSelector": "9f63ea98",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "5792:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "5822:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "5809:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5809:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5809:12:11"
													},
													"referencedDeclaration": 49,
													"src": "5809:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "5857:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "5838:31:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1802,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5838:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1803,
													"nodeType": "ArrayTypeName",
													"src": "5838:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:62:11"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5879:0:11"
									},
									"scope": 1871,
									"src": "5783:97:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "5886:353:11",
										"text": "  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _trustedIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerRemoved` event"
									},
									"functionSelector": "b93d28eb",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "6253:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6286:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "6273:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1809,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6273:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6273:12:11"
													},
													"referencedDeclaration": 49,
													"src": "6273:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:29:11"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:0:11"
									},
									"scope": 1871,
									"src": "6244:67:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "6317:591:11",
										"text": "  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _trustedIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"
									},
									"functionSelector": "04bc7e84",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "6922:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6959:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "6946:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1817,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1816,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6946:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6946:12:11"
													},
													"referencedDeclaration": 49,
													"src": "6946:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "6994:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "6975:31:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1819,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6975:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1820,
													"nodeType": "ArrayTypeName",
													"src": "6975:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:62:11"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7016:0:11"
									},
									"scope": 1871,
									"src": "6913:104:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "7023:138:11",
										"text": "  @dev Function for getting all the trusted claim issuers stored.\n  @return array of all claim issuers registered."
									},
									"functionSelector": "d9dd24c5",
									"id": 1832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "7175:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7192:2:11"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "7218:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1828,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1827,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7218:12:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "7218:12:11"
														},
														"referencedDeclaration": 49,
														"src": "7218:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1829,
													"nodeType": "ArrayTypeName",
													"src": "7218:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:23:11"
									},
									"scope": 1871,
									"src": "7166:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "7247:271:11",
										"text": "  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the trusted issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."
									},
									"functionSelector": "52c111d1",
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "7532:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "7571:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "7563:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7562:20:11"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "7606:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1838,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1837,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7606:12:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "7606:12:11"
														},
														"referencedDeclaration": 49,
														"src": "7606:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1839,
													"nodeType": "ArrayTypeName",
													"src": "7606:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:23:11"
									},
									"scope": 1871,
									"src": "7523:106:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "7635:197:11",
										"text": "  @dev Checks if the ClaimIssuer contract is trusted\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is trusted, false otherwise."
									},
									"functionSelector": "ef2ed1a4",
									"id": 1850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "7846:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "7870:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "7862:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:17:11"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "7902:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7902:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:6:11"
									},
									"scope": 1871,
									"src": "7837:71:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "7914:333:11",
										"text": "  @dev Function for getting all the claim topic of trusted claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n  @param _trustedIssuer the trusted issuer concerned.\n  @return The set of claim topics that the trusted issuer is allowed to emit"
									},
									"functionSelector": "c28fb278",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "8261:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "8302:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "8289:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1853,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1852,
														"name": "IClaimIssuer",
														"nameLocations": [
															"8289:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "8289:12:11"
													},
													"referencedDeclaration": 49,
													"src": "8289:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8288:29:11"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "8341:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1856,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8341:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1857,
													"nodeType": "ArrayTypeName",
													"src": "8341:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:18:11"
									},
									"scope": 1871,
									"src": "8252:107:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "8365:383:11",
										"text": "  @dev Function for checking if the trusted claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is trusted for this claim topic."
									},
									"functionSelector": "34a89987",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "8762:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "8784:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "8776:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "8801:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "8793:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8793:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8775:38:11"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "8837:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8837:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:6:11"
									},
									"scope": 1871,
									"src": "8753:90:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1872,
							"src": "3912:4933:11",
							"usedErrors": []
						}
					],
					"src": "3818:5028:11"
				},
				"id": 11
			},
			"contracts t-rex/registry/storage/IRStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/storage/IRStorage.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IClaimTopicsRegistry": [
							1479
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"IIdentityRegistryStorage": [
							1770
						],
						"IRStorage": [
							1894
						],
						"ITrustedIssuersRegistry": [
							1871
						]
					},
					"id": 1895,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1873,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:12"
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IClaimTopicsRegistry.sol",
							"file": "../interface/IClaimTopicsRegistry.sol",
							"id": 1874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 1480,
							"src": "3843:47:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 1875,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 1872,
							"src": "3891:50:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 1876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 1771,
							"src": "3942:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1894,
							"linearizedBaseContracts": [
								1894
							],
							"name": "IRStorage",
							"nameLocation": "4004:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "4020:52:12",
										"text": "@dev Address of the ClaimTopicsRegistry Contract"
									},
									"id": 1880,
									"mutability": "mutable",
									"name": "_tokenTopicsRegistry",
									"nameLocation": "4107:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "4077:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
										"typeString": "contract IClaimTopicsRegistry"
									},
									"typeName": {
										"id": 1879,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1878,
											"name": "IClaimTopicsRegistry",
											"nameLocations": [
												"4077:20:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1479,
											"src": "4077:20:12"
										},
										"referencedDeclaration": 1479,
										"src": "4077:20:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1479",
											"typeString": "contract IClaimTopicsRegistry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "4134:55:12",
										"text": "@dev Address of the TrustedIssuersRegistry Contract"
									},
									"id": 1884,
									"mutability": "mutable",
									"name": "_tokenIssuersRegistry",
									"nameLocation": "4227:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "4194:54:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
										"typeString": "contract ITrustedIssuersRegistry"
									},
									"typeName": {
										"id": 1883,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1882,
											"name": "ITrustedIssuersRegistry",
											"nameLocations": [
												"4194:23:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1871,
											"src": "4194:23:12"
										},
										"referencedDeclaration": 1871,
										"src": "4194:23:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$1871",
											"typeString": "contract ITrustedIssuersRegistry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "4255:56:12",
										"text": "@dev Address of the IdentityRegistryStorage Contract"
									},
									"id": 1888,
									"mutability": "mutable",
									"name": "_tokenIdentityStorage",
									"nameLocation": "4350:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "4316:55:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
										"typeString": "contract IIdentityRegistryStorage"
									},
									"typeName": {
										"id": 1887,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1886,
											"name": "IIdentityRegistryStorage",
											"nameLocations": [
												"4316:24:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1770,
											"src": "4316:24:12"
										},
										"referencedDeclaration": 1770,
										"src": "4316:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$1770",
											"typeString": "contract IIdentityRegistryStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "4378:174:12",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
									},
									"id": 1893,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4577:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "4557:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1890,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4557:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1892,
										"length": {
											"hexValue": "3439",
											"id": 1891,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4565:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "4557:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1895,
							"src": "3995:590:12",
							"usedErrors": []
						}
					],
					"src": "3818:767:12"
				},
				"id": 12
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/AgentRoleUpgradeable.sol",
					"exportedSymbols": {
						"AgentRoleUpgradeable": [
							1997
						],
						"ContextUpgradeable": [
							817
						],
						"OwnableUpgradeable": [
							518
						],
						"Roles": [
							2086
						]
					},
					"id": 1998,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1896,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 519,
							"src": "3843:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/roles/Roles.sol",
							"file": "./Roles.sol",
							"id": 1898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 2087,
							"src": "3920:21:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1899,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"3976:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "3976:18:13"
									},
									"id": 1900,
									"nodeType": "InheritanceSpecifier",
									"src": "3976:18:13"
								}
							],
							"canonicalName": "AgentRoleUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1997,
							"linearizedBaseContracts": [
								1997,
								518,
								817,
								771
							],
							"name": "AgentRoleUpgradeable",
							"nameLocation": "3952:20:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1904,
									"libraryName": {
										"id": 1901,
										"name": "Roles",
										"nameLocations": [
											"4007:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2086,
										"src": "4007:5:13"
									},
									"nodeType": "UsingForDirective",
									"src": "4001:27:13",
									"typeName": {
										"id": 1903,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1902,
											"name": "Roles.Role",
											"nameLocations": [
												"4017:5:13",
												"4023:4:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2005,
											"src": "4017:10:13"
										},
										"referencedDeclaration": 2005,
										"src": "4017:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"constant": false,
									"id": 1907,
									"mutability": "mutable",
									"name": "_agents",
									"nameLocation": "4053:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1997,
									"src": "4034:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$2005_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 1906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1905,
											"name": "Roles.Role",
											"nameLocations": [
												"4034:5:13",
												"4040:4:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2005,
											"src": "4034:10:13"
										},
										"referencedDeclaration": 2005,
										"src": "4034:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5",
									"id": 1911,
									"name": "AgentAdded",
									"nameLocation": "4073:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4100:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "4084:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:24:13"
									},
									"src": "4067:41:13"
								},
								{
									"anonymous": false,
									"eventSelector": "ed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b",
									"id": 1915,
									"name": "AgentRemoved",
									"nameLocation": "4119:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4148:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "4132:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:24:13"
									},
									"src": "4113:43:13"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "4183:106:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1919,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4209:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4213:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4209:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1918,
																"name": "isAgent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "4201:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4201:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204167656e7420726f6c65",
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4222:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															},
															"value": "AgentRole: caller does not have the Agent role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															}
														],
														"id": 1917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4193:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:78:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "4193:78:13"
											},
											{
												"id": 1925,
												"nodeType": "PlaceholderStatement",
												"src": "4281:1:13"
											}
										]
									},
									"id": 1927,
									"name": "onlyAgent",
									"nameLocation": "4171:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4180:2:13"
									},
									"src": "4162:127:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "4346:143:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1935,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "4364:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4382:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4374:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1936,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4374:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4374:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4364:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4386:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4356:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4356:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "4356:64:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1947,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "4442:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1944,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4430:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2005_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4438:3:13",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2032,
														"src": "4430:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$2005_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$2005_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4430:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "4430:19:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1951,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "4475:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1950,
														"name": "AgentAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "4464:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:18:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1953,
												"nodeType": "EmitStatement",
												"src": "4459:23:13"
											}
										]
									},
									"functionSelector": "84e79842",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1931,
												"name": "onlyOwner",
												"nameLocations": [
													"4336:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "4336:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:9:13"
										}
									],
									"name": "addAgent",
									"nameLocation": "4304:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4321:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "4313:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:16:13"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4346:0:13"
									},
									"scope": 1997,
									"src": "4295:194:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "4549:148:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1963,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "4567:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4585:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4577:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1964,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4577:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4577:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4567:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4589:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4559:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "4559:64:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1975,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "4648:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1972,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4633:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2005_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4641:6:13",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "4633:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$2005_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$2005_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "4633:22:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1979,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "4683:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1978,
														"name": "AgentRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "4670:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4670:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "EmitStatement",
												"src": "4665:25:13"
											}
										]
									},
									"functionSelector": "97a6278e",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1960,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1959,
												"name": "onlyOwner",
												"nameLocations": [
													"4539:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "4539:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4539:9:13"
										}
									],
									"name": "removeAgent",
									"nameLocation": "4504:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4524:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "4516:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:16:13"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4549:0:13"
									},
									"scope": 1997,
									"src": "4495:202:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "4763:43:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1992,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "4792:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1990,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4780:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2005_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4788:3:13",
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2085,
														"src": "4780:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2005_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$2005_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4780:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1989,
												"id": 1994,
												"nodeType": "Return",
												"src": "4773:26:13"
											}
										]
									},
									"functionSelector": "1ffbb064",
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAgent",
									"nameLocation": "4712:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4728:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4720:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4719:16:13"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4757:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4757:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:6:13"
									},
									"scope": 1997,
									"src": "4703:103:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1998,
							"src": "3943:865:13",
							"usedErrors": [
								354,
								359,
								534,
								537
							]
						}
					],
					"src": "3818:991:13"
				},
				"id": 13
			},
			"contracts t-rex/roles/Roles.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							2086
						]
					},
					"id": 2087,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1999,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roles",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2000,
								"nodeType": "StructuredDocumentation",
								"src": "3843:82:14",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 2086,
							"linearizedBaseContracts": [
								2086
							],
							"name": "Roles",
							"nameLocation": "3934:5:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 2005,
									"members": [
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "3993:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "3968:31:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 2003,
												"keyType": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3968:24:14",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 2002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3987:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "3953:4:14",
									"nodeType": "StructDefinition",
									"scope": 2086,
									"src": "3946:60:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "4135:117:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4153:19:14",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2016,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "4158:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 2017,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "4164:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2015,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "4154:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2005_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:18:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4174:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 2014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4145:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "4145:63:14"
											},
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2023,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "4218:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4223:6:14",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2004,
															"src": "4218:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2027,
														"indexExpression": {
															"id": 2025,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "4230:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4218:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4241:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4218:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "4218:27:14"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "4012:60:14",
										"text": " @dev Give an account access to this role."
									},
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "4086:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4103:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4090:17:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2007,
														"name": "Role",
														"nameLocations": [
															"4090:4:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "4090:4:14"
													},
													"referencedDeclaration": 2005,
													"src": "4090:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4117:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "4109:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:36:14"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4135:0:14"
									},
									"scope": 2086,
									"src": "4077:175:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "4388:119:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2043,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "4410:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 2044,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "4416:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2042,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "4406:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$2005_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4406:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4426:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 2041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4398:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "4398:64:14"
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2049,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "4472:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4477:6:14",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2004,
															"src": "4472:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2053,
														"indexExpression": {
															"id": 2051,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "4484:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4472:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4495:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4472:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "4472:28:14"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "4258:64:14",
										"text": " @dev Remove an account's access to this role."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "4336:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4356:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4343:17:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2034,
														"name": "Role",
														"nameLocations": [
															"4343:4:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "4343:4:14"
													},
													"referencedDeclaration": 2005,
													"src": "4343:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4370:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4362:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:36:14"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:14"
									},
									"scope": 2086,
									"src": "4327:180:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "4674:122:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "4692:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4711:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4703:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2071,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4703:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4703:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4692:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4715:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 2069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4684:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "4684:68:14"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2079,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4769:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4774:6:14",
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "4769:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2082,
													"indexExpression": {
														"id": 2081,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "4781:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4769:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2068,
												"id": 2083,
												"nodeType": "Return",
												"src": "4762:27:14"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "4513:78:14",
										"text": " @dev Check if an account has this role.\n @return bool"
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "4605:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4622:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "4609:17:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 2061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2060,
														"name": "Role",
														"nameLocations": [
															"4609:4:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "4609:4:14"
													},
													"referencedDeclaration": 2005,
													"src": "4609:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$2005_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4636:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "4628:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4608:36:14"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "4668:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4668:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:6:14"
									},
									"scope": 2086,
									"src": "4596:200:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "3926:872:14",
							"usedErrors": []
						}
					],
					"src": "3818:981:14"
				},
				"id": 14
			}
		}
	}
}