{
	"id": "95fba7c3adca6cc8045201fb9b6f1855",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts t-rex/roles/AgentRole.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./Roles.sol\";\n\ncontract AgentRole is Ownable(msg.sender) {\n    using Roles for Roles.Role;\n\n    Roles.Role private _agents;\n\n    event AgentAdded(address indexed _agent);\n    event AgentRemoved(address indexed _agent);\n\n    modifier onlyAgent() {\n        require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\");\n        _;\n    }\n\n    function addAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.add(_agent);\n        emit AgentAdded(_agent);\n    }\n\n    function removeAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.remove(_agent);\n        emit AgentRemoved(_agent);\n    }\n\n    function isAgent(address _agent) public view returns (bool) {\n        return _agents.has(_agent);\n    }\n}\n"
			},
			"contracts t-rex/roles/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping(address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.17;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x14699275e6f580c272fa15fff269c03f2c1df22507d0705ddf739129d87753fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c960ccca3f4568fac4f47844ffdbb6e7902b926e04a14bcc432eec8377636321\",\"dweb:/ipfs/Qma9BY76AJhM3o355eq1hiJVKgKoNYaTwSdxQF8VfJAtpw\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x889b272e9700888246793e6f9931ed4d5d9f73340e6b9800e0925fdd188e0f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc3751ee9a51013d1793e09b11fcacd0e977fa44018527388f32f19978677b\",\"dweb:/ipfs/QmZQLLm2qrNtm4VdWQBr2FxwjQvYfsktwFDHmKqagdXgW9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x889b272e9700888246793e6f9931ed4d5d9f73340e6b9800e0925fdd188e0f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc3751ee9a51013d1793e09b11fcacd0e977fa44018527388f32f19978677b\",\"dweb:/ipfs/QmZQLLm2qrNtm4VdWQBr2FxwjQvYfsktwFDHmKqagdXgW9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/AgentRole.sol": {
				"AgentRole": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "addAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "isAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "removeAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/AgentRole.sol\":3920:4775  contract AgentRole is Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts t-rex/roles/AgentRole.sol\":3950:3960  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1374  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1371:1372  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1374  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1374  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1413:1425  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1394:1412  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1246:1433  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts t-rex/roles/AgentRole.sol\":3920:4775  contract AgentRole is Ownable(msg.sender) {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3022  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3025:3031  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3041:3058  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3025:3031  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3022  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2996:3120  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:217   */\ntag_11:\n    /* \"contracts t-rex/roles/AgentRole.sol\":3920:4775  contract AgentRole is Ownable(msg.sender) {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/AgentRole.sol\":3920:4775  contract AgentRole is Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1ffbb064\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84e79842\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x97a6278e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/roles/AgentRole.sol\":4670:4773  function isAgent(address _agent) public view returns (bool) {... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts t-rex/roles/AgentRole.sol\":4670:4773  function isAgent(address _agent) public view returns (bool) {... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts t-rex/roles/AgentRole.sol\":4262:4456  function addAgent(address _agent) public onlyOwner {... */\n    tag_5:\n      tag_15\n      tag_18\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRole.sol\":4462:4664  function removeAgent(address _agent) public onlyOwner {... */\n    tag_7:\n      tag_15\n      tag_25\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_15\n      tag_28\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRole.sol\":4670:4773  function isAgent(address _agent) public view returns (bool) {... */\n    tag_12:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4724:4728  bool */\n      0x00\n        /* \"contracts t-rex/roles/AgentRole.sol\":4747:4766  _agents.has(_agent) */\n      tag_31\n        /* \"contracts t-rex/roles/AgentRole.sol\":4747:4754  _agents */\n      0x01\n        /* \"contracts t-rex/roles/AgentRole.sol\":4759:4765  _agent */\n      dup4\n        /* \"contracts t-rex/roles/AgentRole.sol\":4747:4758  _agents.has */\n      tag_32\n        /* \"contracts t-rex/roles/AgentRole.sol\":4747:4766  _agents.has(_agent) */\n      jump\t// in\n    tag_31:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4740:4766  return _agents.has(_agent) */\n      swap3\n        /* \"contracts t-rex/roles/AgentRole.sol\":4670:4773  function isAgent(address _agent) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1563  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2405:2406  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2396  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRole.sol\":4262:4456  function addAgent(address _agent) public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1563  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRole.sol\":4331:4351  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRole.sol\":4323:4387  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4397:4416  _agents.add(_agent) */\n      tag_45\n        /* \"contracts t-rex/roles/AgentRole.sol\":4397:4404  _agents */\n      0x01\n        /* \"contracts t-rex/roles/AgentRole.sol\":4409:4415  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRole.sol\":4397:4408  _agents.add */\n      tag_46\n        /* \"contracts t-rex/roles/AgentRole.sol\":4397:4416  _agents.add(_agent) */\n      jump\t// in\n    tag_45:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4431:4449  AgentAdded(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xf68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRole.sol\":4262:4456  function addAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1705:1712  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1731:1737  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRole.sol\":4462:4664  function removeAgent(address _agent) public onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1563  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRole.sol\":4534:4554  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRole.sol\":4526:4590  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_51:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4600:4622  _agents.remove(_agent) */\n      tag_53\n        /* \"contracts t-rex/roles/AgentRole.sol\":4600:4607  _agents */\n      0x01\n        /* \"contracts t-rex/roles/AgentRole.sol\":4615:4621  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRole.sol\":4600:4614  _agents.remove */\n      tag_54\n        /* \"contracts t-rex/roles/AgentRole.sol\":4600:4622  _agents.remove(_agent) */\n      jump\t// in\n    tag_53:\n        /* \"contracts t-rex/roles/AgentRole.sol\":4637:4657  AgentRemoved(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRole.sol\":4462:4664  function removeAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1563  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2648:2670  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n      tag_58\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2721:2722  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2693:2724  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2763:2771  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2744:2762  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_32:\n        /* \"contracts t-rex/roles/Roles.sol\":4668:4672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4692:4713  account != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1306:1308   */\n      0x22\n        /* \"#utility.yul\":1286:1304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1279:1309   */\n      mstore\n        /* \"#utility.yul\":1345:1379   */\n      0x526f6c65733a206163636f756e7420697320746865207a65726f206164647265\n        /* \"#utility.yul\":1325:1343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1318:1380   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":1396:1414   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1389:1421   */\n      mstore\n        /* \"#utility.yul\":1438:1457   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_43\n        /* \"#utility.yul\":1065:1463   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n    tag_62:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4780  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1817:1979  function _checkOwner() internal view virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1876:1883  owner() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1876:1881  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1876:1883  owner() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1876:1899  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1872:1973  if (owner() != _msgSender()) {... */\n      tag_37\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1962  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3022  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3025:3031  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3041:3058  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3025:3031  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3006:3022  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2996:3120  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n    tag_46:\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      tag_74\n        /* \"contracts t-rex/roles/Roles.sol\":4158:4162  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4164:4171  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4157  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      jump\t// in\n    tag_74:\n        /* \"contracts t-rex/roles/Roles.sol\":4153:4172  !has(role, account) */\n      iszero\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1652:1673   */\n      mstore\n        /* \"#utility.yul\":1709:1711   */\n      0x1f\n        /* \"#utility.yul\":1689:1707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1682:1712   */\n      mstore\n        /* \"#utility.yul\":1748:1781   */\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n        /* \"#utility.yul\":1728:1746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1721:1782   */\n      mstore\n        /* \"#utility.yul\":1799:1817   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_43\n        /* \"#utility.yul\":1468:1823   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4229  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4241:4245  true */\n      0x01\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n    tag_54:\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      tag_79\n        /* \"contracts t-rex/roles/Roles.sol\":4410:4414  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4416:4423  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4409  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      jump\t// in\n    tag_79:\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2012:2033   */\n      mstore\n        /* \"#utility.yul\":2069:2071   */\n      0x21\n        /* \"#utility.yul\":2049:2067   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2042:2072   */\n      mstore\n        /* \"#utility.yul\":2108:2142   */\n      0x526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c\n        /* \"#utility.yul\":2088:2106   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2081:2143   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":2159:2177   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2152:2183   */\n      mstore\n        /* \"#utility.yul\":2200:2219   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_43\n        /* \"#utility.yul\":1828:2225   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4495:4500  false */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4500  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_11:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_86:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_87:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:700   */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n      swap1\n        /* \"#utility.yul\":497:700   */\n      jump\t// out\n        /* \"#utility.yul\":705:1060   */\n    tag_44:\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"#utility.yul\":889:910   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1f\n        /* \"#utility.yul\":926:944   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1018   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":980:982   */\n      0x40\n        /* \"#utility.yul\":965:983   */\n      dup3\n      add\n        /* \"#utility.yul\":958:1019   */\n      mstore\n        /* \"#utility.yul\":1051:1053   */\n      0x60\n        /* \"#utility.yul\":1036:1054   */\n      add\n      swap1\n        /* \"#utility.yul\":705:1060   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122074e7ca3a7d41b1c6dd7bb2e2d4ad1bcb4cb65ae72be7e08db823bb4568e4fb6864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 70,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:219:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104f8806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100c1578063f2fde38b146100d4575b600080fd5b61007a610075366004610447565b6100e7565b60405190151581526020015b60405180910390f35b6100976100fa565b005b6100976100a7366004610447565b61010e565b6100b4610187565b6040516100869190610477565b6100976100cf366004610447565b610196565b6100976100e2366004610447565b610206565b60006100f4600183610244565b92915050565b6101026102c7565b61010c60006102f9565b565b6101166102c7565b6001600160a01b0381166101455760405162461bcd60e51b815260040161013c9061048b565b60405180910390fd5b610150600182610349565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6000546001600160a01b031690565b61019e6102c7565b6001600160a01b0381166101c45760405162461bcd60e51b815260040161013c9061048b565b6101cf6001826103c5565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61020e6102c7565b6001600160a01b038116610238576000604051631e4fbdf760e01b815260040161013c9190610477565b610241816102f9565b50565b60006001600160a01b0382166102a75760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161013c565b506001600160a01b03166000908152602091909152604090205460ff1690565b336102d0610187565b6001600160a01b03161461010c573360405163118cdaa760e01b815260040161013c9190610477565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103538282610244565b156103a05760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161013c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6103cf8282610244565b6104255760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161013c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561045957600080fd5b81356001600160a01b038116811461047057600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060408201526060019056fea264697066735822122074e7ca3a7d41b1c6dd7bb2e2d4ad1bcb4cb65ae72be7e08db823bb4568e4fb6864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x46 JUMP JUMPDEST POP PUSH2 0x96 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4F8 DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x196 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 PUSH1 0x1 DUP4 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x10C PUSH1 0x0 PUSH2 0x2F9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x116 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150 PUSH1 0x1 DUP3 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x1 DUP3 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x238 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x241 DUP2 PUSH2 0x2F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x2D0 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x353 DUP3 DUP3 PUSH2 0x244 JUMP JUMPDEST ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3CF DUP3 DUP3 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xE7CA3A7D41B1C6DD7BB2E2D4AD1BCB4CB65AE72BE7 0xE0 DUP14 0xB8 0x23 0xBB GASLIMIT PUSH9 0xE4FB6864736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3920:855:2:-:0;;;;;;;;;;;;-1:-1:-1;3950:10:2;;1290:95:0;;1343:31;;-1:-1:-1;;;1343:31:0;;1371:1;1343:31;;;160:51:4;133:18;;1343:31:0;;;;;;;1290:95;1394:32;1413:12;1394:18;:32::i;:::-;1246:187;3920:855:2;;2933:187:0;3006:16;3025:6;;-1:-1:-1;;;;;3041:17:0;;;-1:-1:-1;;;;;;3041:17:0;;;;;;3073:40;;3025:6;;;;;;;3073:40;;3006:16;3073:40;2996:124;2933:187;:::o;14:203:4:-;3920:855:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 711,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 761,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAgent_240": {
									"entryPoint": 270,
									"id": 240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_317": {
									"entryPoint": 841,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_370": {
									"entryPoint": 580,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAgent_281": {
									"entryPoint": 231,
									"id": 281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 391,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAgent_268": {
									"entryPoint": 406,
									"id": 268,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_343": {
									"entryPoint": 965,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 250,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 518,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2227:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:4"
															},
															"nodeType": "YulIf",
															"src": "94:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:4"
															},
															"nodeType": "YulIf",
															"src": "200:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:4",
														"type": ""
													}
												],
												"src": "14:286:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:4",
														"type": ""
													}
												],
												"src": "305:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "665:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "681:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "686:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "677:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "677:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "690:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:4",
														"type": ""
													}
												],
												"src": "497:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "896:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:4"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "985:33:4",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:61:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:61:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1028:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1040:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1028:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "870:4:4",
														"type": ""
													}
												],
												"src": "705:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1290:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1301:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:18:4"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1345:34:4",
																		"type": "",
																		"value": "Roles: account is the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1411:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1396:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1416:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1430:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1216:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:4",
														"type": ""
													}
												],
												"src": "1065:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1682:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1682:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:4"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1748:33:4",
																		"type": "",
																		"value": "Roles: account already has role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:61:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1721:61:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1791:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1791:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1619:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1633:4:4",
														"type": ""
													}
												],
												"src": "1468:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2002:223:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2053:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2103:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:18:4"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2108:34:4",
																		"type": "",
																		"value": "Roles: account does not have rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:18:4"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2179:3:4",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2192:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2192:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1979:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1993:4:4",
														"type": ""
													}
												],
												"src": "1828:397:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100c1578063f2fde38b146100d4575b600080fd5b61007a610075366004610447565b6100e7565b60405190151581526020015b60405180910390f35b6100976100fa565b005b6100976100a7366004610447565b61010e565b6100b4610187565b6040516100869190610477565b6100976100cf366004610447565b610196565b6100976100e2366004610447565b610206565b60006100f4600183610244565b92915050565b6101026102c7565b61010c60006102f9565b565b6101166102c7565b6001600160a01b0381166101455760405162461bcd60e51b815260040161013c9061048b565b60405180910390fd5b610150600182610349565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6000546001600160a01b031690565b61019e6102c7565b6001600160a01b0381166101c45760405162461bcd60e51b815260040161013c9061048b565b6101cf6001826103c5565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61020e6102c7565b6001600160a01b038116610238576000604051631e4fbdf760e01b815260040161013c9190610477565b610241816102f9565b50565b60006001600160a01b0382166102a75760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161013c565b506001600160a01b03166000908152602091909152604090205460ff1690565b336102d0610187565b6001600160a01b03161461010c573360405163118cdaa760e01b815260040161013c9190610477565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103538282610244565b156103a05760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161013c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6103cf8282610244565b6104255760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161013c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561045957600080fd5b81356001600160a01b038116811461047057600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060408201526060019056fea264697066735822122074e7ca3a7d41b1c6dd7bb2e2d4ad1bcb4cb65ae72be7e08db823bb4568e4fb6864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH2 0xB4 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x196 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 PUSH1 0x1 DUP4 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x10C PUSH1 0x0 PUSH2 0x2F9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x116 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150 PUSH1 0x1 DUP3 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x1 DUP3 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x238 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x241 DUP2 PUSH2 0x2F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x2D0 PUSH2 0x187 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x353 DUP3 DUP3 PUSH2 0x244 JUMP JUMPDEST ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3CF DUP3 DUP3 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xE7CA3A7D41B1C6DD7BB2E2D4AD1BCB4CB65AE72BE7 0xE0 DUP14 0xB8 0x23 0xBB GASLIMIT PUSH9 0xE4FB6864736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3920:855:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4670:103;;;;;;:::i;:::-;;:::i;:::-;;;470:14:4;;463:22;445:41;;433:2;418:18;4670:103:2;;;;;;;;2314:101:0;;;:::i;:::-;;4262:194:2;;;;;;:::i;:::-;;:::i;1659:85:0:-;;;:::i;:::-;;;;;;;:::i;4462:202:2:-;;;;;;:::i;:::-;;:::i;2564:215:0:-;;;;;;:::i;:::-;;:::i;4670:103:2:-;4724:4;4747:19;:7;4759:6;4747:11;:19::i;:::-;4740:26;4670:103;-1:-1:-1;;4670:103:2:o;2314:101:0:-;1552:13;:11;:13::i;:::-;2378:30:::1;2405:1;2378:18;:30::i;:::-;2314:101::o:0;4262:194:2:-;1552:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4331:20:2;::::1;4323:64;;;;-1:-1:-1::0;;;4323:64:2::1;;;;;;;:::i;:::-;;;;;;;;;4397:19;:7;4409:6:::0;4397:11:::1;:19::i;:::-;4431:18;::::0;-1:-1:-1;;;;;4431:18:2;::::1;::::0;::::1;::::0;;;::::1;4262:194:::0;:::o;1659:85:0:-;1705:7;1731:6;-1:-1:-1;;;;;1731:6:0;;1659:85::o;4462:202:2:-;1552:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4534:20:2;::::1;4526:64;;;;-1:-1:-1::0;;;4526:64:2::1;;;;;;;:::i;:::-;4600:22;:7;4615:6:::0;4600:14:::1;:22::i;:::-;4637:20;::::0;-1:-1:-1;;;;;4637:20:2;::::1;::::0;::::1;::::0;;;::::1;4462:202:::0;:::o;2564:215:0:-;1552:13;:11;:13::i;:::-;-1:-1:-1;;;;;2648:22:0;::::1;2644:91;;2721:1;2693:31;;-1:-1:-1::0;;;2693:31:0::1;;;;;;;;:::i;2644:91::-;2744:28;2763:8;2744:18;:28::i;:::-;2564:215:::0;:::o;4596:200:3:-;4668:4;-1:-1:-1;;;;;4692:21:3;;4684:68;;;;-1:-1:-1;;;4684:68:3;;1267:2:4;4684:68:3;;;1249:21:4;1306:2;1286:18;;;1279:30;1345:34;1325:18;;;1318:62;-1:-1:-1;;;1396:18:4;;;1389:32;1438:19;;4684:68:3;1065:398:4;4684:68:3;-1:-1:-1;;;;;;4769:20:3;:11;:20;;;;;;;;;;;;;;;4596:200::o;1817:162:0:-;735:10:1;1876:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1876:23:0;;1872:101;;735:10:1;1922:40:0;;-1:-1:-1;;;1922:40:0;;;;;;;;:::i;2933:187::-;3006:16;3025:6;;-1:-1:-1;;;;;3041:17:0;;;-1:-1:-1;;;;;;3041:17:0;;;;;;3073:40;;3025:6;;;;;;;3073:40;;3006:16;3073:40;2996:124;2933:187;:::o;4077:175:3:-;4154:18;4158:4;4164:7;4154:3;:18::i;:::-;4153:19;4145:63;;;;-1:-1:-1;;;4145:63:3;;1670:2:4;4145:63:3;;;1652:21:4;1709:2;1689:18;;;1682:30;1748:33;1728:18;;;1721:61;1799:18;;4145:63:3;1468:355:4;4145:63:3;-1:-1:-1;;;;;4218:20:3;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;4218:27:3;4241:4;4218:27;;;4077:175::o;4327:180::-;4406:18;4410:4;4416:7;4406:3;:18::i;:::-;4398:64;;;;-1:-1:-1;;;4398:64:3;;2030:2:4;4398:64:3;;;2012:21:4;2069:2;2049:18;;;2042:30;2108:34;2088:18;;;2081:62;-1:-1:-1;;;2159:18:4;;;2152:31;2200:19;;4398:64:3;1828:397:4;4398:64:3;-1:-1:-1;;;;;4472:20:3;4495:5;4472:20;;;;;;;;;;;:28;;-1:-1:-1;;4472:28:3;;;4327:180::o;14:286:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:4;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:4:o;497:203::-;-1:-1:-1;;;;;661:32:4;;;;643:51;;631:2;616:18;;497:203::o;705:355::-;907:2;889:21;;;946:2;926:18;;;919:30;985:33;980:2;965:18;;958:61;1051:2;1036:18;;705:355::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "254400",
								"executionCost": "22757",
								"totalCost": "277157"
							},
							"external": {
								"addAgent(address)": "24335",
								"isAgent(address)": "1282",
								"owner()": "1114",
								"removeAgent(address)": "24370",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "23731"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3950,
									"end": 3960,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 3950,
									"end": 3960,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1413,
									"end": 1425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1394,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1246,
									"end": 1433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2996,
									"end": 3120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 217,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 217,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3920,
									"end": 4775,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074e7ca3a7d41b1c6dd7bb2e2d4ad1bcb4cb65ae72be7e08db823bb4568e4fb6864736f6c63430008110033",
									".code": [
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "1FFBB064"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "84E79842"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "97A6278E"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 4775,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4670,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4670,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4262,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4262,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4462,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4462,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4747,
											"end": 4754,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4759,
											"end": 4765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4747,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4747,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4747,
											"end": 4766,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4747,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2405,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2378,
											"end": 2408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4331,
											"end": 4351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4323,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4397,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4397,
											"end": 4404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4397,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4397,
											"end": 4416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4397,
											"end": 4416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4397,
											"end": 4416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4449,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4526,
											"end": 4590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4600,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4600,
											"end": 4622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "ED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B"
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4657,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2693,
											"end": 2724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2763,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2744,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 1379,
											"name": "PUSH",
											"source": 4,
											"value": "526F6C65733A206163636F756E7420697320746865207A65726F206164647265"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1065,
											"end": 1463,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1876,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1922,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4154,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1468,
											"end": 1823,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4406,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2108,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1828,
											"end": 2225,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 497,
											"end": 700,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 616,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1060,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 705,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 980,
											"end": 982,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 958,
											"end": 1019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts t-rex/roles/AgentRole.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAgent(address)": "84e79842",
							"isAgent(address)": "1ffbb064",
							"owner()": "8da5cb5b",
							"removeAgent(address)": "97a6278e",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/AgentRole.sol\":\"AgentRole\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x14699275e6f580c272fa15fff269c03f2c1df22507d0705ddf739129d87753fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c960ccca3f4568fac4f47844ffdbb6e7902b926e04a14bcc432eec8377636321\",\"dweb:/ipfs/Qma9BY76AJhM3o355eq1hiJVKgKoNYaTwSdxQF8VfJAtpw\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x889b272e9700888246793e6f9931ed4d5d9f73340e6b9800e0925fdd188e0f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc3751ee9a51013d1793e09b11fcacd0e977fa44018527388f32f19978677b\",\"dweb:/ipfs/QmZQLLm2qrNtm4VdWQBr2FxwjQvYfsktwFDHmKqagdXgW9\"]},\"contracts t-rex/roles/AgentRole.sol\":{\"keccak256\":\"0xcd21fcba9d7fbe7aa824151f3d8252e211b22ea8213cab4bc3808fe2812a5b91\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f212dcd4d90f7e85f3943ae130f32cb509f7b77c98a6a3a060cec30fe92420dc\",\"dweb:/ipfs/QmNVtWxfxW51EfPiB5XB99detkhTTJN6s2kEDhFy3TZZbW\"]},\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts t-rex/roles/AgentRole.sol:AgentRole",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 192,
								"contract": "contracts t-rex/roles/AgentRole.sol:AgentRole",
								"label": "_agents",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Role)290_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)290_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 289,
										"contract": "contracts t-rex/roles/AgentRole.sol:AgentRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047881c2610c9177df75ba8d849849f517e616c7c7a77db442ba07ed890ecf9d064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047881c2610c9177df75ba8d849849f517e616c7c7a77db442ba07ed890ecf9d064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DUP9 SHR 0x26 LT 0xC9 OR PUSH30 0xF75BA8D849849F517E616C7C7A77DB442BA07ED890ECF9D064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3926:872:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047881c2610c9177df75ba8d849849f517e616c7c7a77db442ba07ed890ecf9d064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE DUP9 SHR 0x26 LT 0xC9 OR PUSH30 0xF75BA8D849849F517E616C7C7A77DB442BA07ED890ECF9D064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047881c2610c9177df75ba8d849849f517e616c7c7a77db442ba07ed890ecf9d064736f6c63430008110033",
									".code": [
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts t-rex/roles/AgentRole.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/Roles.sol\":\"Roles\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"713:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "713:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "713:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "196:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "702:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "743:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "727:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "756:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "852:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:17:0"
									},
									"src": "846:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "902:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "995:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1023:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:15:0"
									},
									"src": "989:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1042:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1079:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1063:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1094:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:57:0"
									},
									"src": "1036:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1280:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1294:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1318:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1310:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1310:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1294:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1290:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1322:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1371:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1363:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1363:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1363:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1343:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1343:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1336:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1413:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1394:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1394:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1126:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1266:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1258:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:0:0"
									},
									"scope": 147,
									"src": "1246:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1542:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1552:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1552:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1552:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1575:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1439:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1530:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:0"
									},
									"src": "1521:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1714:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1731:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1724:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1589:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1668:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:9:0"
									},
									"scope": 147,
									"src": "1659:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1862:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1887:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1887:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1876:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1872:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1901:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1922:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1915:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1750:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1826:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:0"
									},
									"scope": 147,
									"src": "1817:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2368:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2405:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2397:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2397:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2397:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2378:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1985:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2358:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2358:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2358:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:0"
									},
									"scope": 147,
									"src": "2314:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2634:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2648:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2660:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2660:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2644:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2672:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2721:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2713:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2713:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2713:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2693:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2693:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2686:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2763:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2744:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2744:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2421:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2624:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2624:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2573:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2599:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2591:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:0"
									},
									"scope": 147,
									"src": "2564:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2996:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3014:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "3006:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3006:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3025:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3041:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3050:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3041:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3041:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3104:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3073:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3068:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2785:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2942:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2961:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2996:0:0"
									},
									"scope": 147,
									"src": "2933:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "684:2438:0",
							"usedErrors": [
								13,
								18
							]
						}
					],
					"src": "102:3021:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts t-rex/roles/AgentRole.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/AgentRole.sol",
					"exportedSymbols": {
						"AgentRole": [
							282
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"Roles": [
							371
						]
					},
					"id": 283,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 148,
							"src": "3843:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/roles/Roles.sol",
							"file": "./Roles.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 372,
							"src": "3897:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 183,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "3950:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 184,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "3954:6:2",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "3950:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"3942:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "3942:7:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "3942:19:2"
								}
							],
							"canonicalName": "AgentRole",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								147,
								177
							],
							"name": "AgentRole",
							"nameLocation": "3929:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 186,
										"name": "Roles",
										"nameLocations": [
											"3974:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 371,
										"src": "3974:5:2"
									},
									"nodeType": "UsingForDirective",
									"src": "3968:27:2",
									"typeName": {
										"id": 188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 187,
											"name": "Roles.Role",
											"nameLocations": [
												"3984:5:2",
												"3990:4:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "3984:10:2"
										},
										"referencedDeclaration": 290,
										"src": "3984:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_agents",
									"nameLocation": "4020:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "4001:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$290_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "Roles.Role",
											"nameLocations": [
												"4001:5:2",
												"4007:4:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "4001:10:2"
										},
										"referencedDeclaration": 290,
										"src": "4001:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5",
									"id": 196,
									"name": "AgentAdded",
									"nameLocation": "4040:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4067:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4051:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4050:24:2"
									},
									"src": "4034:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b",
									"id": 200,
									"name": "AgentRemoved",
									"nameLocation": "4086:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4115:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4099:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4098:24:2"
									},
									"src": "4080:43:2"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "4150:106:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 204,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4176:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4180:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4176:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 203,
																"name": "isAgent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "4168:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4168:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204167656e7420726f6c65",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4189:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															},
															"value": "AgentRole: caller does not have the Agent role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4160:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "4160:78:2"
											},
											{
												"id": 210,
												"nodeType": "PlaceholderStatement",
												"src": "4248:1:2"
											}
										]
									},
									"id": 212,
									"name": "onlyAgent",
									"nameLocation": "4138:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4147:2:2"
									},
									"src": "4129:127:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4313:143:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4331:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4349:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4341:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 221,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4341:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4341:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4331:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4353:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4323:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4323:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "4323:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4409:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 229,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4397:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$290_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4405:3:2",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "4397:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$290_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$290_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "4397:19:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 236,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4442:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "AgentAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "4431:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "4426:23:2"
											}
										]
									},
									"functionSelector": "84e79842",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 216,
												"name": "onlyOwner",
												"nameLocations": [
													"4303:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4303:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4303:9:2"
										}
									],
									"name": "addAgent",
									"nameLocation": "4271:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4288:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4280:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4279:16:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4313:0:2"
									},
									"scope": 282,
									"src": "4262:194:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "4516:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4534:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4552:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4544:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 249,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4544:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4544:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4534:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4556:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4526:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "4526:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 260,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4615:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 257,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4600:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$290_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4608:6:2",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "4600:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$290_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$290_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4600:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "4600:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 264,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4650:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 263,
														"name": "AgentRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "4637:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4637:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "4632:25:2"
											}
										]
									},
									"functionSelector": "97a6278e",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 245,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 244,
												"name": "onlyOwner",
												"nameLocations": [
													"4506:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4506:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4506:9:2"
										}
									],
									"name": "removeAgent",
									"nameLocation": "4471:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4491:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4483:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:16:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4516:0:2"
									},
									"scope": 282,
									"src": "4462:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4730:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4759:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 275,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$290_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:3:2",
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 370,
														"src": "4747:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$290_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$290_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 274,
												"id": 279,
												"nodeType": "Return",
												"src": "4740:26:2"
											}
										]
									},
									"functionSelector": "1ffbb064",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAgent",
									"nameLocation": "4679:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4686:16:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4724:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4724:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:6:2"
									},
									"scope": 282,
									"src": "4670:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 283,
							"src": "3920:855:2",
							"usedErrors": [
								13,
								18
							]
						}
					],
					"src": "3818:958:2"
				},
				"id": 2
			},
			"contracts t-rex/roles/Roles.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							371
						]
					},
					"id": 372,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roles",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 285,
								"nodeType": "StructuredDocumentation",
								"src": "3843:82:3",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 371,
							"linearizedBaseContracts": [
								371
							],
							"name": "Roles",
							"nameLocation": "3934:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 290,
									"members": [
										{
											"constant": false,
											"id": 289,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "3993:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "3968:31:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 288,
												"keyType": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3968:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3987:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "3953:4:3",
									"nodeType": "StructDefinition",
									"scope": 371,
									"src": "3946:60:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4135:117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4153:19:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "4158:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "4164:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "4154:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$290_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4174:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4145:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "4145:63:3"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 308,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "4218:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4223:6:3",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 289,
															"src": "4218:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 312,
														"indexExpression": {
															"id": 310,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4230:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4218:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4241:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4218:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "4218:27:3"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4012:60:3",
										"text": " @dev Give an account access to this role."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "4086:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4103:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4090:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "Role",
														"nameLocations": [
															"4090:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "4090:4:3"
													},
													"referencedDeclaration": 290,
													"src": "4090:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4117:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4109:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:36:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4135:0:3"
									},
									"scope": 371,
									"src": "4077:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "4388:119:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 328,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4410:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 329,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "4416:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 327,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "4406:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$290_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4406:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4426:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4398:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "4398:64:3"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 334,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4472:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4477:6:3",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 289,
															"src": "4472:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 338,
														"indexExpression": {
															"id": 336,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4472:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4495:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4472:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "4472:28:3"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4258:64:3",
										"text": " @dev Remove an account's access to this role."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "4336:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4356:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4343:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 319,
														"name": "Role",
														"nameLocations": [
															"4343:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "4343:4:3"
													},
													"referencedDeclaration": 290,
													"src": "4343:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4370:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "4362:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:36:3"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:3"
									},
									"scope": 371,
									"src": "4327:180:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4674:122:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "4692:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4711:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4703:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4703:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4703:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4692:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4715:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4684:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4684:68:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 364,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4769:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4774:6:3",
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "4769:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 367,
													"indexExpression": {
														"id": 366,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4781:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4769:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 353,
												"id": 368,
												"nodeType": "Return",
												"src": "4762:27:3"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "4513:78:3",
										"text": " @dev Check if an account has this role.\n @return bool"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "4605:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4622:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4609:17:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 346,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 345,
														"name": "Role",
														"nameLocations": [
															"4609:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "4609:4:3"
													},
													"referencedDeclaration": 290,
													"src": "4609:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$290_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4608:36:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4668:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4668:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:6:3"
									},
									"scope": 371,
									"src": "4596:200:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 372,
							"src": "3926:872:3",
							"usedErrors": []
						}
					],
					"src": "3818:981:3"
				},
				"id": 3
			}
		}
	}
}