{
	"id": "a49a6cf4332051a6ba6a8cafe98c63b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\nimport \"../../roles/AgentRoleUpgradeable.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\nimport \"../storage/IRSStorage.sol\";\n\ncontract IdentityRegistryStorage is IIdentityRegistryStorage, AgentRoleUpgradeable, IRSStorage {\n\n    function init() external initializer {\n        __Ownable_init(msg.sender);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-addIdentityToStorage}.\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external override onlyAgent {\n        require(\n            _userAddress != address(0)\n            && address(_identity) != address(0)\n        , \"invalid argument - zero address\");\n        require(address(_identities[_userAddress].identityContract) == address(0), \"address stored already\");\n        _identities[_userAddress].identityContract = _identity;\n        _identities[_userAddress].investorCountry = _country;\n        emit IdentityStored(_userAddress, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-modifyStoredIdentity}.\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {\n        require(\n            _userAddress != address(0)\n            && address(_identity) != address(0)\n        , \"invalid argument - zero address\");\n        require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\");\n        IIdentity oldIdentity = _identities[_userAddress].identityContract;\n        _identities[_userAddress].identityContract = _identity;\n        emit IdentityModified(oldIdentity, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-modifyStoredInvestorCountry}.\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external override onlyAgent {\n        require(_userAddress != address(0), \"invalid argument - zero address\");\n        require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\");\n        _identities[_userAddress].investorCountry = _country;\n        emit CountryModified(_userAddress, _country);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-removeIdentityFromStorage}.\n     */\n    function removeIdentityFromStorage(address _userAddress) external override onlyAgent {\n        require(_userAddress != address(0), \"invalid argument - zero address\");\n        require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\");\n        IIdentity oldIdentity = _identities[_userAddress].identityContract;\n        delete _identities[_userAddress];\n        emit IdentityUnstored(_userAddress, oldIdentity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-bindIdentityRegistry}.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external override {\n        require(_identityRegistry != address(0), \"invalid argument - zero address\");\n        require(_identityRegistries.length < 300, \"cannot bind more than 300 IR to 1 IRS\");\n        addAgent(_identityRegistry);\n        _identityRegistries.push(_identityRegistry);\n        emit IdentityRegistryBound(_identityRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-unbindIdentityRegistry}.\n     */\n    function unbindIdentityRegistry(address _identityRegistry) external override {\n        require(_identityRegistry != address(0), \"invalid argument - zero address\");\n        require(_identityRegistries.length > 0, \"identity registry is not stored\");\n        uint256 length = _identityRegistries.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_identityRegistries[i] == _identityRegistry) {\n                _identityRegistries[i] = _identityRegistries[length - 1];\n                _identityRegistries.pop();\n                break;\n            }\n        }\n        removeAgent(_identityRegistry);\n        emit IdentityRegistryUnbound(_identityRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-linkedIdentityRegistries}.\n     */\n    function linkedIdentityRegistries() external view override returns (address[] memory) {\n        return _identityRegistries;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-storedIdentity}.\n     */\n    function storedIdentity(address _userAddress) external view override returns (IIdentity) {\n        return _identities[_userAddress].identityContract;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-storedInvestorCountry}.\n     */\n    function storedInvestorCountry(address _userAddress) external view override returns (uint16) {\n        return _identities[_userAddress].investorCountry;\n    }\n}\n"
			},
			"contracts t-rex/registry/storage/IRSStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ncontract IRSStorage {\n    /// @dev struct containing the identity contract and the country of the user\n    struct Identity {\n        IIdentity identityContract;\n        uint16 investorCountry;\n    }\n    /// @dev mapping between a user address and the corresponding identity\n    mapping(address => Identity) internal _identities;\n\n    /// @dev array of Identity Registries linked to this storage\n    address[] internal _identityRegistries;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}"
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n\n    /// events\n\n    /**\n     *  this event is emitted when an Identity is registered into the storage contract.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityStored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the storage contract.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityUnstored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityModified(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryModified(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  this event is emitted when an Identity Registry is bound to the storage contract\n     *  the event is emitted by the 'addIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry added\n     */\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    /**\n     *  this event is emitted when an Identity Registry is unbound from the storage contract\n     *  the event is emitted by the 'removeIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry removed\n     */\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    /**\n     *  @dev adds an identity contract corresponding to a user address in the storage.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityStored` event\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the storage.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityUnstored` event\n     */\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryModified` event\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityModified` event\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n     *  cannot bind more than 300 IR to 1 IRS\n     *  @param _identityRegistry The identity registry address to add.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n     *  @param _identityRegistry The identity registry address to remove.\n     */\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev Returns the identity registries linked to the storage contract\n     */\n    function linkedIdentityRegistries() external view returns (address[] memory);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedIdentity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedInvestorCountry(address _userAddress) external view returns (uint16);\n}\n"
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\nimport \"./Roles.sol\";\n\ncontract AgentRoleUpgradeable is OwnableUpgradeable {\n    using Roles for Roles.Role;\n\n    Roles.Role private _agents;\n\n    event AgentAdded(address indexed _agent);\n    event AgentRemoved(address indexed _agent);\n\n    modifier onlyAgent() {\n        require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\");\n        _;\n    }\n\n    function addAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.add(_agent);\n        emit AgentAdded(_agent);\n    }\n\n    function removeAgent(address _agent) public onlyOwner {\n        require(_agent != address(0), \"invalid argument - zero address\");\n        _agents.remove(_agent);\n        emit AgentRemoved(_agent);\n    }\n\n    function isAgent(address _agent) public view returns (bool) {\n        return _agents.has(_agent);\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"contracts t-rex/roles/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping(address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\n// import {Initializable} from \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is  ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.17;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.17;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol": {
				"IdentityRegistryStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "addAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "isAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "removeAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"details": "See {IIdentityRegistryStorage-addIdentityToStorage}."
							},
							"bindIdentityRegistry(address)": {
								"details": "See {IIdentityRegistryStorage-bindIdentityRegistry}."
							},
							"linkedIdentityRegistries()": {
								"details": "See {IIdentityRegistryStorage-linkedIdentityRegistries}."
							},
							"modifyStoredIdentity(address,address)": {
								"details": "See {IIdentityRegistryStorage-modifyStoredIdentity}."
							},
							"modifyStoredInvestorCountry(address,uint16)": {
								"details": "See {IIdentityRegistryStorage-modifyStoredInvestorCountry}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeIdentityFromStorage(address)": {
								"details": "See {IIdentityRegistryStorage-removeIdentityFromStorage}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"storedIdentity(address)": {
								"details": "See {IIdentityRegistryStorage-storedIdentity}."
							},
							"storedInvestorCountry(address)": {
								"details": "See {IIdentityRegistryStorage-storedInvestorCountry}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unbindIdentityRegistry(address)": {
								"details": "See {IIdentityRegistryStorage-unbindIdentityRegistry}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4044:8589  contract IdentityRegistryStorage is IIdentityRegistryStorage, AgentRoleUpgradeable, IRSStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4044:8589  contract IdentityRegistryStorage is IIdentityRegistryStorage, AgentRoleUpgradeable, IRSStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97a6278e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xcf191bcd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xcf191bcd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe805cf86\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x97a6278e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9f3418d5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa53410dd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbf9eb959\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x7988d3a5\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x7988d3a5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x84e79842\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x97a012f7\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x1ffbb064\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x690a49f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x727e13bc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":567:581   */\n      swap1\n      iszero\n        /* \"#utility.yul\":560:582   */\n      iszero\n        /* \"#utility.yul\":542:583   */\n      dup2\n      mstore\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":515:533   */\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6711:7115  function bindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_28\n      tag_32\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8429:8587  function storedInvestorCountry(address _userAddress) external view override returns (uint16) {... */\n    tag_6:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8539:8564  _identities[_userAddress] */\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8514:8520  uint16 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8539:8564  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8539:8550  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8539:8564  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8539:8580  _identities[_userAddress].investorCountry */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8429:8587  function storedInvestorCountry(address _userAddress) external view override returns (uint16) {... */\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":768:774   */\n      0xffff\n        /* \"#utility.yul\":756:775   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":738:776   */\n      dup2\n      mstore\n        /* \"#utility.yul\":726:728   */\n      0x20\n        /* \"#utility.yul\":711:729   */\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8429:8587  function storedInvestorCountry(address _userAddress) external view override returns (uint16) {... */\n      tag_26\n        /* \"#utility.yul\":594:782   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8185:8340  function storedIdentity(address _userAddress) external view override returns (IIdentity) {... */\n    tag_7:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8291:8316  _identities[_userAddress] */\n      swap1\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8263:8272  IIdentity */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8291:8316  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8291:8302  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8291:8316  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8291:8333  _identities[_userAddress].identityContract */\n      sload\n      and\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8185:8340  function storedIdentity(address _userAddress) external view override returns (IIdentity) {... */\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1000   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":950:1001   */\n      dup2\n      mstore\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8185:8340  function storedIdentity(address _userAddress) external view override returns (IIdentity) {... */\n      tag_26\n        /* \"#utility.yul\":787:1007   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_8:\n      tag_28\n      tag_44\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump(tag_38)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7205:7882  function unbindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_10:\n      tag_28\n      tag_51\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_11:\n      tag_28\n      tag_54\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5655:6072  function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n    tag_12:\n      tag_28\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4314:4909  function addIdentityToStorage(... */\n    tag_13:\n      tag_28\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7974:8103  function linkedIdentityRegistries() external view override returns (address[] memory) {... */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6165:6623  function removeIdentityFromStorage(address _userAddress) external override onlyAgent {... */\n    tag_15:\n      tag_28\n      tag_69\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4146:4226  function init() external initializer {... */\n    tag_16:\n      tag_28\n      tag_72\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4997:5560  function modifyStoredIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n    tag_17:\n      tag_28\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_28\n      tag_78\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_25:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      tag_81\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      dup2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4792:4798  _agent */\n      dup4\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4791  _agents.has */\n      tag_82\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      jump\t// in\n    tag_81:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4773:4799  return _agents.has(_agent) */\n      swap3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6711:7115  function bindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6804:6835  _identityRegistry != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6796:6871  require(_identityRegistry != address(0), \"invalid argument - zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6889:6908  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6889:6915  _identityRegistries.length */\n      sload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6918:6921  300 */\n      0x012c\n      gt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6881:6963  require(_identityRegistries.length < 300, \"cannot bind more than 300 IR to 1 IRS\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3825:3827   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6881:6963  require(_identityRegistries.length < 300, \"cannot bind more than 300 IR to 1 IRS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3807:3828   */\n      mstore\n        /* \"#utility.yul\":3864:3866   */\n      0x25\n        /* \"#utility.yul\":3844:3862   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3837:3867   */\n      mstore\n        /* \"#utility.yul\":3903:3937   */\n      0x63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20\n        /* \"#utility.yul\":3883:3901   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3876:3938   */\n      mstore\n      shl(0xd8, 0x3120495253)\n        /* \"#utility.yul\":3954:3972   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3947:3982   */\n      mstore\n        /* \"#utility.yul\":3999:4018   */\n      0x84\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6881:6963  require(_identityRegistries.length < 300, \"cannot bind more than 300 IR to 1 IRS\") */\n      tag_85\n        /* \"#utility.yul\":3623:4024   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6881:6963  require(_identityRegistries.length < 300, \"cannot bind more than 300 IR to 1 IRS\") */\n    tag_87:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6973:7000  addAgent(_identityRegistry) */\n      tag_90\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6982:6999  _identityRegistry */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6973:6981  addAgent */\n      tag_45\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6973:7000  addAgent(_identityRegistry) */\n      jump\t// in\n    tag_90:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7010:7029  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7010:7053  _identityRegistries.push(_identityRegistry) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7068:7108  IdentityRegistryBound(_identityRegistry) */\n      mload(0x40)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7010:7053  _identityRegistries.push(_identityRegistry) */\n      swap1\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7068:7108  IdentityRegistryBound(_identityRegistry) */\n      0x500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb\n      swap2\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6711:7115  function bindIdentityRegistry(address _identityRegistry) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3256:3257  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3247  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4364:4384  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_103:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      tag_105\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4437  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4442:4448  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4441  _agents.add */\n      tag_106\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      jump\t// in\n    tag_105:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4464:4482  AgentAdded(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xf68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7205:7882  function unbindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7300:7331  _identityRegistry != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7292:7367  require(_identityRegistry != address(0), \"invalid argument - zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_111:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7385:7404  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7385:7411  _identityRegistries.length */\n      sload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7377:7451  require(_identityRegistries.length > 0, \"identity registry is not stored\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4231:4233   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7377:7451  require(_identityRegistries.length > 0, \"identity registry is not stored\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4213:4234   */\n      mstore\n        /* \"#utility.yul\":4270:4272   */\n      0x1f\n        /* \"#utility.yul\":4250:4268   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4243:4273   */\n      mstore\n        /* \"#utility.yul\":4309:4342   */\n      0x6964656e74697479207265676973747279206973206e6f742073746f72656400\n        /* \"#utility.yul\":4289:4307   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4282:4343   */\n      mstore\n        /* \"#utility.yul\":4360:4378   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7377:7451  require(_identityRegistries.length > 0, \"identity registry is not stored\") */\n      tag_85\n        /* \"#utility.yul\":4029:4384   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7377:7451  require(_identityRegistries.length > 0, \"identity registry is not stored\") */\n    tag_113:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7478:7497  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7478:7504  _identityRegistries.length */\n      sload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7461:7475  uint256 length */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7514:7779  for (uint256 i = 0; i < length; i++) {... */\n    tag_116:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7538:7544  length */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7534:7535  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7534:7544  i < length */\n      lt\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7514:7779  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7595:7612  _identityRegistry */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7569:7612  _identityRegistries[i] == _identityRegistry */\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7569:7588  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7589:7590  i */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7569:7591  _identityRegistries[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7569:7612  _identityRegistries[i] == _identityRegistry */\n      sub\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7565:7769  if (_identityRegistries[i] == _identityRegistry) {... */\n      tag_123\n      jumpi\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7657:7676  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7677:7687  length - 1 */\n      tag_124\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7686:7687  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7677:7683  length */\n      dup5\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7677:7687  length - 1 */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7657:7688  _identityRegistries[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_127\n      tag_121\n      jump\t// in\n    tag_127:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7632:7651  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7632:7654  _identityRegistries[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7657:7688  _identityRegistries[length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7652:7653  i */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7632:7654  _identityRegistries[i] */\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_130\n      tag_121\n      jump\t// in\n    tag_130:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7632:7688  _identityRegistries[i] = _identityRegistries[length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7706:7725  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7706:7731  _identityRegistries.pop() */\n      dup1\n      sload\n      dup1\n      tag_133\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7749:7754  break */\n      jump(tag_117)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7565:7769  if (_identityRegistries[i] == _identityRegistry) {... */\n    tag_123:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7546:7549  i++ */\n      dup1\n      tag_136\n      dup2\n      tag_137\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7514:7779  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_116)\n    tag_117:\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7788:7818  removeAgent(_identityRegistry) */\n      tag_138\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7800:7817  _identityRegistry */\n      dup3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7788:7799  removeAgent */\n      tag_55\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7788:7818  removeAgent(_identityRegistry) */\n      jump\t// in\n    tag_138:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7833:7875  IdentityRegistryUnbound(_identityRegistry) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7282:7882  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7205:7882  function unbindIdentityRegistry(address _identityRegistry) external override {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4567:4587  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_142:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      tag_144\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4640  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4648:4654  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4647  _agents.remove */\n      tag_145\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      jump\t// in\n    tag_144:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4670:4690  AgentRemoved(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5655:6072  function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n    tag_59:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_147\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_25\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_147:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_150\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5777:5803  _userAddress != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5769:5839  require(_userAddress != address(0), \"invalid argument - zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5865:5890  _identities[_userAddress] */\n      dup3\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5920:5921  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5865:5890  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5865:5876  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5865:5890  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5865:5907  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5849:5949  require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_156\n      jump\t// in\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:5984  _identities[_userAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:5970  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:5984  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:6011  _identities[_userAddress].investorCountry = _country */\n      dup1\n      sload\n      not(shl(0xa0, 0xffff))\n      and\n      shl(0xa0, 0x01)\n      0xffff\n      dup8\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6026:6065  CountryModified(_userAddress, _country) */\n      swap1\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:6011  _identities[_userAddress].investorCountry = _country */\n      swap1\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5959:5984  _identities[_userAddress] */\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6026:6065  CountryModified(_userAddress, _country) */\n      0x20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf\n      swap2\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5655:6072  function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external override onlyAgent {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4314:4909  function addIdentityToStorage(... */\n    tag_63:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_158\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_25\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_158:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_150\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4493:4519  _userAddress != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4493:4567  _userAddress != address(0)... */\n      tag_162\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4535:4567  address(_identity) != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4493:4567  _userAddress != address(0)... */\n    tag_162:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4472:4612  require(... */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4638:4663  _identities[_userAddress] */\n      dup4\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4693:4694  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4638:4663  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4638:4649  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4638:4663  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4638:4680  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4630:4695  address(_identities[_userAddress].identityContract) == address(0) */\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4622:4722  require(address(_identities[_userAddress].identityContract) == address(0), \"address stored already\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6026:6028   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4622:4722  require(address(_identities[_userAddress].identityContract) == address(0), \"address stored already\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6008:6029   */\n      mstore\n        /* \"#utility.yul\":6065:6067   */\n      0x16\n        /* \"#utility.yul\":6045:6063   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6038:6068   */\n      mstore\n      shl(0x50, 0x616464726573732073746f72656420616c7265616479)\n        /* \"#utility.yul\":6084:6102   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6077:6129   */\n      mstore\n        /* \"#utility.yul\":6146:6164   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4622:4722  require(address(_identities[_userAddress].identityContract) == address(0), \"address stored already\") */\n      tag_85\n        /* \"#utility.yul\":5824:6170   */\n      jump\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4622:4722  require(address(_identities[_userAddress].identityContract) == address(0), \"address stored already\") */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4732:4757  _identities[_userAddress] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4732:4743  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4732:4757  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4732:4786  _identities[_userAddress].identityContract = _identity */\n      dup1\n      sload\n      swap5\n      dup8\n      and\n      not(sub(shl(0xb0, 0x01), 0x01))\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4796:4848  _identities[_userAddress].investorCountry = _country */\n      swap1\n      swap6\n      and\n      dup6\n      or\n      shl(0xa0, 0x01)\n      0xffff\n      dup9\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4863:4902  IdentityStored(_userAddress, _identity) */\n      mload\n      0x30dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4732:4757  _identities[_userAddress] */\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4863:4902  IdentityStored(_userAddress, _identity) */\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4314:4909  function addIdentityToStorage(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7974:8103  function linkedIdentityRegistries() external view override returns (address[] memory) {... */\n    tag_65:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8042:8058  address[] memory */\n      0x60\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8077:8096  _identityRegistries */\n      0x02\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":8070:8096  return _identityRegistries */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":7974:8103  function linkedIdentityRegistries() external view override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6165:6623  function removeIdentityFromStorage(address _userAddress) external override onlyAgent {... */\n    tag_70:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_172\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_25\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_172:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_150\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6268:6294  _userAddress != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6260:6330  require(_userAddress != address(0), \"invalid argument - zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6356:6381  _identities[_userAddress] */\n      dup2\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6411:6412  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6356:6381  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6356:6367  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6356:6381  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6356:6398  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6340:6440  require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_156\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6499  _identities[_userAddress] */\n      dup1\n      dup3\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6450:6471  IIdentity oldIdentity */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6499  _identities[_userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6485  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6499  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6516  _identities[_userAddress].identityContract */\n      dup1\n      sload\n      not(sub(shl(0xb0, 0x01), 0x01))\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6526:6558  delete _identities[_userAddress] */\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6573:6616  IdentityUnstored(_userAddress, oldIdentity) */\n      swap1\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6516  _identities[_userAddress].identityContract */\n      swap4\n      and\n      swap3\n      dup4\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6474:6499  _identities[_userAddress] */\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6573:6616  IdentityUnstored(_userAddress, oldIdentity) */\n      0xca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b\n      swap2\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6250:6623  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":6165:6623  function removeIdentityFromStorage(address _userAddress) external override onlyAgent {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4146:4226  function init() external initializer {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_184\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_187:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4193:4219  __Ownable_init(msg.sender) */\n      tag_189\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4208:4218  msg.sender */\n      caller\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4193:4207  __Ownable_init */\n      tag_190\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4193:4219  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6328:6378   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":6316:6318   */\n      0x20\n        /* \"#utility.yul\":6301:6319   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4146:4226  function init() external initializer {... */\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4997:5560  function modifyStoredIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n    tag_76:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      tag_195\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4209:4219  msg.sender */\n      caller\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4208  isAgent */\n      tag_25\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4201:4220  isAgent(msg.sender) */\n      jump\t// in\n    tag_195:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4193:4271  require(isAgent(msg.sender), \"AgentRole: caller does not have the Agent role\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_150\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5129:5155  _userAddress != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5129:5203  _userAddress != address(0)... */\n      tag_199\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5171:5203  address(_identity) != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5129:5203  _userAddress != address(0)... */\n    tag_199:\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5108:5248  require(... */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5274:5299  _identities[_userAddress] */\n      dup3\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5329:5330  0 */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5274:5299  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5274:5285  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5274:5299  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5274:5316  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5258:5358  require(address(_identities[_userAddress].identityContract) != address(0), \"address not stored yet\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_156\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5417  _identities[_userAddress] */\n      dup1\n      dup4\n      and\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5368:5389  IIdentity oldIdentity */\n      0x00\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5417  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5403  _identities */\n      0x01\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5417  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5434  _identities[_userAddress].identityContract */\n      dup1\n      sload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5444:5498  _identities[_userAddress].identityContract = _identity */\n      dup6\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5513:5553  IdentityModified(oldIdentity, _identity) */\n      swap2\n      mload\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5434  _identities[_userAddress].identityContract */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5444:5498  _identities[_userAddress].identityContract = _identity */\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5392:5434  _identities[_userAddress].identityContract */\n      dup4\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5513:5553  IdentityModified(oldIdentity, _identity) */\n      0x556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808\n      swap2\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5368:5389  IIdentity oldIdentity */\n      swap1\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5513:5553  IdentityModified(oldIdentity, _identity) */\n      log3\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":5098:5560  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":4997:5560  function modifyStoredIdentity(address _userAddress, IIdentity _identity) external override onlyAgent {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3499:3521  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3572:3573  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1001   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      tag_85\n        /* \"#utility.yul\":787:1007   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3614:3622  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3613  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_82:\n        /* \"contracts t-rex/roles/Roles.sol\":4668:4672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4692:4713  account != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6591:6593   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6573:6594   */\n      mstore\n        /* \"#utility.yul\":6630:6632   */\n      0x22\n        /* \"#utility.yul\":6610:6628   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6603:6633   */\n      mstore\n        /* \"#utility.yul\":6669:6703   */\n      0x526f6c65733a206163636f756e7420697320746865207a65726f206164647265\n        /* \"#utility.yul\":6649:6667   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6642:6704   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":6720:6738   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6713:6745   */\n      mstore\n        /* \"#utility.yul\":6762:6781   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_85\n        /* \"#utility.yul\":6389:6787   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n    tag_211:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4780  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2668:2830  function _checkOwner() internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2750  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2723:2824  if (owner() != _msgSender()) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1001   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_85\n        /* \"#utility.yul\":787:1007   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3951:3970  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3881  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:4032  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n    tag_106:\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      tag_224\n        /* \"contracts t-rex/roles/Roles.sol\":4158:4162  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4164:4171  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4157  has */\n      tag_82\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      jump\t// in\n    tag_224:\n        /* \"contracts t-rex/roles/Roles.sol\":4153:4172  !has(role, account) */\n      iszero\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6994:6996   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6976:6997   */\n      mstore\n        /* \"#utility.yul\":7033:7035   */\n      0x1f\n        /* \"#utility.yul\":7013:7031   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7006:7036   */\n      mstore\n        /* \"#utility.yul\":7072:7105   */\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n        /* \"#utility.yul\":7052:7070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7045:7106   */\n      mstore\n        /* \"#utility.yul\":7123:7141   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_85\n        /* \"#utility.yul\":6792:7147   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4229  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4241:4245  true */\n      0x01\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n    tag_145:\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      tag_230\n        /* \"contracts t-rex/roles/Roles.sol\":4410:4414  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4416:4423  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4409  has */\n      tag_82\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      jump\t// in\n    tag_230:\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7354:7356   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7336:7357   */\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x21\n        /* \"#utility.yul\":7373:7391   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7366:7396   */\n      mstore\n        /* \"#utility.yul\":7432:7466   */\n      0x526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c\n        /* \"#utility.yul\":7412:7430   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7405:7467   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":7483:7501   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7476:7507   */\n      mstore\n        /* \"#utility.yul\":7524:7543   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_85\n        /* \"#utility.yul\":7152:7549   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4495:4500  false */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4500  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1857:1984  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1964:1976  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1963  __Ownable_init_unchained */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1990:2225  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_24:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_261:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_262\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_254\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":386:391   */\n      swap4\n        /* \"#utility.yul\":150:397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1220:1379   */\n    tag_255:\n        /* \"#utility.yul\":1287:1307   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1347:1353   */\n      0xffff\n        /* \"#utility.yul\":1336:1354   */\n      dup2\n      and\n        /* \"#utility.yul\":1326:1355   */\n      dup2\n      eq\n        /* \"#utility.yul\":1316:1373   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":1369:1370   */\n      0x00\n        /* \"#utility.yul\":1366:1367   */\n      dup1\n        /* \"#utility.yul\":1359:1371   */\n      revert\n        /* \"#utility.yul\":1316:1373   */\n    tag_268:\n        /* \"#utility.yul\":1220:1379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1703   */\n    tag_58:\n        /* \"#utility.yul\":1451:1457   */\n      0x00\n        /* \"#utility.yul\":1459:1465   */\n      dup1\n        /* \"#utility.yul\":1512:1514   */\n      0x40\n        /* \"#utility.yul\":1500:1509   */\n      dup4\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1487:1510   */\n      sub\n        /* \"#utility.yul\":1483:1515   */\n      slt\n        /* \"#utility.yul\":1480:1532   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1525:1526   */\n      dup1\n        /* \"#utility.yul\":1518:1530   */\n      revert\n        /* \"#utility.yul\":1480:1532   */\n    tag_270:\n        /* \"#utility.yul\":1567:1576   */\n      dup3\n        /* \"#utility.yul\":1554:1577   */\n      calldataload\n        /* \"#utility.yul\":1586:1617   */\n      tag_271\n        /* \"#utility.yul\":1611:1616   */\n      dup2\n        /* \"#utility.yul\":1586:1617   */\n      tag_254\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1636:1641   */\n      swap2\n      pop\n        /* \"#utility.yul\":1660:1697   */\n      tag_272\n        /* \"#utility.yul\":1693:1695   */\n      0x20\n        /* \"#utility.yul\":1678:1696   */\n      dup5\n      add\n        /* \"#utility.yul\":1660:1697   */\n      tag_255\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1650:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1384:1703   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1708:2185   */\n    tag_62:\n        /* \"#utility.yul\":1801:1807   */\n      0x00\n        /* \"#utility.yul\":1809:1815   */\n      dup1\n        /* \"#utility.yul\":1817:1823   */\n      0x00\n        /* \"#utility.yul\":1870:1872   */\n      0x60\n        /* \"#utility.yul\":1858:1867   */\n      dup5\n        /* \"#utility.yul\":1849:1856   */\n      dup7\n        /* \"#utility.yul\":1845:1868   */\n      sub\n        /* \"#utility.yul\":1841:1873   */\n      slt\n        /* \"#utility.yul\":1838:1890   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1886:1887   */\n      0x00\n        /* \"#utility.yul\":1883:1884   */\n      dup1\n        /* \"#utility.yul\":1876:1888   */\n      revert\n        /* \"#utility.yul\":1838:1890   */\n    tag_274:\n        /* \"#utility.yul\":1925:1934   */\n      dup4\n        /* \"#utility.yul\":1912:1935   */\n      calldataload\n        /* \"#utility.yul\":1944:1975   */\n      tag_275\n        /* \"#utility.yul\":1969:1974   */\n      dup2\n        /* \"#utility.yul\":1944:1975   */\n      tag_254\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1994:1999   */\n      swap3\n      pop\n        /* \"#utility.yul\":2051:2053   */\n      0x20\n        /* \"#utility.yul\":2036:2054   */\n      dup5\n      add\n        /* \"#utility.yul\":2023:2055   */\n      calldataload\n        /* \"#utility.yul\":2064:2097   */\n      tag_276\n        /* \"#utility.yul\":2023:2055   */\n      dup2\n        /* \"#utility.yul\":2064:2097   */\n      tag_254\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2116:2123   */\n      swap2\n      pop\n        /* \"#utility.yul\":2142:2179   */\n      tag_277\n        /* \"#utility.yul\":2175:2177   */\n      0x40\n        /* \"#utility.yul\":2160:2178   */\n      dup6\n      add\n        /* \"#utility.yul\":2142:2179   */\n      tag_255\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2132:2179   */\n      swap1\n      pop\n        /* \"#utility.yul\":1708:2185   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2190:2848   */\n    tag_67:\n        /* \"#utility.yul\":2361:2363   */\n      0x20\n        /* \"#utility.yul\":2413:2434   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2483:2496   */\n      dup3\n      mload\n        /* \"#utility.yul\":2386:2404   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2505:2527   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2332:2336   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2361:2363   */\n      swap1\n        /* \"#utility.yul\":2584:2599   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2558:2560   */\n      0x40\n        /* \"#utility.yul\":2543:2561   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2332:2336   */\n      dup5\n        /* \"#utility.yul\":2627:2822   */\n    tag_279:\n        /* \"#utility.yul\":2641:2647   */\n      dup2\n        /* \"#utility.yul\":2638:2639   */\n      dup2\n        /* \"#utility.yul\":2635:2648   */\n      lt\n        /* \"#utility.yul\":2627:2822   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2706:2719   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2702:2741   */\n      and\n        /* \"#utility.yul\":2690:2742   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2797:2812   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2762:2774   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2738:2739   */\n      0x01\n        /* \"#utility.yul\":2656:2665   */\n      add\n        /* \"#utility.yul\":2627:2822   */\n      jump(tag_279)\n    tag_281:\n      pop\n        /* \"#utility.yul\":2839:2842   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2190:2848   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2853:3258   */\n    tag_75:\n        /* \"#utility.yul\":2938:2944   */\n      0x00\n        /* \"#utility.yul\":2946:2952   */\n      dup1\n        /* \"#utility.yul\":2999:3001   */\n      0x40\n        /* \"#utility.yul\":2987:2996   */\n      dup4\n        /* \"#utility.yul\":2978:2985   */\n      dup6\n        /* \"#utility.yul\":2974:2997   */\n      sub\n        /* \"#utility.yul\":2970:3002   */\n      slt\n        /* \"#utility.yul\":2967:3019   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":3015:3016   */\n      0x00\n        /* \"#utility.yul\":3012:3013   */\n      dup1\n        /* \"#utility.yul\":3005:3017   */\n      revert\n        /* \"#utility.yul\":2967:3019   */\n    tag_283:\n        /* \"#utility.yul\":3054:3063   */\n      dup3\n        /* \"#utility.yul\":3041:3064   */\n      calldataload\n        /* \"#utility.yul\":3073:3104   */\n      tag_284\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3073:3104   */\n      tag_254\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3123:3128   */\n      swap2\n      pop\n        /* \"#utility.yul\":3180:3182   */\n      0x20\n        /* \"#utility.yul\":3165:3183   */\n      dup4\n      add\n        /* \"#utility.yul\":3152:3184   */\n      calldataload\n        /* \"#utility.yul\":3193:3226   */\n      tag_285\n        /* \"#utility.yul\":3152:3184   */\n      dup2\n        /* \"#utility.yul\":3193:3226   */\n      tag_254\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3245:3252   */\n      dup1\n        /* \"#utility.yul\":3235:3252   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2853:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3263:3618   */\n    tag_86:\n        /* \"#utility.yul\":3465:3467   */\n      0x20\n        /* \"#utility.yul\":3447:3468   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3504:3506   */\n      0x1f\n        /* \"#utility.yul\":3484:3502   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3477:3507   */\n      mstore\n        /* \"#utility.yul\":3543:3576   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":3538:3540   */\n      0x40\n        /* \"#utility.yul\":3523:3541   */\n      dup3\n      add\n        /* \"#utility.yul\":3516:3577   */\n      mstore\n        /* \"#utility.yul\":3609:3611   */\n      0x60\n        /* \"#utility.yul\":3594:3612   */\n      add\n      swap1\n        /* \"#utility.yul\":3263:3618   */\n      jump\t// out\n        /* \"#utility.yul\":4389:4516   */\n    tag_121:\n        /* \"#utility.yul\":4450:4460   */\n      0x4e487b71\n        /* \"#utility.yul\":4445:4448   */\n      0xe0\n        /* \"#utility.yul\":4441:4461   */\n      shl\n        /* \"#utility.yul\":4438:4439   */\n      0x00\n        /* \"#utility.yul\":4431:4462   */\n      mstore\n        /* \"#utility.yul\":4481:4485   */\n      0x32\n        /* \"#utility.yul\":4478:4479   */\n      0x04\n        /* \"#utility.yul\":4471:4486   */\n      mstore\n        /* \"#utility.yul\":4505:4509   */\n      0x24\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4495:4510   */\n      revert\n        /* \"#utility.yul\":4521:4648   */\n    tag_256:\n        /* \"#utility.yul\":4582:4592   */\n      0x4e487b71\n        /* \"#utility.yul\":4577:4580   */\n      0xe0\n        /* \"#utility.yul\":4573:4593   */\n      shl\n        /* \"#utility.yul\":4570:4571   */\n      0x00\n        /* \"#utility.yul\":4563:4594   */\n      mstore\n        /* \"#utility.yul\":4613:4617   */\n      0x11\n        /* \"#utility.yul\":4610:4611   */\n      0x04\n        /* \"#utility.yul\":4603:4618   */\n      mstore\n        /* \"#utility.yul\":4637:4641   */\n      0x24\n        /* \"#utility.yul\":4634:4635   */\n      0x00\n        /* \"#utility.yul\":4627:4642   */\n      revert\n        /* \"#utility.yul\":4653:4781   */\n    tag_125:\n        /* \"#utility.yul\":4720:4729   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4741:4752   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4738:4775   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":4755:4773   */\n      tag_81\n      tag_256\n      jump\t// in\n        /* \"#utility.yul\":4786:4913   */\n    tag_134:\n        /* \"#utility.yul\":4847:4857   */\n      0x4e487b71\n        /* \"#utility.yul\":4842:4845   */\n      0xe0\n        /* \"#utility.yul\":4838:4858   */\n      shl\n        /* \"#utility.yul\":4835:4836   */\n      0x00\n        /* \"#utility.yul\":4828:4859   */\n      mstore\n        /* \"#utility.yul\":4878:4882   */\n      0x31\n        /* \"#utility.yul\":4875:4876   */\n      0x04\n        /* \"#utility.yul\":4868:4883   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x24\n        /* \"#utility.yul\":4899:4900   */\n      0x00\n        /* \"#utility.yul\":4892:4907   */\n      revert\n        /* \"#utility.yul\":4918:5053   */\n    tag_137:\n        /* \"#utility.yul\":4957:4960   */\n      0x00\n        /* \"#utility.yul\":4978:4995   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":4975:5018   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4998:5016   */\n      tag_297\n      tag_256\n      jump\t// in\n    tag_297:\n      pop\n        /* \"#utility.yul\":5045:5046   */\n      0x01\n        /* \"#utility.yul\":5034:5047   */\n      add\n      swap1\n        /* \"#utility.yul\":4918:5053   */\n      jump\t// out\n        /* \"#utility.yul\":5058:5468   */\n    tag_150:\n        /* \"#utility.yul\":5260:5262   */\n      0x20\n        /* \"#utility.yul\":5242:5263   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5299:5301   */\n      0x2e\n        /* \"#utility.yul\":5279:5297   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5272:5302   */\n      mstore\n        /* \"#utility.yul\":5338:5372   */\n      0x4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520\n        /* \"#utility.yul\":5333:5335   */\n      0x40\n        /* \"#utility.yul\":5318:5336   */\n      dup3\n      add\n        /* \"#utility.yul\":5311:5373   */\n      mstore\n      shl(0x90, 0x746865204167656e7420726f6c65)\n        /* \"#utility.yul\":5404:5406   */\n      0x60\n        /* \"#utility.yul\":5389:5407   */\n      dup3\n      add\n        /* \"#utility.yul\":5382:5426   */\n      mstore\n        /* \"#utility.yul\":5458:5461   */\n      0x80\n        /* \"#utility.yul\":5443:5462   */\n      add\n      swap1\n        /* \"#utility.yul\":5058:5468   */\n      jump\t// out\n        /* \"#utility.yul\":5473:5819   */\n    tag_156:\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5657:5678   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5714:5716   */\n      0x16\n        /* \"#utility.yul\":5694:5712   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5687:5717   */\n      mstore\n      shl(0x52, 0x1859191c995cdcc81b9bdd081cdd1bdc9959081e595d)\n        /* \"#utility.yul\":5748:5750   */\n      0x40\n        /* \"#utility.yul\":5733:5751   */\n      dup3\n      add\n        /* \"#utility.yul\":5726:5778   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x60\n        /* \"#utility.yul\":5795:5813   */\n      add\n      swap1\n        /* \"#utility.yul\":5473:5819   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201e56b797eba2d2aa3f0c861bf3000b70389b0792d3672cc4f710b0bb973ae3ec64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611177806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806397a6278e11610097578063cf191bcd11610066578063cf191bcd14610279578063e1c7392a1461028c578063e805cf8614610294578063f2fde38b146102a757600080fd5b806397a6278e1461022b5780639f3418d51461023e578063a53410dd14610251578063bf9eb9591461026457600080fd5b80637988d3a5116100d35780637988d3a51461019157806384e79842146101d55780638da5cb5b146101e857806397a012f71461021857600080fd5b80631ffbb06414610105578063690a49f91461012d578063715018a614610142578063727e13bc1461014a575b600080fd5b610118610113366004610ee1565b6102ba565b60405190151581526020015b60405180910390f35b61014061013b366004610ee1565b6102cc565b005b6101406103dd565b61017e610158366004610ee1565b6001600160a01b0316600090815260016020526040902054600160a01b900461ffff1690565b60405161ffff9091168152602001610124565b6101bd61019f366004610ee1565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b039091168152602001610124565b6101406101e3366004610ee1565b6103f1565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101bd565b610140610226366004610ee1565b610461565b610140610239366004610ee1565b61061e565b61014061024c366004610f1c565b61068e565b61014061025f366004610f51565b610773565b61026c610899565b6040516101249190610f98565b610140610287366004610ee1565b6108fb565b6101406109d6565b6101406102a2366004610fe5565b610ae5565b6101406102b5366004610ee1565b610bdf565b60006102c68183610c1d565b92915050565b6001600160a01b0381166102fb5760405162461bcd60e51b81526004016102f29061101e565b60405180910390fd5b60025461012c1161035c5760405162461bcd60e51b815260206004820152602560248201527f63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20604482015264312049525360d81b60648201526084016102f2565b610365816103f1565b6002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b03841690811790915560405190917f500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb91a250565b6103e5610ca0565b6103ef6000610cfb565b565b6103f9610ca0565b6001600160a01b03811661041f5760405162461bcd60e51b81526004016102f29061101e565b61042a600082610d6c565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6001600160a01b0381166104875760405162461bcd60e51b81526004016102f29061101e565b6002546104d65760405162461bcd60e51b815260206004820152601f60248201527f6964656e74697479207265676973747279206973206e6f742073746f7265640060448201526064016102f2565b60025460005b818110156105dc57826001600160a01b03166002828154811061050157610501611055565b6000918252602090912001546001600160a01b0316036105ca576002610528600184611081565b8154811061053857610538611055565b600091825260209091200154600280546001600160a01b03909216918390811061056457610564611055565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060028054806105a3576105a3611094565b600082815260209020810160001990810180546001600160a01b03191690550190556105dc565b806105d4816110aa565b9150506104dc565b506105e68261061e565b6040516001600160a01b038316907f51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c990600090a25050565b610626610ca0565b6001600160a01b03811661064c5760405162461bcd60e51b81526004016102f29061101e565b610657600082610de8565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b610697336102ba565b6106b35760405162461bcd60e51b81526004016102f2906110c3565b6001600160a01b0382166106d95760405162461bcd60e51b81526004016102f29061101e565b6001600160a01b03828116600090815260016020526040902054166107105760405162461bcd60e51b81526004016102f290611111565b6001600160a01b038216600081815260016020526040808220805461ffff60a01b1916600160a01b61ffff87169081029190911790915590519092917f20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf91a35050565b61077c336102ba565b6107985760405162461bcd60e51b81526004016102f2906110c3565b6001600160a01b038316158015906107b857506001600160a01b03821615155b6107d45760405162461bcd60e51b81526004016102f29061101e565b6001600160a01b0383811660009081526001602052604090205416156108355760405162461bcd60e51b8152602060048201526016602482015275616464726573732073746f72656420616c726561647960501b60448201526064016102f2565b6001600160a01b0383811660008181526001602052604080822080549487166001600160b01b03199095168517600160a01b61ffff881602179055517e30dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e7479190a3505050565b606060028054806020026020016040519081016040528092919081815260200182805480156108f157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108d3575b5050505050905090565b610904336102ba565b6109205760405162461bcd60e51b81526004016102f2906110c3565b6001600160a01b0381166109465760405162461bcd60e51b81526004016102f29061101e565b6001600160a01b038181166000908152600160205260409020541661097d5760405162461bcd60e51b81526004016102f290611111565b6001600160a01b0380821660008181526001602052604080822080546001600160b01b0319811690915590519316928392917fca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b91a35050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610a1c5750825b905060008267ffffffffffffffff166001148015610a395750303b155b905081158015610a47575080155b15610a655760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610a8f57845460ff60401b1916600160401b1785555b610a9833610e6a565b8315610ade57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b610aee336102ba565b610b0a5760405162461bcd60e51b81526004016102f2906110c3565b6001600160a01b03821615801590610b2a57506001600160a01b03811615155b610b465760405162461bcd60e51b81526004016102f29061101e565b6001600160a01b0382811660009081526001602052604090205416610b7d5760405162461bcd60e51b81526004016102f290611111565b6001600160a01b0380831660009081526001602052604080822080548585166001600160a01b031982168117909255915191909316929183917f556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b8089190a3505050565b610be7610ca0565b6001600160a01b038116610c1157604051631e4fbdf760e01b8152600060048201526024016102f2565b610c1a81610cfb565b50565b60006001600160a01b038216610c805760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b506001600160a01b03166000908152602091909152604090205460ff1690565b33610cd27f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146103ef5760405163118cdaa760e01b81523360048201526024016102f2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610d768282610c1d565b15610dc35760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016102f2565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610df28282610c1d565b610e485760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016102f2565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610e72610e7b565b610c1a81610ec4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166103ef57604051631afcd79f60e31b815260040160405180910390fd5b610be7610e7b565b6001600160a01b0381168114610c1a57600080fd5b600060208284031215610ef357600080fd5b8135610efe81610ecc565b9392505050565b803561ffff81168114610f1757600080fd5b919050565b60008060408385031215610f2f57600080fd5b8235610f3a81610ecc565b9150610f4860208401610f05565b90509250929050565b600080600060608486031215610f6657600080fd5b8335610f7181610ecc565b92506020840135610f8181610ecc565b9150610f8f60408501610f05565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610fd95783516001600160a01b031683529284019291840191600101610fb4565b50909695505050505050565b60008060408385031215610ff857600080fd5b823561100381610ecc565b9150602083013561101381610ecc565b809150509250929050565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102c6576102c661106b565b634e487b7160e01b600052603160045260246000fd5b6000600182016110bc576110bc61106b565b5060010190565b6020808252602e908201527f4167656e74526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204167656e7420726f6c6560901b606082015260800190565b6020808252601690820152751859191c995cdcc81b9bdd081cdd1bdc9959081e595d60521b60408201526060019056fea26469706673582212201e56b797eba2d2aa3f0c861bf3000b70389b0792d3672cc4f710b0bb973ae3ec64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1177 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97A6278E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCF191BCD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCF191BCD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE805CF86 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A6278E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x9F3418D5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xA53410DD EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xBF9EB959 EQ PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7988D3A5 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7988D3A5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x97A012F7 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x690A49F9 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x727E13BC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x17E PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x140 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x140 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C6 DUP2 DUP4 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12C GT PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3120495253 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB SWAP2 LOG2 POP JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x3EF PUSH1 0x0 PUSH2 0xCFB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x42A PUSH1 0x0 DUP3 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964656E74697479207265676973747279206973206E6F742073746F72656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5DC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5CA JUMPI PUSH1 0x2 PUSH2 0x528 PUSH1 0x1 DUP5 PUSH2 0x1081 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x538 JUMPI PUSH2 0x538 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x564 JUMPI PUSH2 0x564 PUSH2 0x1055 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x5DC JUMP JUMPDEST DUP1 PUSH2 0x5D4 DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4DC JUMP JUMPDEST POP PUSH2 0x5E6 DUP3 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x626 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x697 CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP8 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x77C CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x616464726573732073746F72656420616C7265616479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP9 AND MUL OR SWAP1 SSTORE MLOAD PUSH31 0x30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x904 CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP4 AND SWAP3 DUP4 SWAP3 SWAP2 PUSH32 0xCA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA39 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xA8F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xA98 CALLER PUSH2 0xE6A JUMP JUMPDEST DUP4 ISZERO PUSH2 0xADE JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEE CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB2A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH32 0x556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xBE7 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xCFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0xCD2 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xD76 DUP3 DUP3 PUSH2 0xC1D JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDF2 DUP3 DUP3 PUSH2 0xC1D JUMP JUMPDEST PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE72 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xEC4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE7 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEFE DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF3A DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 PUSH1 0x20 DUP5 ADD PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF71 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF81 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F PUSH1 0x40 DUP6 ADD PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFB4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1003 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1013 DUP2 PUSH2 0xECC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0x106B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10BC JUMPI PUSH2 0x10BC PUSH2 0x106B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x746865204167656E7420726F6C65 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1859191C995CDCC81B9BDD081CDD1BDC9959081E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E JUMP 0xB7 SWAP8 0xEB LOG2 0xD2 0xAA EXTCODEHASH 0xC DUP7 SHL RETURN STOP SIGNEXTEND PUSH17 0x389B0792D3672CC4F710B0BB973AE3EC64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "4044:4545:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_328": {
									"entryPoint": 3690,
									"id": 328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_355": {
									"entryPoint": 3780,
									"id": 355,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_643": {
									"entryPoint": 3707,
									"id": 643,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_396": {
									"entryPoint": 3232,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_720": {
									"entryPoint": null,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_299": {
									"entryPoint": null,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_711": {
									"entryPoint": null,
									"id": 711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_749": {
									"entryPoint": null,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_467": {
									"entryPoint": 3323,
									"id": 467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAgent_1392": {
									"entryPoint": 1009,
									"id": 1392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addIdentityToStorage_860": {
									"entryPoint": 1907,
									"id": 860,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1469": {
									"entryPoint": 3436,
									"id": 1469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bindIdentityRegistry_1073": {
									"entryPoint": 716,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@has_1522": {
									"entryPoint": 3101,
									"id": 1522,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@init_790": {
									"entryPoint": 2518,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAgent_1433": {
									"entryPoint": 698,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@linkedIdentityRegistries_1158": {
									"entryPoint": 2201,
									"id": 1158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@modifyStoredIdentity_929": {
									"entryPoint": 2789,
									"id": 929,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@modifyStoredInvestorCountry_979": {
									"entryPoint": 1678,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAgent_1420": {
									"entryPoint": 1566,
									"id": 1420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeIdentityFromStorage_1033": {
									"entryPoint": 2299,
									"id": 1033,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_1495": {
									"entryPoint": 3560,
									"id": 1495,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_410": {
									"entryPoint": 989,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@storedIdentity_1174": {
									"entryPoint": null,
									"id": 1174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@storedInvestorCountry_1189": {
									"entryPoint": null,
									"id": 1189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_438": {
									"entryPoint": 3039,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unbindIdentityRegistry_1147": {
									"entryPoint": 1121,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$278": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$278t_uint16": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint16": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$278__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7551:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:11"
															},
															"nodeType": "YulIf",
															"src": "69:70:11"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:11",
														"type": ""
													}
												],
												"src": "14:131:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:11"
															},
															"nodeType": "YulIf",
															"src": "230:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:11",
														"type": ""
													}
												],
												"src": "150:247:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "507:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "519:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "507:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "549:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "574:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "567:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "567:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "560:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "542:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "466:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "477:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "488:4:11",
														"type": ""
													}
												],
												"src": "402:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "693:89:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "703:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "715:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "726:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "703:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "745:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "760:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "768:6:11",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "756:19:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "738:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "738:38:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "662:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "673:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "684:4:11",
														"type": ""
													}
												],
												"src": "594:188:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "915:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "957:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "988:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "993:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "984:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "984:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "997:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$278__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "874:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "885:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "896:4:11",
														"type": ""
													}
												],
												"src": "787:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1113:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1123:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1135:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1146:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1123:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1165:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1180:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1196:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1201:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1192:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1192:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1205:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1188:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1188:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1176:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1176:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1158:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1082:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1093:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1104:4:11",
														"type": ""
													}
												],
												"src": "1012:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1268:111:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1278:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1300:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1287:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1278:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1357:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1359:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1359:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1329:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1340:5:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1347:6:11",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:18:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1326:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1326:29:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:37:11"
															},
															"nodeType": "YulIf",
															"src": "1316:57:11"
														}
													]
												},
												"name": "abi_decode_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1247:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1258:5:11",
														"type": ""
													}
												],
												"src": "1220:159:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1470:233:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1516:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1525:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1528:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1518:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1518:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1518:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1500:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:32:11"
															},
															"nodeType": "YulIf",
															"src": "1480:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1541:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1567:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1545:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1611:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1586:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1586:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1626:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1636:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1682:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1693:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1678:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1660:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:37:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1428:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1439:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1451:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1459:6:11",
														"type": ""
													}
												],
												"src": "1384:319:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1828:357:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1874:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1883:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1876:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1876:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1845:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1870:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:32:11"
															},
															"nodeType": "YulIf",
															"src": "1838:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1925:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1912:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1903:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1969:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1944:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1944:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1994:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2008:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2040:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2051:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2023:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2012:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2089:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2064:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2064:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2106:17:11",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2116:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2160:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2142:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:37:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$278t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1778:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1789:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1801:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1809:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1817:6:11",
														"type": ""
													}
												],
												"src": "1708:477:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:507:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2351:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2361:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2355:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2372:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2390:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2401:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2386:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:18:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2376:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2420:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2431:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2413:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2443:17:11",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2454:6:11"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2447:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2469:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2489:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2483:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2473:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2505:22:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2536:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2547:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2558:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:18:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2570:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2588:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2596:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:15:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2574:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2608:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2617:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2612:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2676:146:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2712:6:11"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2706:5:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2706:13:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2729:3:11",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2734:1:11",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2725:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2725:11:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2738:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2721:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2721:19:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2702:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2702:39:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:52:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:52:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2755:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2766:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2771:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2762:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2762:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2755:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2787:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2801:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2809:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2797:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2638:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2649:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2651:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2660:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2656:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2656:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2651:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2631:3:11",
																"statements": []
															},
															"src": "2627:195:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2831:11:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2839:3:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2831:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2310:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2321:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2332:4:11",
														"type": ""
													}
												],
												"src": "2190:658:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2957:301:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3003:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3012:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3015:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3005:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3005:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3005:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2978:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2999:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2970:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:32:11"
															},
															"nodeType": "YulIf",
															"src": "2967:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3028:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3054:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3041:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3032:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3098:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3073:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3123:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3137:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3152:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3141:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3218:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3193:24:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3193:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3235:17:11",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3245:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3235:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$278",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2915:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2926:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2938:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2946:6:11",
														"type": ""
													}
												],
												"src": "2853:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:18:11"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3543:33:11",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3586:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3598:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3586:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3414:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3428:4:11",
														"type": ""
													}
												],
												"src": "3263:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3797:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3814:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3825:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3807:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3807:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3807:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3848:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3859:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3844:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3844:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3864:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3837:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3837:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3887:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3898:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:18:11"
																	},
																	{
																		"hexValue": "63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3903:34:11",
																		"type": "",
																		"value": "cannot bind more than 300 IR to "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3876:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3876:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3958:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3969:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:18:11"
																	},
																	{
																		"hexValue": "3120495253",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3974:7:11",
																		"type": "",
																		"value": "1 IRS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3991:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4003:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4014:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3991:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3774:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3788:4:11",
														"type": ""
													}
												],
												"src": "3623:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4203:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4220:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4213:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4270:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4243:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4293:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4304:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:18:11"
																	},
																	{
																		"hexValue": "6964656e74697479207265676973747279206973206e6f742073746f726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4309:33:11",
																		"type": "",
																		"value": "identity registry is not stored"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4282:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4364:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4375:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4360:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4352:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4180:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4194:4:11",
														"type": ""
													}
												],
												"src": "4029:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4421:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4438:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4445:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4450:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4441:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4431:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4431:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4478:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4481:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4471:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4505:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4495:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4389:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4553:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4577:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4573:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4603:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4637:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4627:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4521:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4702:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4712:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4724:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4727:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4720:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4712:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4753:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4755:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4755:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4755:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4744:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4750:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4741:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:11:11"
															},
															"nodeType": "YulIf",
															"src": "4738:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4684:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4687:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4693:4:11",
														"type": ""
													}
												],
												"src": "4653:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4818:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4835:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4842:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4847:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4828:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4875:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:4:11",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4868:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4868:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4892:15:11"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4786:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4965:88:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4996:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4998:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4998:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4998:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4981:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4978:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:17:11"
															},
															"nodeType": "YulIf",
															"src": "4975:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5038:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5045:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4947:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4957:3:11",
														"type": ""
													}
												],
												"src": "4918:135:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5232:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5242:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5294:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5279:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5322:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5333:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5318:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5318:18:11"
																	},
																	{
																		"hexValue": "4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5338:34:11",
																		"type": "",
																		"value": "AgentRole: caller does not have "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5311:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5393:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5404:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:18:11"
																	},
																	{
																		"hexValue": "746865204167656e7420726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5409:16:11",
																		"type": "",
																		"value": "the Agent role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5382:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5382:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5382:44:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5435:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5458:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5209:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5223:4:11",
														"type": ""
													}
												],
												"src": "5058:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5647:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5709:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5694:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5687:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:11"
																	},
																	{
																		"hexValue": "61646472657373206e6f742073746f72656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:24:11",
																		"type": "",
																		"value": "address not stored yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5787:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5799:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5795:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5787:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5624:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5638:4:11",
														"type": ""
													}
												],
												"src": "5473:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5998:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6015:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6026:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6008:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6049:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6060:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6045:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6038:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6038:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6088:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6099:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6084:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6084:18:11"
																	},
																	{
																		"hexValue": "616464726573732073746f72656420616c7265616479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6104:24:11",
																		"type": "",
																		"value": "address stored already"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6077:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6077:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6138:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6150:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6146:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6146:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6138:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5975:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5989:4:11",
														"type": ""
													}
												],
												"src": "5824:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:101:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6293:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6305:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6301:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6293:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6335:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6350:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6358:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6346:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6346:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6328:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6252:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6263:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6274:4:11",
														"type": ""
													}
												],
												"src": "6175:209:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6563:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6580:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6591:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6573:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6625:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6610:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6603:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6653:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6664:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6669:34:11",
																		"type": "",
																		"value": "Roles: account is the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6642:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:11"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6740:4:11",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6713:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6713:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6713:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6754:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6540:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6554:4:11",
														"type": ""
													}
												],
												"src": "6389:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6966:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6983:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6994:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6976:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6976:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7028:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7033:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7006:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7006:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7056:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7067:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7052:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7052:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7072:33:11",
																		"type": "",
																		"value": "Roles: account already has role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7045:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7045:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7115:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7127:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7115:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6943:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6957:4:11",
														"type": ""
													}
												],
												"src": "6792:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7326:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7343:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7432:34:11",
																		"type": "",
																		"value": "Roles: account does not have rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:18:11"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7503:3:11",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7516:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7528:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7539:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7516:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7303:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7317:4:11",
														"type": ""
													}
												],
												"src": "7152:397:11"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$278t_uint16(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_uint16(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$278(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"cannot bind more than 300 IR to \")\n        mstore(add(headStart, 96), \"1 IRS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"identity registry is not stored\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"AgentRole: caller does not have \")\n        mstore(add(headStart, 96), \"the Agent role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"address not stored yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"address stored already\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97A6278E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCF191BCD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCF191BCD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE805CF86 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A6278E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x9F3418D5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xA53410DD EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xBF9EB959 EQ PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7988D3A5 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7988D3A5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x97A012F7 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x690A49F9 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x727E13BC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x17E PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x140 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x140 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x26C PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x140 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C6 DUP2 DUP4 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12C GT PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3120495253 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB SWAP2 LOG2 POP JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x3EF PUSH1 0x0 PUSH2 0xCFB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x42A PUSH1 0x0 DUP3 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964656E74697479207265676973747279206973206E6F742073746F72656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5DC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5CA JUMPI PUSH1 0x2 PUSH2 0x528 PUSH1 0x1 DUP5 PUSH2 0x1081 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x538 JUMPI PUSH2 0x538 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x564 JUMPI PUSH2 0x564 PUSH2 0x1055 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x5DC JUMP JUMPDEST DUP1 PUSH2 0x5D4 DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4DC JUMP JUMPDEST POP PUSH2 0x5E6 DUP3 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x626 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x657 PUSH1 0x0 DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x697 CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP8 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x77C CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7B8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x616464726573732073746F72656420616C7265616479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP9 AND MUL OR SWAP1 SSTORE MLOAD PUSH31 0x30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x904 CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP4 AND SWAP3 DUP4 SWAP3 SWAP2 PUSH32 0xCA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA39 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xA8F JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xA98 CALLER PUSH2 0xE6A JUMP JUMPDEST DUP4 ISZERO PUSH2 0xADE JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEE CALLER PUSH2 0x2BA JUMP JUMPDEST PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB2A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP6 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH32 0x556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xBE7 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xCFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0xCD2 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xD76 DUP3 DUP3 PUSH2 0xC1D JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDF2 DUP3 DUP3 PUSH2 0xC1D JUMP JUMPDEST PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE72 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xC1A DUP2 PUSH2 0xEC4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE7 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEFE DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF3A DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 PUSH1 0x20 DUP5 ADD PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF71 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF81 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F PUSH1 0x40 DUP6 ADD PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFD9 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFB4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1003 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1013 DUP2 PUSH2 0xECC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0x106B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10BC JUMPI PUSH2 0x10BC PUSH2 0x106B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x746865204167656E7420726F6C65 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1859191C995CDCC81B9BDD081CDD1BDC9959081E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E JUMP 0xB7 SWAP8 0xEB LOG2 0xD2 0xAA EXTCODEHASH 0xC DUP7 SHL RETURN STOP SIGNEXTEND PUSH17 0x389B0792D3672CC4F710B0BB973AE3EC64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "4044:4545:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4703:103:9;;;;;;:::i;:::-;;:::i;:::-;;;567:14:11;;560:22;542:41;;530:2;515:18;4703:103:9;;;;;;;;6711:404:6;;;;;;:::i;:::-;;:::i;:::-;;3165:101:3;;;:::i;8429:158:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8539:25:6;8514:6;8539:25;;;:11;:25;;;;;:41;-1:-1:-1;;;8539:41:6;;;;;8429:158;;;;768:6:11;756:19;;;738:38;;726:2;711:18;8429:158:6;594:188:11;8185:155:6;;;;;;:::i;:::-;-1:-1:-1;;;;;8291:25:6;;;8263:9;8291:25;;;:11;:25;;;;;:42;;;8185:155;;;;-1:-1:-1;;;;;968:32:11;;;950:51;;938:2;923:18;8185:155:6;787:220:11;4295:194:9;;;;;;:::i;:::-;;:::i;2451:144:3:-;1323:22;2580:8;-1:-1:-1;;;;;2580:8:3;2451:144;;7205:677:6;;;;;;:::i;:::-;;:::i;4495:202:9:-;;;;;;:::i;:::-;;:::i;5655:417:6:-;;;;;;:::i;:::-;;:::i;4314:595::-;;;;;;:::i;:::-;;:::i;7974:129::-;;;:::i;:::-;;;;;;;:::i;6165:458::-;;;;;;:::i;:::-;;:::i;4146:80::-;;;:::i;4997:563::-;;;;;;:::i;:::-;;:::i;3415:215:3:-;;;;;;:::i;:::-;;:::i;4703:103:9:-;4757:4;4780:19;4757:4;4792:6;4780:11;:19::i;:::-;4773:26;4703:103;-1:-1:-1;;4703:103:9:o;6711:404:6:-;-1:-1:-1;;;;;6804:31:6;;6796:75;;;;-1:-1:-1;;;6796:75:6;;;;;;;:::i;:::-;;;;;;;;;6889:19;:26;6918:3;-1:-1:-1;6881:82:6;;;;-1:-1:-1;;;6881:82:6;;3825:2:11;6881:82:6;;;3807:21:11;3864:2;3844:18;;;3837:30;3903:34;3883:18;;;3876:62;-1:-1:-1;;;3954:18:11;;;3947:35;3999:19;;6881:82:6;3623:401:11;6881:82:6;6973:27;6982:17;6973:8;:27::i;:::-;7010:19;:43;;;;;;;-1:-1:-1;7010:43:6;;;;;;;-1:-1:-1;;;;;;7010:43:6;-1:-1:-1;;;;;7010:43:6;;;;;;;;7068:40;;7010:43;;7068:40;;;6711:404;:::o;3165:101:3:-;2344:13;:11;:13::i;:::-;3229:30:::1;3256:1;3229:18;:30::i;:::-;3165:101::o:0;4295:194:9:-;2344:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;4364:20:9;::::1;4356:64;;;;-1:-1:-1::0;;;4356:64:9::1;;;;;;;:::i;:::-;4430:19;:7;4442:6:::0;4430:11:::1;:19::i;:::-;4464:18;::::0;-1:-1:-1;;;;;4464:18:9;::::1;::::0;::::1;::::0;;;::::1;4295:194:::0;:::o;7205:677:6:-;-1:-1:-1;;;;;7300:31:6;;7292:75;;;;-1:-1:-1;;;7292:75:6;;;;;;;:::i;:::-;7385:19;:26;7377:74;;;;-1:-1:-1;;;7377:74:6;;4231:2:11;7377:74:6;;;4213:21:11;4270:2;4250:18;;;4243:30;4309:33;4289:18;;;4282:61;4360:18;;7377:74:6;4029:355:11;7377:74:6;7478:19;:26;7461:14;7514:265;7538:6;7534:1;:10;7514:265;;;7595:17;-1:-1:-1;;;;;7569:43:6;:19;7589:1;7569:22;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7569:22:6;:43;7565:204;;7657:19;7677:10;7686:1;7677:6;:10;:::i;:::-;7657:31;;;;;;;;:::i;:::-;;;;;;;;;;;7632:19;:22;;-1:-1:-1;;;;;7657:31:6;;;;7652:1;;7632:22;;;;;;:::i;:::-;;;;;;;;;:56;;;;;-1:-1:-1;;;;;7632:56:6;;;;;-1:-1:-1;;;;;7632:56:6;;;;;;7706:19;:25;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;7706:25:6;;;;;-1:-1:-1;;;;;;7706:25:6;;;;;;7749:5;;7565:204;7546:3;;;;:::i;:::-;;;;7514:265;;;;7788:30;7800:17;7788:11;:30::i;:::-;7833:42;;-1:-1:-1;;;;;7833:42:6;;;;;;;;7282:600;7205:677;:::o;4495:202:9:-;2344:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;4567:20:9;::::1;4559:64;;;;-1:-1:-1::0;;;4559:64:9::1;;;;;;;:::i;:::-;4633:22;:7;4648:6:::0;4633:14:::1;:22::i;:::-;4670:20;::::0;-1:-1:-1;;;;;4670:20:9;::::1;::::0;::::1;::::0;;;::::1;4495:202:::0;:::o;5655:417:6:-;4201:19:9;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5777:26:6;::::1;5769:70;;;;-1:-1:-1::0;;;5769:70:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5865:25:6;;::::1;5920:1;5865:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;5849:100;;;;-1:-1:-1::0;;;5849:100:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5959:25:6;::::1;;::::0;;;:11:::1;:25;::::0;;;;;:52;;-1:-1:-1;;;;5959:52:6::1;-1:-1:-1::0;;;5959:52:6::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;6026:39;;5959:52;;:25;6026:39:::1;::::0;::::1;5655:417:::0;;:::o;4314:595::-;4201:19:9;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;4493:26:6;::::1;::::0;;::::1;::::0;:74:::1;;-1:-1:-1::0;;;;;;4535:32:6;::::1;::::0;::::1;4493:74;4472:140;;;;-1:-1:-1::0;;;4472:140:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4638:25:6;;::::1;4693:1;4638:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;4630:65:::0;4622:100:::1;;;::::0;-1:-1:-1;;;4622:100:6;;6026:2:11;4622:100:6::1;::::0;::::1;6008:21:11::0;6065:2;6045:18;;;6038:30;-1:-1:-1;;;6084:18:11;;;6077:52;6146:18;;4622:100:6::1;5824:346:11::0;4622:100:6::1;-1:-1:-1::0;;;;;4732:25:6;;::::1;;::::0;;;:11:::1;:25;::::0;;;;;:54;;;;::::1;-1:-1:-1::0;;;;;;4796:52:6;;;;;-1:-1:-1;;;4796:52:6::1;::::0;::::1;;;::::0;;4863:39;::::1;::::0;4732:25;4863:39:::1;4314:595:::0;;;:::o;7974:129::-;8042:16;8077:19;8070:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8070:26:6;;;;;;;;;;;;;;;;;;;;;;;7974:129;:::o;6165:458::-;4201:19:9;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;6268:26:6;::::1;6260:70;;;;-1:-1:-1::0;;;6260:70:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6356:25:6;;::::1;6411:1;6356:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;6340:100;;;;-1:-1:-1::0;;;6340:100:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6474:25:6;;::::1;6450:21;6474:25:::0;;;:11:::1;:25;::::0;;;;;:42;;-1:-1:-1;;;;;;6526:32:6;;;;;6573:43;;6474:42;::::1;::::0;;;:25;6573:43:::1;::::0;::::1;6250:373;6165:458:::0;:::o;4146:80::-;8870:21:4;4302:15;;-1:-1:-1;;;4302:15:4;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:4;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:4;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:4;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:4;-1:-1:-1;;;5013:22:4;;;4979:67;4193:26:6::1;4208:10;4193:14;:26::i;:::-;5070:14:4::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:4;;;5142:14;;-1:-1:-1;6328:50:11;;5142:14:4;;6316:2:11;6301:18;5142:14:4;;;;;;;5066:101;4092:1081;;;;;4146:80:6:o;4997:563::-;4201:19:9;4209:10;4201:7;:19::i;:::-;4193:78;;;;-1:-1:-1;;;4193:78:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5129:26:6;::::1;::::0;;::::1;::::0;:74:::1;;-1:-1:-1::0;;;;;;5171:32:6;::::1;::::0;::::1;5129:74;5108:140;;;;-1:-1:-1::0;;;5108:140:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5274:25:6;;::::1;5329:1;5274:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;5258:100;;;;-1:-1:-1::0;;;5258:100:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5392:25:6;;::::1;5368:21;5392:25:::0;;;:11:::1;:25;::::0;;;;;:42;;5444:54;;::::1;-1:-1:-1::0;;;;;;5444:54:6;::::1;::::0;::::1;::::0;;;5513:40;;5392:42;;;::::1;::::0;5444:54;5392:42;;5513:40:::1;::::0;5368:21;5513:40:::1;5098:462;4997:563:::0;;:::o;3415:215:3:-;2344:13;:11;:13::i;:::-;-1:-1:-1;;;;;3499:22:3;::::1;3495:91;;3544:31;::::0;-1:-1:-1;;;3544:31:3;;3572:1:::1;3544:31;::::0;::::1;950:51:11::0;923:18;;3544:31:3::1;787:220:11::0;3495:91:3::1;3595:28;3614:8;3595:18;:28::i;:::-;3415:215:::0;:::o;4596:200:10:-;4668:4;-1:-1:-1;;;;;4692:21:10;;4684:68;;;;-1:-1:-1;;;4684:68:10;;6591:2:11;4684:68:10;;;6573:21:11;6630:2;6610:18;;;6603:30;6669:34;6649:18;;;6642:62;-1:-1:-1;;;6720:18:11;;;6713:32;6762:19;;4684:68:10;6389:398:11;4684:68:10;-1:-1:-1;;;;;;4769:20:10;:11;:20;;;;;;;;;;;;;;;4596:200::o;2668:162:3:-;966:10:5;2727:7:3;1323:22;2580:8;-1:-1:-1;;;;;2580:8:3;;2451:144;2727:7;-1:-1:-1;;;;;2727:23:3;;2723:101;;2773:40;;-1:-1:-1;;;2773:40:3;;966:10:5;2773:40:3;;;950:51:11;923:18;;2773:40:3;787:220:11;3784:248:3;1323:22;3933:8;;-1:-1:-1;;;;;;3951:19:3;;-1:-1:-1;;;;;3951:19:3;;;;;;;;3985:40;;3933:8;;;;;3985:40;;3857:24;;3985:40;3847:185;;3784:248;:::o;4077:175:10:-;4154:18;4158:4;4164:7;4154:3;:18::i;:::-;4153:19;4145:63;;;;-1:-1:-1;;;4145:63:10;;6994:2:11;4145:63:10;;;6976:21:11;7033:2;7013:18;;;7006:30;7072:33;7052:18;;;7045:61;7123:18;;4145:63:10;6792:355:11;4145:63:10;-1:-1:-1;;;;;4218:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;4218:27:10;4241:4;4218:27;;;4077:175::o;4327:180::-;4406:18;4410:4;4416:7;4406:3;:18::i;:::-;4398:64;;;;-1:-1:-1;;;4398:64:10;;7354:2:11;4398:64:10;;;7336:21:11;7393:2;7373:18;;;7366:30;7432:34;7412:18;;;7405:62;-1:-1:-1;;;7483:18:11;;;7476:31;7524:19;;4398:64:10;7152:397:11;4398:64:10;-1:-1:-1;;;;;4472:20:10;4495:5;4472:20;;;;;;;;;;;:28;;-1:-1:-1;;4472:28:10;;;4327:180::o;1857:127:3:-;6931:20:4;:18;:20::i;:::-;1939:38:3::1;1964:12;1939:24;:38::i;7084:141:4:-:0;8870:21;8560:40;-1:-1:-1;;;8560:40:4;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:4;;;;;;;;;;;1990:235:3;6931:20:4;:18;:20::i;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:11:o;1220:159::-;1287:20;;1347:6;1336:18;;1326:29;;1316:57;;1369:1;1366;1359:12;1316:57;1220:159;;;:::o;1384:319::-;1451:6;1459;1512:2;1500:9;1491:7;1487:23;1483:32;1480:52;;;1528:1;1525;1518:12;1480:52;1567:9;1554:23;1586:31;1611:5;1586:31;:::i;:::-;1636:5;-1:-1:-1;1660:37:11;1693:2;1678:18;;1660:37;:::i;:::-;1650:47;;1384:319;;;;;:::o;1708:477::-;1801:6;1809;1817;1870:2;1858:9;1849:7;1845:23;1841:32;1838:52;;;1886:1;1883;1876:12;1838:52;1925:9;1912:23;1944:31;1969:5;1944:31;:::i;:::-;1994:5;-1:-1:-1;2051:2:11;2036:18;;2023:32;2064:33;2023:32;2064:33;:::i;:::-;2116:7;-1:-1:-1;2142:37:11;2175:2;2160:18;;2142:37;:::i;:::-;2132:47;;1708:477;;;;;:::o;2190:658::-;2361:2;2413:21;;;2483:13;;2386:18;;;2505:22;;;2332:4;;2361:2;2584:15;;;;2558:2;2543:18;;;2332:4;2627:195;2641:6;2638:1;2635:13;2627:195;;;2706:13;;-1:-1:-1;;;;;2702:39:11;2690:52;;2797:15;;;;2762:12;;;;2738:1;2656:9;2627:195;;;-1:-1:-1;2839:3:11;;2190:658;-1:-1:-1;;;;;;2190:658:11:o;2853:405::-;2938:6;2946;2999:2;2987:9;2978:7;2974:23;2970:32;2967:52;;;3015:1;3012;3005:12;2967:52;3054:9;3041:23;3073:31;3098:5;3073:31;:::i;:::-;3123:5;-1:-1:-1;3180:2:11;3165:18;;3152:32;3193:33;3152:32;3193:33;:::i;:::-;3245:7;3235:17;;;2853:405;;;;;:::o;3263:355::-;3465:2;3447:21;;;3504:2;3484:18;;;3477:30;3543:33;3538:2;3523:18;;3516:61;3609:2;3594:18;;3263:355::o;4389:127::-;4450:10;4445:3;4441:20;4438:1;4431:31;4481:4;4478:1;4471:15;4505:4;4502:1;4495:15;4521:127;4582:10;4577:3;4573:20;4570:1;4563:31;4613:4;4610:1;4603:15;4637:4;4634:1;4627:15;4653:128;4720:9;;;4741:11;;;4738:37;;;4755:18;;:::i;4786:127::-;4847:10;4842:3;4838:20;4835:1;4828:31;4878:4;4875:1;4868:15;4902:4;4899:1;4892:15;4918:135;4957:3;4978:17;;;4975:43;;4998:18;;:::i;:::-;-1:-1:-1;5045:1:11;5034:13;;4918:135::o;5058:410::-;5260:2;5242:21;;;5299:2;5279:18;;;5272:30;5338:34;5333:2;5318:18;;5311:62;-1:-1:-1;;;5404:2:11;5389:18;;5382:44;5458:3;5443:19;;5058:410::o;5473:346::-;5675:2;5657:21;;;5714:2;5694:18;;;5687:30;-1:-1:-1;;;5748:2:11;5733:18;;5726:52;5810:2;5795:18;;5473:346::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "894200",
								"executionCost": "929",
								"totalCost": "895129"
							},
							"external": {
								"addAgent(address)": "30375",
								"addIdentityToStorage(address,address,uint16)": "infinite",
								"bindIdentityRegistry(address)": "82202",
								"init()": "infinite",
								"isAgent(address)": "2657",
								"linkedIdentityRegistries()": "infinite",
								"modifyStoredIdentity(address,address)": "infinite",
								"modifyStoredInvestorCountry(address,uint16)": "30884",
								"owner()": "2398",
								"removeAgent(address)": "30344",
								"removeIdentityFromStorage(address)": "30751",
								"renounceOwnership()": "infinite",
								"storedIdentity(address)": "2584",
								"storedInvestorCountry(address)": "2653",
								"transferOwnership(address)": "infinite",
								"unbindIdentityRegistry(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4044,
									"end": 8589,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e56b797eba2d2aa3f0c861bf3000b70389b0792d3672cc4f710b0bb973ae3ec64736f6c63430008110033",
									".code": [
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "97A6278E"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "CF191BCD"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "CF191BCD"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "E1C7392A"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "E805CF86"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "97A6278E"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "9F3418D5"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "A53410DD"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "BF9EB959"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "7988D3A5"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "7988D3A5"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "84E79842"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "97A012F7"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "1FFBB064"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "690A49F9"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "727E13BC"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 8589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 567,
											"end": 581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 581,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 560,
											"end": 582,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 542,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 542,
											"end": 583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6711,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6711,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8429,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8550,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 756,
											"end": 775,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 756,
											"end": 775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 756,
											"end": 775,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 726,
											"end": 728,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8429,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 594,
											"end": 782,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8185,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8316,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8333,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8333,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8185,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 787,
											"end": 1007,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7205,
											"end": 7882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7205,
											"end": 7882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5655,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5655,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4314,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4314,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7974,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7974,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6165,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6165,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4146,
											"end": 4226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4997,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4997,
											"end": 5560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4780,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6796,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6796,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6889,
											"end": 6915,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3827,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3866,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3837,
											"end": 3867,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3937,
											"name": "PUSH",
											"source": 11,
											"value": "63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3876,
											"end": 3938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3120495253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3947,
											"end": 3982,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4018,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3999,
											"end": 4018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3623,
											"end": 4024,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6881,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6982,
											"end": 6999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 6973,
											"end": 7000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 7000,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6973,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7029,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "PUSH",
											"source": 6,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB"
										},
										{
											"begin": 7068,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7108,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3256,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3229,
											"end": 3259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4356,
											"end": 4420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4430,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4430,
											"end": 4449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7292,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 7292,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7404,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7385,
											"end": 7411,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4272,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4243,
											"end": 4273,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4342,
											"name": "PUSH",
											"source": 11,
											"value": "6964656E74697479207265676973747279206973206E6F742073746F72656400"
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4360,
											"end": 4378,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4360,
											"end": 4378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4029,
											"end": 4384,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7377,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7497,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7478,
											"end": 7504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7569,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7569,
											"end": 7612,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7565,
											"end": 7769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7676,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7677,
											"end": 7683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7677,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7657,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7651,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7653,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7632,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 7688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7725,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7706,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7706,
											"end": 7731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7749,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7749,
											"end": 7754,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7769,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7565,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7546,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7800,
											"end": 7817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7788,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7818,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7788,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9"
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7875,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4559,
											"end": 4623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4633,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4633,
											"end": 4655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "ED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5769,
											"end": 5839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5769,
											"end": 5839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5865,
											"end": 5890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5890,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5907,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5849,
											"end": 5949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5849,
											"end": 5949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5959,
											"end": 5984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5959,
											"end": 6011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5959,
											"end": 6011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6011,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF"
										},
										{
											"begin": 6026,
											"end": 6065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6065,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4493,
											"end": 4567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4493,
											"end": 4567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4472,
											"end": 4612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4472,
											"end": 4612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4638,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4663,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4680,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4622,
											"end": 4722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4622,
											"end": 4722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6067,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6068,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616464726573732073746F72656420616C7265616479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5824,
											"end": 6170,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4622,
											"end": 4722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4732,
											"end": 4757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4786,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4786,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4786,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4848,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4863,
											"end": 4902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4863,
											"end": 4902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747"
										},
										{
											"begin": 4863,
											"end": 4902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4863,
											"end": 4902,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8058,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8077,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6268,
											"end": 6294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6260,
											"end": 6330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6260,
											"end": 6330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6356,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6381,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6398,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6340,
											"end": 6440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6340,
											"end": 6440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6474,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6558,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6516,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "CA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B"
										},
										{
											"begin": 6573,
											"end": 6616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6616,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4146,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 4,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4208,
											"end": 4218,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4193,
											"end": 4219,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4193,
											"end": 4219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4201,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4201,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4193,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5155,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5129,
											"end": 5203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5203,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5129,
											"end": 5203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5108,
											"end": 5248,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5108,
											"end": 5248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5274,
											"end": 5299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5316,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5258,
											"end": 5358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 5417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5417,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808"
										},
										{
											"begin": 5513,
											"end": 5553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5553,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 787,
											"end": 1007,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3595,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6593,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420697320746865207A65726F206164647265"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6762,
											"end": 6781,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6762,
											"end": 6781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6389,
											"end": 6787,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 950,
											"end": 1001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 787,
											"end": 1007,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4154,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 6996,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 6997,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7033,
											"end": 7035,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7006,
											"end": 7036,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7105,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7106,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 6792,
											"end": 7147,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4406,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7432,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7405,
											"end": 7467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7524,
											"end": 7543,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 7524,
											"end": 7543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 7152,
											"end": 7549,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1964,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1939,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 4,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 336,
											"end": 367,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 386,
											"end": 391,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 150,
											"end": 397,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1220,
											"end": 1379,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 1220,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1355,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1316,
											"end": 1373,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1359,
											"end": 1371,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1373,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1316,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1220,
											"end": 1379,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1220,
											"end": 1379,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1220,
											"end": 1379,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1220,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1510,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1515,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1530,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1577,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1586,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 1660,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1697,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 1660,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1845,
											"end": 1868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1841,
											"end": 1873,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1838,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1935,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1944,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1944,
											"end": 1975,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1944,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1994,
											"end": 1999,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2023,
											"end": 2055,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2023,
											"end": 2055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2064,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2097,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2064,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2142,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2142,
											"end": 2179,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2142,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 2185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2190,
											"end": 2848,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2190,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2434,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2413,
											"end": 2434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2413,
											"end": 2434,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2527,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2648,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2812,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2812,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2812,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2812,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2627,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 2190,
											"end": 2848,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 2997,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 3002,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3019,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2967,
											"end": 3019,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3019,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2967,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3064,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 3073,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3073,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3184,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3152,
											"end": 3184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 3193,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3618,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3263,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3468,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3576,
											"name": "PUSH",
											"source": 11,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3516,
											"end": 3577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4389,
											"end": 4516,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4389,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4460,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4445,
											"end": 4448,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4441,
											"end": 4461,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4462,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4478,
											"end": 4479,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4471,
											"end": 4486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4509,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4510,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4648,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 4521,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4573,
											"end": 4593,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4570,
											"end": 4571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4613,
											"end": 4617,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4618,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4634,
											"end": 4635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4781,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4653,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4752,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4775,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4738,
											"end": 4775,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 4755,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4913,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 4786,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4842,
											"end": 4845,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4838,
											"end": 4858,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4878,
											"end": 4882,
											"name": "PUSH",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4868,
											"end": 4883,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4907,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5053,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 4918,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4957,
											"end": 4960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4975,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4975,
											"end": 5018,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 4998,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5034,
											"end": 5047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5034,
											"end": 5047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4918,
											"end": 5053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5058,
											"end": 5468,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5058,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5242,
											"end": 5263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5302,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5338,
											"end": 5372,
											"name": "PUSH",
											"source": 11,
											"value": "4167656E74526F6C653A2063616C6C657220646F6573206E6F74206861766520"
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5373,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746865204167656E7420726F6C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5389,
											"end": 5407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5382,
											"end": 5426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5458,
											"end": 5461,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5058,
											"end": 5468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5819,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5473,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859191C995CDCC81B9BDD081CDD1BDC9959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/storage/IRSStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAgent(address)": "84e79842",
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"init()": "e1c7392a",
							"isAgent(address)": "1ffbb064",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"owner()": "8da5cb5b",
							"removeAgent(address)": "97a6278e",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"renounceOwnership()": "715018a6",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"transferOwnership(address)": "f2fde38b",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"See {IIdentityRegistryStorage-addIdentityToStorage}.\"},\"bindIdentityRegistry(address)\":{\"details\":\"See {IIdentityRegistryStorage-bindIdentityRegistry}.\"},\"linkedIdentityRegistries()\":{\"details\":\"See {IIdentityRegistryStorage-linkedIdentityRegistries}.\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"See {IIdentityRegistryStorage-modifyStoredIdentity}.\"},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"See {IIdentityRegistryStorage-modifyStoredInvestorCountry}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeIdentityFromStorage(address)\":{\"details\":\"See {IIdentityRegistryStorage-removeIdentityFromStorage}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"storedIdentity(address)\":{\"details\":\"See {IIdentityRegistryStorage-storedIdentity}.\"},\"storedInvestorCountry(address)\":{\"details\":\"See {IIdentityRegistryStorage-storedInvestorCountry}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unbindIdentityRegistry(address)\":{\"details\":\"See {IIdentityRegistryStorage-unbindIdentityRegistry}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CountryModified(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityModified(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"IdentityRegistryBound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added\"},\"IdentityRegistryUnbound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed\"},\"IdentityStored(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityUnstored(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":\"IdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]},\"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol\":{\"keccak256\":\"0xfe1bde7a6e8e51bbb2af4d8ebc986e267d81aee749cbf6ec9fc759270927950f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bded1f31518de84dd78821325bd685748eaddfe6c421d9affde5b35fdda653ab\",\"dweb:/ipfs/QmZAuomUSExDovJikvTwrJxjUAXBNPd3dacynLdtQeb3rV\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"contracts t-rex/registry/storage/IRSStorage.sol\":{\"keccak256\":\"0x7c4be0986e6d546ea6e292b3c296fe97a09038489ef3c8d11045acf8a3eabc4a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eff2f537f10623e30a413cc97586fe9e97b65fec03da2458cc1afbc01daa3334\",\"dweb:/ipfs/QmTi5hGckS4DQRADsaVVqLTbKfhPG9tBo13UFtHLD2wpru\"]},\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":{\"keccak256\":\"0x8e5c6409d5d25a3d73e615fe568ea72edb0dae9e2393f392ec694b33655727e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://327c9f2b5f56bf3a969b852c4c22dfc6a67eb0e97ed0b15b386d930387ced245\",\"dweb:/ipfs/QmWMwpykNT2cihW4mVWtEcKwNtQ96YLnSJZCSzRCmBE9PD\"]},\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1344,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_agents",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)1442_storage"
							},
							{
								"astId": 1321,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_identities",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Identity)1315_storage)"
							},
							{
								"astId": 1325,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_identityRegistries",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1330,
								"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IIdentity)278": {
								"encoding": "inplace",
								"label": "contract IIdentity",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Identity)1315_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IRSStorage.Identity)",
								"numberOfBytes": "32",
								"value": "t_struct(Identity)1315_storage"
							},
							"t_struct(Identity)1315_storage": {
								"encoding": "inplace",
								"label": "struct IRSStorage.Identity",
								"members": [
									{
										"astId": 1312,
										"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "identityContract",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IIdentity)278"
									},
									{
										"astId": 1314,
										"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "investorCountry",
										"offset": 20,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Role)1442_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 1441,
										"contract": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"CountryModified(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityModified(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"IdentityRegistryBound(address)": {
								"notice": "this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added"
							},
							"IdentityRegistryUnbound(address)": {
								"notice": "this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed"
							},
							"IdentityStored(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityUnstored(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"details": "adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The country of the investor  emits `IdentityStored` event",
									"_identity": "The address of the user's identity contract",
									"_userAddress": "The address of the user"
								}
							},
							"bindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to add."
								}
							},
							"linkedIdentityRegistries()": {
								"details": "Returns the identity registries linked to the storage contract"
							},
							"modifyStoredIdentity(address,address)": {
								"details": "Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_identity": "The address of the user's new identity contract  emits `IdentityModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"modifyStoredInvestorCountry(address,uint16)": {
								"details": "Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The new country of the user  emits `CountryModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"removeIdentityFromStorage(address)": {
								"details": "Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_userAddress": "The address of the user to be removed  emits `IdentityUnstored` event"
								}
							},
							"storedIdentity(address)": {
								"details": "Returns the onchainID of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"storedInvestorCountry(address)": {
								"details": "Returns the country code of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"unbindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to remove."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityStored` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"bindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to add.\"}},\"linkedIdentityRegistries()\":{\"details\":\"Returns the identity registries linked to the storage contract\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityModified` event\",\"_userAddress\":\"The address of the user\"}},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryModified` event\",\"_userAddress\":\"The address of the user\"}},\"removeIdentityFromStorage(address)\":{\"details\":\"Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityUnstored` event\"}},\"storedIdentity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"storedInvestorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"unbindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CountryModified(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityModified(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"IdentityRegistryBound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added\"},\"IdentityRegistryUnbound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed\"},\"IdentityStored(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityUnstored(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"}},\"kind\":\"user\",\"methods\":{\"bindIdentityRegistry(address)\":{\"notice\":\"Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS\"},\"unbindIdentityRegistry(address)\":{\"notice\":\"Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CountryModified(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityModified(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"IdentityRegistryBound(address)": {
								"notice": "this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added"
							},
							"IdentityRegistryUnbound(address)": {
								"notice": "this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed"
							},
							"IdentityStored(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityUnstored(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							}
						},
						"kind": "user",
						"methods": {
							"bindIdentityRegistry(address)": {
								"notice": "Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS"
							},
							"unbindIdentityRegistry(address)": {
								"notice": "Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract"
							}
						},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/storage/IRSStorage.sol": {
				"IRSStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."
							},
							"_identities": {
								"details": "mapping between a user address and the corresponding identity"
							},
							"_identityRegistries": {
								"details": "array of Identity Registries linked to this storage"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/storage/IRSStorage.sol\":3909:4560  contract IRSStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/storage/IRSStorage.sol\":3909:4560  contract IRSStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a17b6e8db6a4d1febd61c473af580d05b644637998a60217db539d1f3a20b62c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a17b6e8db6a4d1febd61c473af580d05b644637998a60217db539d1f3a20b62c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH28 0x6E8DB6A4D1FEBD61C473AF580D05B644637998A60217DB539D1F3A20 0xB6 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3909:651:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a17b6e8db6a4d1febd61c473af580d05b644637998a60217db539d1f3a20b62c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH28 0x6E8DB6A4D1FEBD61C473AF580D05B644637998A60217DB539D1F3A20 0xB6 0x2C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3909:651:8:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 4560,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a17b6e8db6a4d1febd61c473af580d05b644637998a60217db539d1f3a20b62c64736f6c63430008110033",
									".code": [
										{
											"begin": 3909,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3909,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 4560,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 4560,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/storage/IRSStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"},\"_identities\":{\"details\":\"mapping between a user address and the corresponding identity\"},\"_identityRegistries\":{\"details\":\"array of Identity Registries linked to this storage\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/storage/IRSStorage.sol\":\"IRSStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/storage/IRSStorage.sol\":{\"keccak256\":\"0x7c4be0986e6d546ea6e292b3c296fe97a09038489ef3c8d11045acf8a3eabc4a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eff2f537f10623e30a413cc97586fe9e97b65fec03da2458cc1afbc01daa3334\",\"dweb:/ipfs/QmTi5hGckS4DQRADsaVVqLTbKfhPG9tBo13UFtHLD2wpru\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1321,
								"contract": "contracts t-rex/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "_identities",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Identity)1315_storage)"
							},
							{
								"astId": 1325,
								"contract": "contracts t-rex/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "_identityRegistries",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1330,
								"contract": "contracts t-rex/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IIdentity)278": {
								"encoding": "inplace",
								"label": "contract IIdentity",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Identity)1315_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IRSStorage.Identity)",
								"numberOfBytes": "32",
								"value": "t_struct(Identity)1315_storage"
							},
							"t_struct(Identity)1315_storage": {
								"encoding": "inplace",
								"label": "struct IRSStorage.Identity",
								"members": [
									{
										"astId": 1312,
										"contract": "contracts t-rex/registry/storage/IRSStorage.sol:IRSStorage",
										"label": "identityContract",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IIdentity)278"
									},
									{
										"astId": 1314,
										"contract": "contracts t-rex/registry/storage/IRSStorage.sol:IRSStorage",
										"label": "investorCountry",
										"offset": 20,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"AgentRoleUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "AgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "addAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "isAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agent",
									"type": "address"
								}
							],
							"name": "removeAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":3943:4808  contract AgentRoleUpgradeable is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":3943:4808  contract AgentRoleUpgradeable is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1ffbb064\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84e79842\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x97a6278e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_5:\n      tag_15\n      tag_18\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      tag_13\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_7:\n      tag_15\n      tag_25\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_15\n      tag_28\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n    tag_12:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      tag_31\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4757:4761  bool */\n      dup2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4792:4798  _agent */\n      dup4\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4791  _agents.has */\n      tag_32\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4780:4799  _agents.has(_agent) */\n      jump\t// in\n    tag_31:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4773:4799  return _agents.has(_agent) */\n      swap3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4703:4806  function isAgent(address _agent) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      tag_37\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3256:3257  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3247  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4364:4384  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1f\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1018   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1019   */\n      mstore\n        /* \"#utility.yul\":1036:1054   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4356:4420  require(_agent != address(0), \"invalid argument - zero address\") */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      tag_45\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4437  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4442:4448  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4441  _agents.add */\n      tag_46\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4430:4449  _agents.add(_agent) */\n      jump\t// in\n    tag_45:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4464:4482  AgentAdded(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xf68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4295:4489  function addAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4567:4587  _agent != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1f\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1018   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1019   */\n      mstore\n        /* \"#utility.yul\":1036:1054   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n      tag_43\n        /* \"#utility.yul\":705:1060   */\n      jump\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4559:4623  require(_agent != address(0), \"invalid argument - zero address\") */\n    tag_53:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      tag_55\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4640  _agents */\n      0x00\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4648:4654  _agent */\n      dup3\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4647  _agents.remove */\n      tag_56\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4633:4655  _agents.remove(_agent) */\n      jump\t// in\n    tag_55:\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4670:4690  AgentRemoved(_agent) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/roles/AgentRoleUpgradeable.sol\":4495:4697  function removeAgent(address _agent) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3499:3521  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n      tag_60\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3572:3573  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      tag_43\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3614:3622  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3613  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_32:\n        /* \"contracts t-rex/roles/Roles.sol\":4668:4672  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4692:4713  account != address(0) */\n      dup3\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1306:1308   */\n      0x22\n        /* \"#utility.yul\":1286:1304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1279:1309   */\n      mstore\n        /* \"#utility.yul\":1345:1379   */\n      0x526f6c65733a206163636f756e7420697320746865207a65726f206164647265\n        /* \"#utility.yul\":1325:1343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1318:1380   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":1396:1414   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1389:1421   */\n      mstore\n        /* \"#utility.yul\":1438:1457   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_43\n        /* \"#utility.yul\":1065:1463   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4684:4752  require(account != address(0), \"Roles: account is the zero address\") */\n    tag_64:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4780  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4769:4789  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts t-rex/roles/Roles.sol\":4596:4796  function has(Role storage role, address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2668:2830  function _checkOwner() internal view virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      tag_70\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2750  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2723:2824  if (owner() != _msgSender()) {... */\n      tag_37\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":643:694   */\n      mstore\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_43\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3951:3970  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3881  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:4032  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n    tag_46:\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      tag_77\n        /* \"contracts t-rex/roles/Roles.sol\":4158:4162  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4164:4171  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4157  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4154:4172  has(role, account) */\n      jump\t// in\n    tag_77:\n        /* \"contracts t-rex/roles/Roles.sol\":4153:4172  !has(role, account) */\n      iszero\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1652:1673   */\n      mstore\n        /* \"#utility.yul\":1709:1711   */\n      0x1f\n        /* \"#utility.yul\":1689:1707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1682:1712   */\n      mstore\n        /* \"#utility.yul\":1748:1781   */\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n        /* \"#utility.yul\":1728:1746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1721:1782   */\n      mstore\n        /* \"#utility.yul\":1799:1817   */\n      0x64\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n      tag_43\n        /* \"#utility.yul\":1468:1823   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4145:4208  require(!has(role, account), \"Roles: account already has role\") */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4229  role.bearer */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4238  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4241:4245  true */\n      0x01\n        /* \"contracts t-rex/roles/Roles.sol\":4218:4245  role.bearer[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4077:4252  function add(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n    tag_56:\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      tag_83\n        /* \"contracts t-rex/roles/Roles.sol\":4410:4414  role */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4416:4423  account */\n      dup3\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4409  has */\n      tag_32\n        /* \"contracts t-rex/roles/Roles.sol\":4406:4424  has(role, account) */\n      jump\t// in\n    tag_83:\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2012:2033   */\n      mstore\n        /* \"#utility.yul\":2069:2071   */\n      0x21\n        /* \"#utility.yul\":2049:2067   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2042:2072   */\n      mstore\n        /* \"#utility.yul\":2108:2142   */\n      0x526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c\n        /* \"#utility.yul\":2088:2106   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2081:2143   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":2159:2177   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2152:2183   */\n      mstore\n        /* \"#utility.yul\":2200:2219   */\n      0x84\n      add\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n      tag_43\n        /* \"#utility.yul\":1828:2225   */\n      jump\n        /* \"contracts t-rex/roles/Roles.sol\":4398:4462  require(has(role, account), \"Roles: account does not have role\") */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      and\n        /* \"contracts t-rex/roles/Roles.sol\":4495:4500  false */\n      0x00\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4492  role.bearer[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/roles/Roles.sol\":4472:4500  role.bearer[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts t-rex/roles/Roles.sol\":4327:4507  function remove(Role storage role, address account) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_11:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_90:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_91:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610568806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100e6578063f2fde38b146100f9575b600080fd5b61007a610075366004610502565b61010c565b60405190151581526020015b60405180910390f35b61009761011e565b005b6100976100a7366004610502565b610132565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610086565b6100976100f4366004610502565b6101d7565b610097610107366004610502565b610277565b600061011881836102b5565b92915050565b610126610338565b6101306000610393565b565b61013a610338565b6001600160a01b0381166101955760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6101a0600082610404565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6101df610338565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640161018c565b610240600082610480565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61027f610338565b6001600160a01b0381166102a957604051631e4fbdf760e01b81526000600482015260240161018c565b6102b281610393565b50565b60006001600160a01b0382166103185760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161018c565b506001600160a01b03166000908152602091909152604090205460ff1690565b3361036a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101305760405163118cdaa760e01b815233600482015260240161018c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61040e82826102b5565b1561045b5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161018c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61048a82826102b5565b6104e05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161018c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561051457600080fd5b81356001600160a01b038116811461052b57600080fd5b939250505056fea264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x97 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP2 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x393 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13A PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 PUSH1 0x0 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x393 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x36A PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEB 0xB2 PUSH9 0xCB51D27193F6115D1 PUSH7 0x97B50A50219E49 0xD EXP PUSH12 0xE5B383D9FEC26D0A64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "3943:865:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_396": {
									"entryPoint": 824,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getOwnableStorage_299": {
									"entryPoint": null,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_749": {
									"entryPoint": null,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_467": {
									"entryPoint": 915,
									"id": 467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAgent_1392": {
									"entryPoint": 306,
									"id": 1392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1469": {
									"entryPoint": 1028,
									"id": 1469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_1522": {
									"entryPoint": 693,
									"id": 1522,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAgent_1433": {
									"entryPoint": 268,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAgent_1420": {
									"entryPoint": 471,
									"id": 1420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_1495": {
									"entryPoint": 1152,
									"id": 1495,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_410": {
									"entryPoint": 286,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_438": {
									"entryPoint": 631,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2227:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:11"
															},
															"nodeType": "YulIf",
															"src": "94:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:11"
															},
															"nodeType": "YulIf",
															"src": "200:70:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:11",
														"type": ""
													}
												],
												"src": "14:286:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:11",
														"type": ""
													}
												],
												"src": "305:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "665:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "681:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "686:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "677:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "677:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "690:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:11",
														"type": ""
													}
												],
												"src": "497:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "896:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:11"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "985:33:11",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1028:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1040:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1028:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "870:4:11",
														"type": ""
													}
												],
												"src": "705:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1290:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1301:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1279:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1279:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1345:34:11",
																		"type": "",
																		"value": "Roles: account is the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1318:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1411:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1396:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:11"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1416:4:11",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1430:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1216:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:11",
														"type": ""
													}
												],
												"src": "1065:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1682:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1682:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1748:33:11",
																		"type": "",
																		"value": "Roles: account already has role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1721:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1791:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1791:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1619:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1633:4:11",
														"type": ""
													}
												],
												"src": "1468:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2002:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2053:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2103:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:18:11"
																	},
																	{
																		"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2108:34:11",
																		"type": "",
																		"value": "Roles: account does not have rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:18:11"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2179:3:11",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2192:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2192:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1979:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1993:4:11",
														"type": ""
													}
												],
												"src": "1828:397:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80631ffbb06414610067578063715018a61461008f57806384e79842146100995780638da5cb5b146100ac57806397a6278e146100e6578063f2fde38b146100f9575b600080fd5b61007a610075366004610502565b61010c565b60405190151581526020015b60405180910390f35b61009761011e565b005b6100976100a7366004610502565b610132565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610086565b6100976100f4366004610502565b6101d7565b610097610107366004610502565b610277565b600061011881836102b5565b92915050565b610126610338565b6101306000610393565b565b61013a610338565b6001600160a01b0381166101955760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6101a0600082610404565b6040516001600160a01b038216907ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec590600090a250565b6101df610338565b6001600160a01b0381166102355760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640161018c565b610240600082610480565b6040516001600160a01b038216907fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b90600090a250565b61027f610338565b6001600160a01b0381166102a957604051631e4fbdf760e01b81526000600482015260240161018c565b6102b281610393565b50565b60006001600160a01b0382166103185760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161018c565b506001600160a01b03166000908152602091909152604090205460ff1690565b3361036a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146101305760405163118cdaa760e01b815233600482015260240161018c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61040e82826102b5565b1561045b5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161018c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61048a82826102b5565b6104e05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161018c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006020828403121561051457600080fd5b81356001600160a01b038116811461052b57600080fd5b939250505056fea264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFBB064 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x84E79842 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x97A6278E EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x97 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x97 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP2 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x393 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13A PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 PUSH1 0x0 DUP3 PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xF68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x27F PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x393 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x36A PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x18C JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x40E DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xEB 0xB2 PUSH9 0xCB51D27193F6115D1 PUSH7 0x97B50A50219E49 0xD EXP PUSH12 0xE5B383D9FEC26D0A64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "3943:865:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4703:103;;;;;;:::i;:::-;;:::i;:::-;;;470:14:11;;463:22;445:41;;433:2;418:18;4703:103:9;;;;;;;;3165:101:3;;;:::i;:::-;;4295:194:9;;;;;;:::i;:::-;;:::i;2451:144:3:-;1323:22;2580:8;2451:144;;-1:-1:-1;;;;;2580:8:3;;;643:51:11;;631:2;616:18;2451:144:3;497:203:11;4495:202:9;;;;;;:::i;:::-;;:::i;3415:215:3:-;;;;;;:::i;:::-;;:::i;4703:103:9:-;4757:4;4780:19;4757:4;4792:6;4780:11;:19::i;:::-;4773:26;4703:103;-1:-1:-1;;4703:103:9:o;3165:101:3:-;2344:13;:11;:13::i;:::-;3229:30:::1;3256:1;3229:18;:30::i;:::-;3165:101::o:0;4295:194:9:-;2344:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;4364:20:9;::::1;4356:64;;;::::0;-1:-1:-1;;;4356:64:9;;907:2:11;4356:64:9::1;::::0;::::1;889:21:11::0;946:2;926:18;;;919:30;985:33;965:18;;;958:61;1036:18;;4356:64:9::1;;;;;;;;;4430:19;:7;4442:6:::0;4430:11:::1;:19::i;:::-;4464:18;::::0;-1:-1:-1;;;;;4464:18:9;::::1;::::0;::::1;::::0;;;::::1;4295:194:::0;:::o;4495:202::-;2344:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;4567:20:9;::::1;4559:64;;;::::0;-1:-1:-1;;;4559:64:9;;907:2:11;4559:64:9::1;::::0;::::1;889:21:11::0;946:2;926:18;;;919:30;985:33;965:18;;;958:61;1036:18;;4559:64:9::1;705:355:11::0;4559:64:9::1;4633:22;:7;4648:6:::0;4633:14:::1;:22::i;:::-;4670:20;::::0;-1:-1:-1;;;;;4670:20:9;::::1;::::0;::::1;::::0;;;::::1;4495:202:::0;:::o;3415:215:3:-;2344:13;:11;:13::i;:::-;-1:-1:-1;;;;;3499:22:3;::::1;3495:91;;3544:31;::::0;-1:-1:-1;;;3544:31:3;;3572:1:::1;3544:31;::::0;::::1;643:51:11::0;616:18;;3544:31:3::1;497:203:11::0;3495:91:3::1;3595:28;3614:8;3595:18;:28::i;:::-;3415:215:::0;:::o;4596:200:10:-;4668:4;-1:-1:-1;;;;;4692:21:10;;4684:68;;;;-1:-1:-1;;;4684:68:10;;1267:2:11;4684:68:10;;;1249:21:11;1306:2;1286:18;;;1279:30;1345:34;1325:18;;;1318:62;-1:-1:-1;;;1396:18:11;;;1389:32;1438:19;;4684:68:10;1065:398:11;4684:68:10;-1:-1:-1;;;;;;4769:20:10;:11;:20;;;;;;;;;;;;;;;4596:200::o;2668:162:3:-;966:10:5;2727:7:3;1323:22;2580:8;-1:-1:-1;;;;;2580:8:3;;2451:144;2727:7;-1:-1:-1;;;;;2727:23:3;;2723:101;;2773:40;;-1:-1:-1;;;2773:40:3;;966:10:5;2773:40:3;;;643:51:11;616:18;;2773:40:3;497:203:11;3784:248:3;1323:22;3933:8;;-1:-1:-1;;;;;;3951:19:3;;-1:-1:-1;;;;;3951:19:3;;;;;;;;3985:40;;3933:8;;;;;3985:40;;3857:24;;3985:40;3847:185;;3784:248;:::o;4077:175:10:-;4154:18;4158:4;4164:7;4154:3;:18::i;:::-;4153:19;4145:63;;;;-1:-1:-1;;;4145:63:10;;1670:2:11;4145:63:10;;;1652:21:11;1709:2;1689:18;;;1682:30;1748:33;1728:18;;;1721:61;1799:18;;4145:63:10;1468:355:11;4145:63:10;-1:-1:-1;;;;;4218:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;4218:27:10;4241:4;4218:27;;;4077:175::o;4327:180::-;4406:18;4410:4;4416:7;4406:3;:18::i;:::-;4398:64;;;;-1:-1:-1;;;4398:64:10;;2030:2:11;4398:64:10;;;2012:21:11;2069:2;2049:18;;;2042:30;2108:34;2088:18;;;2081:62;-1:-1:-1;;;2159:18:11;;;2152:31;2200:19;;4398:64:10;1828:397:11;4398:64:10;-1:-1:-1;;;;;4472:20:10;4495:5;4472:20;;;;;;;;;;;:28;;-1:-1:-1;;4472:28:10;;;4327:180::o;14:286:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:11;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "276800",
								"executionCost": "318",
								"totalCost": "277118"
							},
							"external": {
								"addAgent(address)": "30323",
								"isAgent(address)": "2582",
								"owner()": "2345",
								"removeAgent(address)": "30358",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 4808,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042ebb2680cb51d27193f6115d16697b50a50219e490d0a6be5b383d9fec26d0a64736f6c63430008110033",
									".code": [
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "1FFBB064"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "84E79842"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "97A6278E"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 4808,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4780,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4780,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3256,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3229,
											"end": 3259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "PUSH",
											"source": 11,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 958,
											"end": 1019,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4356,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4430,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4430,
											"end": 4449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4430,
											"end": 4449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F68E73CEC97F2D70AA641FB26E87A4383686E2EFACB648F2165AEB02AC562EC5"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4482,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 985,
											"end": 1018,
											"name": "PUSH",
											"source": 11,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 958,
											"end": 1019,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 705,
											"end": 1060,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4559,
											"end": 4623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4633,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4633,
											"end": 4655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4633,
											"end": 4655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "ED9C8AD8D5A0A66898EA49D2956929C93AE2E8BD50281B2ED897C5D1A6737E0B"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4690,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3595,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4596,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4713,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1345,
											"end": 1379,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420697320746865207A65726F206164647265"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1421,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1065,
											"end": 1463,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 3,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4077,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4154,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1721,
											"end": 1782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1468,
											"end": 1823,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4145,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4238,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4245,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4245,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4327,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4410,
											"end": 4414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4406,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2033,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1828,
											"end": 2225,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4492,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4500,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/storage/IRSStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAgent(address)": "84e79842",
							"isAgent(address)": "1ffbb064",
							"owner()": "8da5cb5b",
							"removeAgent(address)": "97a6278e",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":\"AgentRoleUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]},\"contracts t-rex/roles/AgentRoleUpgradeable.sol\":{\"keccak256\":\"0x8e5c6409d5d25a3d73e615fe568ea72edb0dae9e2393f392ec694b33655727e5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://327c9f2b5f56bf3a969b852c4c22dfc6a67eb0e97ed0b15b386d930387ced245\",\"dweb:/ipfs/QmWMwpykNT2cihW4mVWtEcKwNtQ96YLnSJZCSzRCmBE9PD\"]},\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1344,
								"contract": "contracts t-rex/roles/AgentRoleUpgradeable.sol:AgentRoleUpgradeable",
								"label": "_agents",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)1442_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)1442_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 1441,
										"contract": "contracts t-rex/roles/AgentRoleUpgradeable.sol:AgentRoleUpgradeable",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/roles/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/roles/Roles.sol\":3926:4798  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CREATE SELFDESTRUCT 0x25 LT PUSH32 0xF1CDFF3D560AF952AF1196B7440274F8575AE8B9F0A0F0B4535064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3926:872:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CREATE SELFDESTRUCT 0x25 LT PUSH32 0xF1CDFF3D560AF952AF1196B7440274F8575AE8B9F0A0F0B4535064736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3926:872:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3926,
									"end": 4798,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ef0ff25107ff1cdff3d560af952af1196b7440274f8575ae8b9f0a0f0b4535064736f6c63430008110033",
									".code": [
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4798,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol",
								"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
								"contracts t-rex/registry/storage/IRSStorage.sol",
								"contracts t-rex/roles/AgentRoleUpgradeable.sol",
								"contracts t-rex/roles/Roles.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/roles/Roles.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts t-rex/roles/Roles.sol\":{\"keccak256\":\"0xb69d89c5433a8f4fdfed0c175c57b0fa2e9c3d38a4f055b0106c8508d6f61191\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://317653424be944ca693bd934c21ab500eccd37eea765d4d7901f8102e736310b\",\"dweb:/ipfs/QmXijBCZ6C8ATZY9CxFn1HvuQFuLvSbfyZCjXQ6SJkEWBc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						]
					},
					"id": 147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:0",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC734",
							"nameLocation": "156:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:0",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 9,
									"name": "Approved",
									"nameLocation": "338:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "347:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "376:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:0"
									},
									"src": "332:59:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:0",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 20,
									"name": "Executed",
									"nameLocation": "622:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "631:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "660:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "680:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:0"
									},
									"src": "616:99:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:0",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 31,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "922:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "951:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "971:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "994:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 28,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:0"
									},
									"src": "897:109:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:0",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 42,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1190:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1219:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1239:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 39,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:0"
									},
									"src": "1168:106:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:0",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 51,
									"name": "KeyAdded",
									"nameLocation": "1444:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1453:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1474:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1499:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:0"
									},
									"src": "1438:86:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:0",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 60,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1712:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 53,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1733:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1758:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:0"
									},
									"src": "1695:88:0"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:0",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2129:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:0"
									},
									"scope": 146,
									"src": "2113:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:0",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2440:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2486:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:0"
									},
									"scope": 146,
									"src": "2423:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:0",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2834:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:0"
									},
									"scope": 146,
									"src": "2801:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:0",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3393:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3422:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3470:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:0"
									},
									"scope": 146,
									"src": "3376:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:0",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3633:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3677:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:0"
									},
									"scope": 146,
									"src": "3580:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:0",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3800:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3836:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:0"
									},
									"scope": 146,
									"src": "3776:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:0",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3986:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4027:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 132,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:0"
									},
									"scope": 146,
									"src": "3960:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:0",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4266:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:0"
									},
									"scope": 146,
									"src": "4188:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "146:4135:0",
							"usedErrors": []
						}
					],
					"src": "36:4246:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							254
						]
					},
					"id": 255,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:1",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "IERC735",
							"nameLocation": "158:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:1",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 166,
									"name": "ClaimAdded",
									"nameLocation": "323:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "343:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "376:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "431:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "488:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "508:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:1"
									},
									"src": "317:203:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:1",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 183,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "705:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "738:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "769:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "793:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "825:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "850:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "870:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:1"
									},
									"src": "677:205:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:1",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 200,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1087:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1120:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1151:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1175:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1232:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1252:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:1"
									},
									"src": "1059:205:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:1",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1740:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1764:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1789:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1813:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1848:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1878:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1922:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:1"
									},
									"scope": 254,
									"src": "1713:233:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:1",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2171:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2207:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:1"
									},
									"scope": 254,
									"src": "2150:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:1",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2404:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2457:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2480:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2528:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2560:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2587:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:1"
									},
									"scope": 254,
									"src": "2386:220:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:1",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2708:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2746:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 249,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 250,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:1"
									},
									"scope": 254,
									"src": "2680:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 255,
							"src": "148:2627:1",
							"usedErrors": []
						}
					],
					"src": "36:2740:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							278
						]
					},
					"id": 279,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 147,
							"src": "61:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 255,
							"src": "85:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "IERC734",
										"nameLocations": [
											"178:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 146,
										"src": "178:7:2"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:2"
								},
								{
									"baseName": {
										"id": 261,
										"name": "IERC735",
										"nameLocations": [
											"187:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 254,
										"src": "187:7:2"
									},
									"id": 262,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:2"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 278,
							"linearizedBaseContracts": [
								278,
								254,
								146
							],
							"name": "IIdentity",
							"nameLocation": "165:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "201:334:2",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "549:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "581:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "571:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 264,
														"name": "IIdentity",
														"nameLocations": [
															"571:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "571:9:2"
													},
													"referencedDeclaration": 278,
													"src": "571:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "608:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "600:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "643:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "628:18:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "671:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "656:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:115:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "704:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:2"
									},
									"scope": 278,
									"src": "540:170:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 279,
							"src": "155:557:2",
							"usedErrors": []
						}
					],
					"src": "36:677:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							767
						],
						"OwnableUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 282,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 768,
							"src": "128:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 281,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 767,
										"src": "136:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 284,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"814:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "814:18:3"
									},
									"id": 285,
									"nodeType": "InheritanceSpecifier",
									"src": "814:18:3"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 283,
								"nodeType": "StructuredDocumentation",
								"src": "285:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								767,
								721
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "791:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "949:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "941:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 286,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "941:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "916:14:3",
									"nodeType": "StructDefinition",
									"scope": 468,
									"src": "909:53:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 291,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1104:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1079:116:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 289,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1079:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 290,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1129:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1280:81:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1299:56:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1313:32:3",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1323:22:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 295,
														"isOffset": false,
														"isSlot": true,
														"src": "1313:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": false,
														"src": "1323:22:3",
														"valueSize": 1
													}
												],
												"id": 297,
												"nodeType": "InlineAssembly",
												"src": "1290:65:3"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1211:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:2:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1277:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1254:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "OwnableStorage",
														"nameLocations": [
															"1254:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "1254:14:3"
													},
													"referencedDeclaration": 288,
													"src": "1254:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:26:3"
									},
									"scope": 468,
									"src": "1202:159:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "1367:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 304,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1463:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1498:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1490:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:17:3"
									},
									"src": "1457:50:3"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1513:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 309,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1606:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1626:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:15:3"
									},
									"src": "1600:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 315,
									"name": "OwnershipTransferred",
									"nameLocation": "1653:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1690:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1674:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1721:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1705:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:57:3"
									},
									"src": "1647:84:3"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1929:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "1964:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 323,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1939:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1939:38:3"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1737:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 320,
												"name": "onlyInitializing",
												"nameLocations": [
													"1912:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 630,
												"src": "1912:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1912:16:3"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1866:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1889:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1881:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:22:3"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:3"
									},
									"scope": 468,
									"src": "1857:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "2072:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2086:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2110:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2102:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 336,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2102:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2102:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2086:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "IfStatement",
												"src": "2082:95:3",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "2114:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2163:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2155:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 342,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2155:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2155:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 341,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "2135:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2135:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 347,
															"nodeType": "RevertStatement",
															"src": "2128:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2205:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "2186:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2186:32:3"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 332,
												"name": "onlyInitializing",
												"nameLocations": [
													"2055:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 630,
												"src": "2055:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2055:16:3"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1999:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2032:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2024:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:22:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:0:3"
									},
									"scope": 468,
									"src": "1990:235:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2334:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 358,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2344:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2344:13:3"
											},
											{
												"id": 361,
												"nodeType": "PlaceholderStatement",
												"src": "2367:1:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2231:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 363,
									"name": "onlyOwner",
									"nameLocation": "2322:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:2:3"
									},
									"src": "2313:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2506:89:3",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2539:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "2516:24:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 370,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 369,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2516:14:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 288,
																"src": "2516:14:3"
															},
															"referencedDeclaration": 288,
															"src": "2516:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 372,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2543:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$288_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:47:3"
											},
											{
												"expression": {
													"expression": {
														"id": 375,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2580:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2582:6:3",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 287,
													"src": "2580:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 368,
												"id": 377,
												"nodeType": "Return",
												"src": "2573:15:3"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2381:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2460:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2497:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:3"
									},
									"scope": 468,
									"src": "2451:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "2713:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 383,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "2727:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2727:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 385,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "2738:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2738:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2727:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "2723:101:3",
												"trueBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "2752:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 389,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "2800:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2800:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 388,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "2773:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2773:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 392,
															"nodeType": "RevertStatement",
															"src": "2766:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2601:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2677:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2713:0:3"
									},
									"scope": 468,
									"src": "2668:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3219:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3256:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3248:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 403,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3248:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3248:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 402,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "3229:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "3229:30:3"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "2836:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 400,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 399,
												"name": "onlyOwner",
												"nameLocations": [
													"3209:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "3209:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3209:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3174:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:3"
									},
									"scope": 468,
									"src": "3165:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3485:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "3499:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3519:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 419,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3511:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3511:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3499:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "3495:91:3",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "3523:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3572:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3564:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 425,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3564:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3564:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 424,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "3544:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3544:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "3537:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3614:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 433,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "3595:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "3595:28:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3272:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 415,
												"name": "onlyOwner",
												"nameLocations": [
													"3475:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "3475:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3475:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3424:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3450:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3442:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:18:3"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3485:0:3"
									},
									"scope": 468,
									"src": "3415:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "3847:185:3",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3880:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "3857:24:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 445,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 444,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3857:14:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 288,
																"src": "3857:14:3"
															},
															"referencedDeclaration": 288,
															"src": "3857:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 447,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "3884:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$288_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3884:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3857:47:3"
											},
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3922:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "3914:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3914:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"expression": {
														"id": 452,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3933:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3935:6:3",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 287,
													"src": "3933:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3914:27:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 455,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3951:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$288_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3953:6:3",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "3951:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "3962:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3951:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "3951:19:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 462,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4006:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4016:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 461,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3985:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3985:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "3980:45:3"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3636:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3793:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3820:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "3812:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:18:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:0:3"
									},
									"scope": 468,
									"src": "3784:248:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 469,
							"src": "773:3261:3",
							"usedErrors": [
								304,
								309,
								484,
								487
							]
						}
					],
					"src": "102:3933:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:4",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "Initializable",
							"nameLocation": "2367:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"id": 478,
									"members": [
										{
											"constant": false,
											"id": 474,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 478,
											"src": "2813:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 473,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 477,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 478,
											"src": "2950:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 476,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:4",
									"nodeType": "StructDefinition",
									"scope": 721,
									"src": "2685:290:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 481,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 721,
									"src": "3098:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 479,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 480,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:4",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 484,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:4"
									},
									"src": "3285:30:4"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:4",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 487,
									"name": "NotInitializing",
									"nameLocation": "3389:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:4"
									},
									"src": "3383:24:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:4",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 492,
									"name": "Initialized",
									"nameLocation": "3514:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3526:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 489,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:4"
									},
									"src": "3508:34:4"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4092:1081:4",
										"statements": [
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4158:30:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 496,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 495,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 478,
																"src": "4158:20:4"
															},
															"referencedDeclaration": 478,
															"src": "4158:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 498,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "4191:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$478_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:4"
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4279:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:4",
													"subExpression": {
														"expression": {
															"id": 503,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4302:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:4",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4302:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:4"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4327:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 507,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"expression": {
														"id": 509,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "4348:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:4",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 474,
													"src": "4348:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:4"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4706:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 514,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4726:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 517,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4746:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:4"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4770:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 520,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 522,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4790:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 527,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$721",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$721",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 525,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:4",
														"subExpression": {
															"id": 535,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "4856:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:4",
														"subExpression": {
															"id": 537,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4873:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "4851:91:4",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "4887:55:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 540,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4908:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "RevertStatement",
															"src": "4901:30:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 545,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4951:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:4",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "4951:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:4"
											},
											{
												"condition": {
													"id": 551,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "4983:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "4979:67:4",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "4999:47:4",
													"statements": [
														{
															"expression": {
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 552,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "5013:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:4",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "5013:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 557,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:4"
														}
													]
												}
											},
											{
												"id": 560,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:4"
											},
											{
												"condition": {
													"id": 561,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "5070:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "5066:101:4",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "5086:81:4",
													"statements": [
														{
															"expression": {
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 562,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "5100:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:4",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "5100:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 567,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 568,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "5142:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "EmitStatement",
															"src": "5137:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:4",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 575,
									"name": "initializer",
									"nameLocation": "4078:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:4"
									},
									"src": "4069:1104:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "6291:392:4",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "6357:30:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 478,
																"src": "6357:20:4"
															},
															"referencedDeclaration": 478,
															"src": "6357:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "6390:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$478_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 586,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "6431:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:4",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "6431:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 588,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "6450:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:4",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 474,
															"src": "6450:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 590,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "6468:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 597,
												"nodeType": "IfStatement",
												"src": "6427:105:4",
												"trueBody": {
													"id": 596,
													"nodeType": "Block",
													"src": "6477:55:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 593,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6498:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 595,
															"nodeType": "RevertStatement",
															"src": "6491:30:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 598,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "6541:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:4",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "6541:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "6558:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:4"
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 604,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "6575:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:4",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "6575:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:4"
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:4"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 611,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "6618:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:4",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "6618:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "6668:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 617,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "6656:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "6651:25:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:4",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 622,
									"name": "reinitializer",
									"nameLocation": "6261:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6275:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 577,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:4"
									},
									"src": "6252:431:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6921:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 625,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "6931:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:4"
											},
											{
												"id": 628,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:4",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 630,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:4"
									},
									"src": "6893:76:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "7136:89:4",
										"statements": [
											{
												"condition": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 634,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "7151:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "7146:73:4",
												"trueBody": {
													"id": 640,
													"nodeType": "Block",
													"src": "7170:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 637,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "7191:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 639,
															"nodeType": "RevertStatement",
															"src": "7184:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:4",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:4"
									},
									"scope": 721,
									"src": "7084:141:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "7760:373:4",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "7826:30:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 648,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 647,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 478,
																"src": "7826:20:4"
															},
															"referencedDeclaration": 478,
															"src": "7826:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 650,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "7859:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$478_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:4"
											},
											{
												"condition": {
													"expression": {
														"id": 653,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7900:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:4",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 477,
													"src": "7900:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "7896:76:4",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "7917:55:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 655,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "7938:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 657,
															"nodeType": "RevertStatement",
															"src": "7931:30:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 660,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "7985:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:4",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "7985:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 663,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 662,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"nodeType": "IfStatement",
												"src": "7981:146:4",
												"trueBody": {
													"id": 686,
													"nodeType": "Block",
													"src": "8021:106:4",
													"statements": [
														{
															"expression": {
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 668,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "8035:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:4",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 474,
																	"src": "8035:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 672,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 671,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:4",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 680,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:4",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 679,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:4",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 678,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "8087:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 685,
															"nodeType": "EmitStatement",
															"src": "8082:34:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:4",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:4"
									},
									"scope": 721,
									"src": "7711:422:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "8308:63:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 695,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "8325:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$478_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:4",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 474,
													"src": "8325:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 694,
												"id": 698,
												"nodeType": "Return",
												"src": "8318:46:4"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:4",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8300:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 692,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:4"
									},
									"scope": 721,
									"src": "8243:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "8543:64:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 706,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "8560:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$478_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:4",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 477,
													"src": "8560:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 705,
												"id": 709,
												"nodeType": "Return",
												"src": "8553:47:4"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:4",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8537:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:4"
									},
									"scope": 721,
									"src": "8487:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "8827:80:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:4",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 481,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:4",
														"valueSize": 1
													}
												],
												"id": 718,
												"nodeType": "InlineAssembly",
												"src": "8837:64:4"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:4",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8795:30:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 714,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 478,
														"src": "8795:20:4"
													},
													"referencedDeclaration": 478,
													"src": "8795:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$478_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:4"
									},
									"scope": 721,
									"src": "8737:170:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 722,
							"src": "2349:6560:4",
							"usedErrors": [
								484,
								487
							]
						}
					],
					"src": "113:8797:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							767
						],
						"Initializable": [
							721
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 768,
							"sourceUnit": 722,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 727,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "728:13:5"
									},
									"id": 728,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 726,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767,
								721
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 630,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 767,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 736,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 630,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 767,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 745,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 744,
												"id": 747,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 767,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 754,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 753,
												"id": 756,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 767,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 762,
												"id": 764,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 767,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 768,
							"src": "688:505:5",
							"usedErrors": [
								484,
								487
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"contracts t-rex/registry/implementation/IdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/implementation/IdentityRegistryStorage.sol",
					"exportedSymbols": {
						"AgentRoleUpgradeable": [
							1434
						],
						"ContextUpgradeable": [
							767
						],
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							278
						],
						"IIdentityRegistryStorage": [
							1306
						],
						"IRSStorage": [
							1331
						],
						"IdentityRegistryStorage": [
							1190
						],
						"OwnableUpgradeable": [
							468
						],
						"Roles": [
							1523
						]
					},
					"id": 1191,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:6"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1191,
							"sourceUnit": 279,
							"src": "3842:64:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/roles/AgentRoleUpgradeable.sol",
							"file": "../../roles/AgentRoleUpgradeable.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1191,
							"sourceUnit": 1435,
							"src": "3908:46:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1191,
							"sourceUnit": 1307,
							"src": "3955:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/storage/IRSStorage.sol",
							"file": "../storage/IRSStorage.sol",
							"id": 773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1191,
							"sourceUnit": 1332,
							"src": "4007:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "IIdentityRegistryStorage",
										"nameLocations": [
											"4080:24:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1306,
										"src": "4080:24:6"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "4080:24:6"
								},
								{
									"baseName": {
										"id": 776,
										"name": "AgentRoleUpgradeable",
										"nameLocations": [
											"4106:20:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1434,
										"src": "4106:20:6"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "4106:20:6"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IRSStorage",
										"nameLocations": [
											"4128:10:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1331,
										"src": "4128:10:6"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "4128:10:6"
								}
							],
							"canonicalName": "IdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1190,
							"linearizedBaseContracts": [
								1190,
								1331,
								1434,
								468,
								767,
								721,
								1306
							],
							"name": "IdentityRegistryStorage",
							"nameLocation": "4053:23:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "4183:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4208:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4212:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4208:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "4193:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "4193:26:6"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 782,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 781,
												"name": "initializer",
												"nameLocations": [
													"4171:11:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 575,
												"src": "4171:11:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4171:11:6"
										}
									],
									"name": "init",
									"nameLocation": "4155:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4159:2:6"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4183:0:6"
									},
									"scope": 1190,
									"src": "4146:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1246
									],
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "4462:447:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 805,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "4493:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4517:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4509:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 806,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4509:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4509:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4493:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 813,
																			"name": "_identity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 796,
																			"src": "4543:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IIdentity_$278",
																				"typeString": "contract IIdentity"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IIdentity_$278",
																				"typeString": "contract IIdentity"
																			}
																		],
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4535:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 811,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4535:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4535:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4565:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4557:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 815,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4557:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4557:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4535:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4493:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4578:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4472:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4472:140:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "4472:140:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 827,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "4638:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 829,
																			"indexExpression": {
																				"id": 828,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "4650:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4638:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$1315_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4664:16:6",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1312,
																		"src": "4638:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4630:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 825,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4630:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4630:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4693:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4685:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 832,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4685:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4685:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4630:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616464726573732073746f72656420616c7265616479",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4697:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0",
																"typeString": "literal_string \"address stored already\""
															},
															"value": "address stored already"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0",
																"typeString": "literal_string \"address stored already\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4622:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4622:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "4622:100:6"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 840,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "4732:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 842,
															"indexExpression": {
																"id": 841,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "4744:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4732:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$1315_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4758:16:6",
														"memberName": "identityContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "4732:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "_identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "4777:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														}
													},
													"src": "4732:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "4732:54:6"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 847,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "4796:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 849,
															"indexExpression": {
																"id": 848,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "4808:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4796:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$1315_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:15:6",
														"memberName": "investorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1314,
														"src": "4796:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 851,
														"name": "_country",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4840:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4796:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "4796:52:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 855,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4878:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4892:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														],
														"id": 854,
														"name": "IdentityStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "4863:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$278_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "4858:44:6"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "4232:77:6",
										"text": "  @dev See {IIdentityRegistryStorage-addIdentityToStorage}."
									},
									"functionSelector": "a53410dd",
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 802,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 801,
												"name": "onlyAgent",
												"nameLocations": [
													"4452:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1364,
												"src": "4452:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4452:9:6"
										}
									],
									"name": "addIdentityToStorage",
									"nameLocation": "4323:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 800,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4443:8:6"
									},
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "4361:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4353:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4353:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "4393:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4383:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 795,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 794,
														"name": "IIdentity",
														"nameLocations": [
															"4383:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "4383:9:6"
													},
													"referencedDeclaration": 278,
													"src": "4383:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "4419:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4412:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 797,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4412:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:90:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4462:0:6"
									},
									"scope": 1190,
									"src": "4314:595:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "5098:462:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 873,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5129:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5153:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 874,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5129:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 881,
																			"name": "_identity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "5179:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IIdentity_$278",
																				"typeString": "contract IIdentity"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IIdentity_$278",
																				"typeString": "contract IIdentity"
																			}
																		],
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5171:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 879,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5171:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5171:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5201:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5193:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 883,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5193:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5193:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5171:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5129:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5108:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5108:140:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "5108:140:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 895,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "5274:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 897,
																			"indexExpression": {
																				"id": 896,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "5286:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5274:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$1315_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5300:16:6",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1312,
																		"src": "5274:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5266:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 893,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5266:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5266:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5329:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5321:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 900,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5321:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5321:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5266:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5333:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5258:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5258:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "5258:100:6"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "5378:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "5368:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 909,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 908,
																"name": "IIdentity",
																"nameLocations": [
																	"5368:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "5368:9:6"
															},
															"referencedDeclaration": 278,
															"src": "5368:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 911,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5392:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 913,
														"indexExpression": {
															"id": 912,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5404:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5392:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$1315_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5418:16:6",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "5392:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5368:66:6"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 916,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5444:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 918,
															"indexExpression": {
																"id": 917,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5456:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5444:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$1315_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5470:16:6",
														"memberName": "identityContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "5444:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 920,
														"name": "_identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5489:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														}
													},
													"src": "5444:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "5444:54:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 924,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "5530:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 925,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5543:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														],
														"id": 923,
														"name": "IdentityModified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "5513:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IIdentity_$278_$_t_contract$_IIdentity_$278_$returns$__$",
															"typeString": "function (contract IIdentity,contract IIdentity)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "5508:45:6"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "4915:77:6",
										"text": "  @dev See {IIdentityRegistryStorage-modifyStoredIdentity}."
									},
									"functionSelector": "e805cf86",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 870,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 869,
												"name": "onlyAgent",
												"nameLocations": [
													"5088:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1364,
												"src": "5088:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5088:9:6"
										}
									],
									"name": "modifyStoredIdentity",
									"nameLocation": "5006:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 868,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5079:8:6"
									},
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "5035:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5027:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "5059:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5049:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "IIdentity",
														"nameLocations": [
															"5049:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "5049:9:6"
													},
													"referencedDeclaration": 278,
													"src": "5049:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5026:43:6"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5098:0:6"
									},
									"scope": 1190,
									"src": "4997:563:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1260
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "5759:313:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "5777:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5801:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5793:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5793:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5793:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5777:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5805:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "5769:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 953,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "5865:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 955,
																			"indexExpression": {
																				"id": 954,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "5877:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5865:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$1315_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5891:16:6",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1312,
																		"src": "5865:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5857:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5857:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5857:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5920:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5912:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 958,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5912:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5912:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5857:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5924:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5849:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5849:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "5849:100:6"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 966,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5959:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 968,
															"indexExpression": {
																"id": 967,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "5971:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5959:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$1315_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5985:15:6",
														"memberName": "investorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1314,
														"src": "5959:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "_country",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "6003:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5959:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "5959:52:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 974,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "6042:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "6056:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 973,
														"name": "CountryModified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "6026:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6026:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "6021:44:6"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "5566:84:6",
										"text": "  @dev See {IIdentityRegistryStorage-modifyStoredInvestorCountry}."
									},
									"functionSelector": "9f3418d5",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 938,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 937,
												"name": "onlyAgent",
												"nameLocations": [
													"5749:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1364,
												"src": "5749:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5749:9:6"
										}
									],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "5664:27:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5740:8:6"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "5700:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5692:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "5721:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "5714:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 933,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5714:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5691:39:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5759:0:6"
									},
									"scope": 1190,
									"src": "5655:417:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1252
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "6250:373:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "6268:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6292:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6284:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6284:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6284:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6268:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6296:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6260:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6260:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "6260:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1001,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "6356:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 1003,
																			"indexExpression": {
																				"id": 1002,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "6368:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6356:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$1315_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6382:16:6",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1312,
																		"src": "6356:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$278",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6348:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 999,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6348:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6348:51:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6411:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6403:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1006,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6403:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6403:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6348:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6415:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6340:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "6340:100:6"
											},
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "6460:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "6450:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$278",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 1015,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1014,
																"name": "IIdentity",
																"nameLocations": [
																	"6450:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "6450:9:6"
															},
															"referencedDeclaration": 278,
															"src": "6450:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1017,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "6474:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 1019,
														"indexExpression": {
															"id": 1018,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "6486:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6474:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$1315_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6500:16:6",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "6474:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6450:66:6"
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6526:32:6",
													"subExpression": {
														"baseExpression": {
															"id": 1022,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "6533:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 1024,
														"indexExpression": {
															"id": 1023,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "6545:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6533:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$1315_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "6526:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1028,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "6590:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6604:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$278",
																"typeString": "contract IIdentity"
															}
														],
														"id": 1027,
														"name": "IdentityUnstored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "6573:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$278_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6573:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "EmitStatement",
												"src": "6568:48:6"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "6078:82:6",
										"text": "  @dev See {IIdentityRegistryStorage-removeIdentityFromStorage}."
									},
									"functionSelector": "cf191bcd",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 985,
												"name": "onlyAgent",
												"nameLocations": [
													"6240:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1364,
												"src": "6240:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6240:9:6"
										}
									],
									"name": "removeIdentityFromStorage",
									"nameLocation": "6174:25:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 984,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6231:8:6"
									},
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6208:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6200:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:22:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6250:0:6"
									},
									"scope": 1190,
									"src": "6165:458:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "6786:329:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "_identityRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "6804:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6833:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6825:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6825:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6825:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6804:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6837:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6796:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "6796:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1051,
																	"name": "_identityRegistries",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "6889:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6909:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6889:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "333030",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6918:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "6889:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f203120495253",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6923:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c",
																"typeString": "literal_string \"cannot bind more than 300 IR to 1 IRS\""
															},
															"value": "cannot bind more than 300 IR to 1 IRS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c",
																"typeString": "literal_string \"cannot bind more than 300 IR to 1 IRS\""
															}
														],
														"id": 1050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6881:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "6881:82:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1059,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "6982:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "addAgent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "6973:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "6973:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7035:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1062,
															"name": "_identityRegistries",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7010:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7030:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7010:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7010:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "7010:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1069,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7090:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1068,
														"name": "IdentityRegistryBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "7068:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "EmitStatement",
												"src": "7063:45:6"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "6629:77:6",
										"text": "  @dev See {IIdentityRegistryStorage-bindIdentityRegistry}."
									},
									"functionSelector": "690a49f9",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "6720:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6777:8:6"
									},
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "6749:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "6741:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:27:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6786:0:6"
									},
									"scope": 1190,
									"src": "6711:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "7282:600:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "_identityRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "7300:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7329:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1082,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7321:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7300:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7333:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7292:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7292:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "7292:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1091,
																	"name": "_identityRegistries",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "7385:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7405:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7385:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7414:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7385:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6964656e74697479207265676973747279206973206e6f742073746f726564",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7417:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc",
																"typeString": "literal_string \"identity registry is not stored\""
															},
															"value": "identity registry is not stored"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc",
																"typeString": "literal_string \"identity registry is not stored\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7377:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7377:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "7377:74:6"
											},
											{
												"assignments": [
													1099
												],
												"declarations": [
													{
														"constant": false,
														"id": 1099,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "7469:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "7461:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1098,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7461:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"expression": {
														"id": 1100,
														"name": "_identityRegistries",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "7478:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7498:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7478:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7461:43:6"
											},
											{
												"body": {
													"id": 1136,
													"nodeType": "Block",
													"src": "7551:228:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1113,
																		"name": "_identityRegistries",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "7569:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"id": 1114,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "7589:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7569:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1116,
																	"name": "_identityRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "7595:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7569:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1135,
															"nodeType": "IfStatement",
															"src": "7565:204:6",
															"trueBody": {
																"id": 1134,
																"nodeType": "Block",
																"src": "7614:155:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1118,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "7632:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1120,
																				"indexExpression": {
																					"id": 1119,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "7652:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7632:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1121,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "7657:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1125,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1122,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1099,
																						"src": "7677:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7686:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "7677:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7657:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7632:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1127,
																		"nodeType": "ExpressionStatement",
																		"src": "7632:56:6"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1128,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "7706:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7726:3:6",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "7706:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7706:25:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1132,
																		"nodeType": "ExpressionStatement",
																		"src": "7706:25:6"
																	},
																	{
																		"id": 1133,
																		"nodeType": "Break",
																		"src": "7749:5:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "7534:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1108,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "7538:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7534:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"initializationExpression": {
													"assignments": [
														1104
													],
													"declarations": [
														{
															"constant": false,
															"id": 1104,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7527:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1137,
															"src": "7519:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1103,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7519:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1106,
													"initialValue": {
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7531:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7519:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7546:3:6",
														"subExpression": {
															"id": 1110,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "7546:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ExpressionStatement",
													"src": "7546:3:6"
												},
												"nodeType": "ForStatement",
												"src": "7514:265:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "7800:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1138,
														"name": "removeAgent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "7788:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7788:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "7788:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1143,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "7857:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1142,
														"name": "IdentityRegistryUnbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "7833:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7833:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "EmitStatement",
												"src": "7828:47:6"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "7121:79:6",
										"text": "  @dev See {IIdentityRegistryStorage-unbindIdentityRegistry}."
									},
									"functionSelector": "97a012f7",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "7214:22:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1078,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7273:8:6"
									},
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "7245:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "7237:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:27:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7282:0:6"
									},
									"scope": 1190,
									"src": "7205:677:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1288
									],
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "8060:43:6",
										"statements": [
											{
												"expression": {
													"id": 1155,
													"name": "_identityRegistries",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1325,
													"src": "8077:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1156,
												"nodeType": "Return",
												"src": "8070:26:6"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "7888:81:6",
										"text": "  @dev See {IIdentityRegistryStorage-linkedIdentityRegistries}."
									},
									"functionSelector": "bf9eb959",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "7983:24:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1150,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8024:8:6"
									},
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8007:2:6"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "8042:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1151,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8042:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1152,
													"nodeType": "ArrayTypeName",
													"src": "8042:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8041:18:6"
									},
									"scope": 1190,
									"src": "7974:129:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "8274:66:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1168,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "8291:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 1170,
														"indexExpression": {
															"id": 1169,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "8303:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8291:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$1315_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8317:16:6",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "8291:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1172,
												"nodeType": "Return",
												"src": "8284:49:6"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "8109:71:6",
										"text": "  @dev See {IIdentityRegistryStorage-storedIdentity}."
									},
									"functionSelector": "7988d3a5",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "8194:14:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8245:8:6"
									},
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8217:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "8209:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8209:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8208:22:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "8263:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "IIdentity",
														"nameLocations": [
															"8263:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "8263:9:6"
													},
													"referencedDeclaration": 278,
													"src": "8263:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8262:11:6"
									},
									"scope": 1190,
									"src": "8185:155:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1305
									],
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "8522:65:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1183,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "8539:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 1185,
														"indexExpression": {
															"id": 1184,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8551:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8539:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$1315_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8565:15:6",
													"memberName": "investorCountry",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1314,
													"src": "8539:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1182,
												"id": 1187,
												"nodeType": "Return",
												"src": "8532:48:6"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8346:78:6",
										"text": "  @dev See {IIdentityRegistryStorage-storedInvestorCountry}."
									},
									"functionSelector": "727e13bc",
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "8438:21:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1179,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8496:8:6"
									},
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8468:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "8460:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8459:22:6"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "8514:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1180,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8514:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8513:8:6"
									},
									"scope": 1190,
									"src": "8429:158:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1191,
							"src": "4044:4545:6",
							"usedErrors": [
								304,
								309,
								484,
								487
							]
						}
					],
					"src": "3817:4773:6"
				},
				"id": 6
			},
			"contracts t-rex/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							278
						],
						"IIdentityRegistryStorage": [
							1306
						]
					},
					"id": 1307,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1192,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:7"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1307,
							"sourceUnit": 279,
							"src": "3842:64:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1306,
							"linearizedBaseContracts": [
								1306
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "3918:24:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "3966:306:7",
										"text": "  this event is emitted when an Identity is registered into the storage contract.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 1201,
									"name": "IdentityStored",
									"nameLocation": "4283:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4314:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "4298:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4349:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "4331:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1197,
														"name": "IIdentity",
														"nameLocations": [
															"4331:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "4331:9:7"
													},
													"referencedDeclaration": 278,
													"src": "4331:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:61:7"
									},
									"src": "4277:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "4365:301:7",
										"text": "  this event is emitted when an Identity is removed from the storage contract.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 1209,
									"name": "IdentityUnstored",
									"nameLocation": "4677:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4710:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4694:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4745:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4727:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1205,
														"name": "IIdentity",
														"nameLocations": [
															"4727:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "4727:9:7"
													},
													"referencedDeclaration": 278,
													"src": "4727:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:61:7"
									},
									"src": "4671:84:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "4761:261:7",
										"text": "  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"
									},
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 1218,
									"name": "IdentityModified",
									"nameLocation": "5033:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "5068:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5050:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "IIdentity",
														"nameLocations": [
															"5050:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "5050:9:7"
													},
													"referencedDeclaration": 278,
													"src": "5050:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "5099:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "5081:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1214,
														"name": "IIdentity",
														"nameLocations": [
															"5081:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "5081:9:7"
													},
													"referencedDeclaration": 278,
													"src": "5081:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:62:7"
									},
									"src": "5027:85:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "5118:295:7",
										"text": "  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"
									},
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 1225,
									"name": "CountryModified",
									"nameLocation": "5424:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5456:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "5440:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "5488:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "5473:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1222,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:57:7"
									},
									"src": "5418:79:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "5503:240:7",
										"text": "  this event is emitted when an Identity Registry is bound to the storage contract\n  the event is emitted by the 'addIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry added"
									},
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 1230,
									"name": "IdentityRegistryBound",
									"nameLocation": "5754:21:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "5792:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5776:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:34:7"
									},
									"src": "5748:62:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "5816:249:7",
										"text": "  this event is emitted when an Identity Registry is unbound from the storage contract\n  the event is emitted by the 'removeIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry removed"
									},
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 1235,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "6076:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "6116:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "6100:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:34:7"
									},
									"src": "6070:64:7"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "6159:483:7",
										"text": "  @dev adds an identity contract corresponding to a user address in the storage.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityStored` event"
									},
									"functionSelector": "a53410dd",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "6656:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6694:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6686:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "6726:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6716:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "IIdentity",
														"nameLocations": [
															"6716:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "6716:9:7"
													},
													"referencedDeclaration": 278,
													"src": "6716:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "6752:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6745:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1242,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6745:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:90:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6775:0:7"
									},
									"scope": 1306,
									"src": "6647:129:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "6782:349:7",
										"text": "  @dev Removes an user from the storage.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityUnstored` event"
									},
									"functionSelector": "cf191bcd",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "7145:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7179:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "7171:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7171:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7170:22:7"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7201:0:7"
									},
									"scope": 1306,
									"src": "7136:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "7208:413:7",
										"text": "  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryModified` event"
									},
									"functionSelector": "9f3418d5",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "7635:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7671:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "7663:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "7692:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "7685:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1256,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7685:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:39:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7710:0:7"
									},
									"scope": 1306,
									"src": "7626:85:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "7717:529:7",
										"text": "  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityModified` event"
									},
									"functionSelector": "e805cf86",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "8260:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8289:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "8281:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8281:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "8313:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "8303:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1264,
														"name": "IIdentity",
														"nameLocations": [
															"8303:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "8303:9:7"
													},
													"referencedDeclaration": 278,
													"src": "8303:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8280:43:7"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8332:0:7"
									},
									"scope": 1306,
									"src": "8251:82:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "8339:426:7",
										"text": "  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n  cannot bind more than 300 IR to 1 IRS\n  @param _identityRegistry The identity registry address to add."
									},
									"functionSelector": "690a49f9",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "8779:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "8808:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "8800:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8799:27:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8835:0:7"
									},
									"scope": 1306,
									"src": "8770:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "8842:399:7",
										"text": "  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n  @param _identityRegistry The identity registry address to remove."
									},
									"functionSelector": "97a012f7",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "9255:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "9286:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "9278:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:27:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9313:0:7"
									},
									"scope": 1306,
									"src": "9246:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "9320:87:7",
										"text": "  @dev Returns the identity registries linked to the storage contract"
									},
									"functionSelector": "bf9eb959",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "9421:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9445:2:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "9471:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9471:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "9471:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9470:18:7"
									},
									"scope": 1306,
									"src": "9412:77:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "9495:117:7",
										"text": "  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "7988d3a5",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "9626:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9649:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "9641:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9640:22:7"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "9686:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1293,
														"name": "IIdentity",
														"nameLocations": [
															"9686:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 278,
														"src": "9686:9:7"
													},
													"referencedDeclaration": 278,
													"src": "9686:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$278",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:11:7"
									},
									"scope": 1306,
									"src": "9617:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "9703:120:7",
										"text": "  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "727e13bc",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "9837:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9867:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "9859:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:22:7"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "9904:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1302,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9904:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:8:7"
									},
									"scope": 1306,
									"src": "9828:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1307,
							"src": "3908:6006:7",
							"usedErrors": []
						}
					],
					"src": "3817:6098:7"
				},
				"id": 7
			},
			"contracts t-rex/registry/storage/IRSStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/storage/IRSStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							278
						],
						"IRSStorage": [
							1331
						]
					},
					"id": 1332,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1308,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:8"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1332,
							"sourceUnit": 279,
							"src": "3843:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRSStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1331,
							"linearizedBaseContracts": [
								1331
							],
							"name": "IRSStorage",
							"nameLocation": "3918:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IRSStorage.Identity",
									"id": 1315,
									"members": [
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "identityContract",
											"nameLocation": "4052:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "4042:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IIdentity_$278",
												"typeString": "contract IIdentity"
											},
											"typeName": {
												"id": 1311,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1310,
													"name": "IIdentity",
													"nameLocations": [
														"4042:9:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 278,
													"src": "4042:9:8"
												},
												"referencedDeclaration": 278,
												"src": "4042:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$278",
													"typeString": "contract IIdentity"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1314,
											"mutability": "mutable",
											"name": "investorCountry",
											"nameLocation": "4085:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1315,
											"src": "4078:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1313,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4078:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Identity",
									"nameLocation": "4023:8:8",
									"nodeType": "StructDefinition",
									"scope": 1331,
									"src": "4016:91:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "4112:70:8",
										"text": "@dev mapping between a user address and the corresponding identity"
									},
									"id": 1321,
									"mutability": "mutable",
									"name": "_identities",
									"nameLocation": "4225:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1331,
									"src": "4187:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
										"typeString": "mapping(address => struct IRSStorage.Identity)"
									},
									"typeName": {
										"id": 1320,
										"keyType": {
											"id": 1317,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4195:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4187:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$1315_storage_$",
											"typeString": "mapping(address => struct IRSStorage.Identity)"
										},
										"valueType": {
											"id": 1319,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1318,
												"name": "Identity",
												"nameLocations": [
													"4206:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1315,
												"src": "4206:8:8"
											},
											"referencedDeclaration": 1315,
											"src": "4206:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Identity_$1315_storage_ptr",
												"typeString": "struct IRSStorage.Identity"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "4243:60:8",
										"text": "@dev array of Identity Registries linked to this storage"
									},
									"id": 1325,
									"mutability": "mutable",
									"name": "_identityRegistries",
									"nameLocation": "4327:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1331,
									"src": "4308:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1323,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4308:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1324,
										"nodeType": "ArrayTypeName",
										"src": "4308:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "4353:174:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
									},
									"id": 1330,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4552:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1331,
									"src": "4532:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4532:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1329,
										"length": {
											"hexValue": "3439",
											"id": 1328,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4540:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "4532:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1332,
							"src": "3909:651:8",
							"usedErrors": []
						}
					],
					"src": "3818:742:8"
				},
				"id": 8
			},
			"contracts t-rex/roles/AgentRoleUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/AgentRoleUpgradeable.sol",
					"exportedSymbols": {
						"AgentRoleUpgradeable": [
							1434
						],
						"ContextUpgradeable": [
							767
						],
						"OwnableUpgradeable": [
							468
						],
						"Roles": [
							1523
						]
					},
					"id": 1435,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1333,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 469,
							"src": "3843:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/roles/Roles.sol",
							"file": "./Roles.sol",
							"id": 1335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 1524,
							"src": "3920:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1336,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"3976:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "3976:18:9"
									},
									"id": 1337,
									"nodeType": "InheritanceSpecifier",
									"src": "3976:18:9"
								}
							],
							"canonicalName": "AgentRoleUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1434,
							"linearizedBaseContracts": [
								1434,
								468,
								767,
								721
							],
							"name": "AgentRoleUpgradeable",
							"nameLocation": "3952:20:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1341,
									"libraryName": {
										"id": 1338,
										"name": "Roles",
										"nameLocations": [
											"4007:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1523,
										"src": "4007:5:9"
									},
									"nodeType": "UsingForDirective",
									"src": "4001:27:9",
									"typeName": {
										"id": 1340,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1339,
											"name": "Roles.Role",
											"nameLocations": [
												"4017:5:9",
												"4023:4:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1442,
											"src": "4017:10:9"
										},
										"referencedDeclaration": 1442,
										"src": "4017:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"constant": false,
									"id": 1344,
									"mutability": "mutable",
									"name": "_agents",
									"nameLocation": "4053:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1434,
									"src": "4034:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$1442_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 1343,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1342,
											"name": "Roles.Role",
											"nameLocations": [
												"4034:5:9",
												"4040:4:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1442,
											"src": "4034:10:9"
										},
										"referencedDeclaration": 1442,
										"src": "4034:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec5",
									"id": 1348,
									"name": "AgentAdded",
									"nameLocation": "4073:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4100:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "4084:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:24:9"
									},
									"src": "4067:41:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b",
									"id": 1352,
									"name": "AgentRemoved",
									"nameLocation": "4119:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4148:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4132:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:24:9"
									},
									"src": "4113:43:9"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "4183:106:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4209:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4213:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4209:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1355,
																"name": "isAgent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "4201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4201:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4167656e74526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204167656e7420726f6c65",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4222:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															},
															"value": "AgentRole: caller does not have the Agent role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74a06637aa9b3f007e79b88b2581192c891126ad4f09db67db18ede3d2b5435c",
																"typeString": "literal_string \"AgentRole: caller does not have the Agent role\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4193:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "4193:78:9"
											},
											{
												"id": 1362,
												"nodeType": "PlaceholderStatement",
												"src": "4281:1:9"
											}
										]
									},
									"id": 1364,
									"name": "onlyAgent",
									"nameLocation": "4171:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4180:2:9"
									},
									"src": "4162:127:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "4346:143:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "4364:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4382:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4374:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1373,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4374:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4374:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4364:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4386:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4356:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4356:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "4356:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1384,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4442:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1381,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4430:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1442_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4438:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1469,
														"src": "4430:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1442_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1442_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4430:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "4430:19:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1388,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4475:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1387,
														"name": "AgentAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "4464:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "4459:23:9"
											}
										]
									},
									"functionSelector": "84e79842",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "onlyOwner",
												"nameLocations": [
													"4336:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "4336:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:9:9"
										}
									],
									"name": "addAgent",
									"nameLocation": "4304:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4321:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "4313:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:16:9"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4346:0:9"
									},
									"scope": 1434,
									"src": "4295:194:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "4549:148:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "_agent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "4567:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4585:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4577:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4577:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4577:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4567:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4589:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4559:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "4559:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "4648:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1409,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4633:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1442_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4641:6:9",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1495,
														"src": "4633:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1442_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1442_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "4633:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1416,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "4683:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1415,
														"name": "AgentRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "4670:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4670:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "4665:25:9"
											}
										]
									},
									"functionSelector": "97a6278e",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1396,
												"name": "onlyOwner",
												"nameLocations": [
													"4539:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "4539:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4539:9:9"
										}
									],
									"name": "removeAgent",
									"nameLocation": "4504:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4524:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "4516:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:16:9"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4549:0:9"
									},
									"scope": 1434,
									"src": "4495:202:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "4763:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1429,
															"name": "_agent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "4792:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1427,
															"name": "_agents",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4780:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1442_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4788:3:9",
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "4780:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1442_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$1442_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4780:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1431,
												"nodeType": "Return",
												"src": "4773:26:9"
											}
										]
									},
									"functionSelector": "1ffbb064",
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAgent",
									"nameLocation": "4712:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_agent",
												"nameLocation": "4728:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "4720:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4719:16:9"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "4757:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4757:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:6:9"
									},
									"scope": 1434,
									"src": "4703:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1435,
							"src": "3943:865:9",
							"usedErrors": [
								304,
								309,
								484,
								487
							]
						}
					],
					"src": "3818:991:9"
				},
				"id": 9
			},
			"contracts t-rex/roles/Roles.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/roles/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							1523
						]
					},
					"id": 1524,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1436,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roles",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "3843:82:10",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 1523,
							"linearizedBaseContracts": [
								1523
							],
							"name": "Roles",
							"nameLocation": "3934:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 1442,
									"members": [
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "3993:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1442,
											"src": "3968:31:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1440,
												"keyType": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3968:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 1439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3987:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "3953:4:10",
									"nodeType": "StructDefinition",
									"scope": 1523,
									"src": "3946:60:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "4135:117:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4153:19:10",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1453,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1446,
																		"src": "4158:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 1454,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "4164:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1452,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4154:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1442_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4174:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 1451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4145:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "4145:63:10"
											},
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1460,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "4218:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4223:6:10",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1441,
															"src": "4218:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1464,
														"indexExpression": {
															"id": 1462,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "4230:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4218:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4241:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4218:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "4218:27:10"
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "4012:60:10",
										"text": " @dev Give an account access to this role."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "4086:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4103:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4090:17:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 1445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1444,
														"name": "Role",
														"nameLocations": [
															"4090:4:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "4090:4:10"
													},
													"referencedDeclaration": 1442,
													"src": "4090:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4117:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4109:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:36:10"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4135:0:10"
									},
									"scope": 1523,
									"src": "4077:175:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "4388:119:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1480,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "4410:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 1481,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "4416:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1479,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "4406:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1442_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4406:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4426:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4398:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "4398:64:10"
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1486,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "4472:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4477:6:10",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1441,
															"src": "4472:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1490,
														"indexExpression": {
															"id": 1488,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4484:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4472:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4495:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4472:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "4472:28:10"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "4258:64:10",
										"text": " @dev Remove an account's access to this role."
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "4336:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4356:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "4343:17:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "Role",
														"nameLocations": [
															"4343:4:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "4343:4:10"
													},
													"referencedDeclaration": 1442,
													"src": "4343:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4370:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "4362:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:36:10"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:10"
									},
									"scope": 1523,
									"src": "4327:180:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "4674:122:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "4692:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4711:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4703:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4703:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4703:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4692:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4715:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4684:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "4684:68:10"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1516,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "4769:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4774:6:10",
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "4769:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1519,
													"indexExpression": {
														"id": 1518,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4781:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4769:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1520,
												"nodeType": "Return",
												"src": "4762:27:10"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "4513:78:10",
										"text": " @dev Check if an account has this role.\n @return bool"
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "4605:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4622:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4609:17:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 1498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1497,
														"name": "Role",
														"nameLocations": [
															"4609:4:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1442,
														"src": "4609:4:10"
													},
													"referencedDeclaration": 1442,
													"src": "4609:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1442_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4636:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4628:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4608:36:10"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4668:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4668:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:6:10"
									},
									"scope": 1523,
									"src": "4596:200:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1524,
							"src": "3926:872:10",
							"usedErrors": []
						}
					],
					"src": "3818:981:10"
				},
				"id": 10
			}
		}
	}
}