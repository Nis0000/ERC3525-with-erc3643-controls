{
	"id": "4823b5127762e21243a745e8d4b2df2b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../storage/TIRStorage.sol\";\n\n\ncontract TrustedIssuersRegistry is ITrustedIssuersRegistry, OwnableUpgradeable, TIRStorage {\n\n    function init() external initializer {\n        __Ownable_init(msg.sender);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}.\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\");\n        require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\");\n        require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\");\n        require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\");\n        _trustedIssuers.push(_trustedIssuer);\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit TrustedIssuerAdded(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\");\n        uint256 length = _trustedIssuers.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_trustedIssuers[i] == _trustedIssuer) {\n                _trustedIssuers[i] = _trustedIssuers[length - 1];\n                _trustedIssuers.pop();\n                break;\n            }\n        }\n        for (\n            uint256 claimTopicIndex = 0;\n            claimTopicIndex < _trustedIssuerClaimTopics[address(_trustedIssuer)].length;\n            claimTopicIndex++) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\n            for (uint256 i = 0; i < topicsLength; i++) {\n                if (_claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer) {\n                    _claimTopicsToTrustedIssuers[claimTopic][i] =\n                    _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        delete _trustedIssuerClaimTopics[address(_trustedIssuer)];\n        emit TrustedIssuerRemoved(_trustedIssuer);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {\n        require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\");\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\");\n        require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\");\n        require(_claimTopics.length > 0, \"claim topics cannot be empty\");\n\n        for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[address(_trustedIssuer)][i];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic].length;\n            for (uint256 j = 0; j < topicsLength; j++) {\n                if (_claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer) {\n                    _claimTopicsToTrustedIssuers[claimTopic][j] =\n                    _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit ClaimTopicsUpdated(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}.\n     */\n    function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {\n        return _trustedIssuers;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {\n        return _claimTopicsToTrustedIssuers[claimTopic];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}.\n     */\n    function isTrustedIssuer(address _issuer) external view override returns (bool) {\n        if(_trustedIssuerClaimTopics[_issuer].length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {\n        require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn\\'t exist\");\n        return _trustedIssuerClaimTopics[address(_trustedIssuer)];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-hasClaimTopic}.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {\n        uint256 length = _trustedIssuerClaimTopics[_issuer].length;\n        uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer];\n        for (uint256 i = 0; i < length; i++) {\n            if (claimTopics[i] == _claimTopic) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"
			},
			"contracts t-rex/registry/storage/TIRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ncontract TIRStorage {\n    /// @dev Array containing all TrustedIssuers identity contract address.\n    IClaimIssuer[] internal _trustedIssuers;\n\n    /// @dev Mapping between a trusted issuer address and its corresponding claimTopics.\n    mapping(address => uint256[]) internal _trustedIssuerClaimTopics;\n\n    /// @dev Mapping between a claim topic and the allowed trusted issuers for it.\n    mapping(uint256 => IClaimIssuer[]) internal _claimTopicsToTrustedIssuers;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    /**\n     *  this event is emitted when a trusted issuer is added in the registry.\n     *  the event is emitted by the addTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  this event is emitted when a trusted issuer is removed from the registry.\n     *  the event is emitted by the removeTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     */\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Trusted issuers\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerAdded` event\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _trustedIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerRemoved` event\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _trustedIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Function for getting all the trusted claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the trusted issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is trusted\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is trusted, false otherwise.\n     */\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of trusted claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n     *  @param _trustedIssuer the trusted issuer concerned.\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the trusted claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is trusted for this claim topic.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.17;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\n// import {Initializable} from \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is  ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.17;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.17;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol": {
				"TrustedIssuersRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addTrustedIssuer(address,uint256[])": {
								"details": "See {ITrustedIssuersRegistry-addTrustedIssuer}."
							},
							"getTrustedIssuerClaimTopics(address)": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."
							},
							"getTrustedIssuers()": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuers}."
							},
							"getTrustedIssuersForClaimTopic(uint256)": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."
							},
							"hasClaimTopic(address,uint256)": {
								"details": "See {ITrustedIssuersRegistry-hasClaimTopic}."
							},
							"isTrustedIssuer(address)": {
								"details": "See {ITrustedIssuersRegistry-isTrustedIssuer}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeTrustedIssuer(address)": {
								"details": "See {ITrustedIssuersRegistry-removeTrustedIssuer}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4076:10069  contract TrustedIssuersRegistry is ITrustedIssuersRegistry, OwnableUpgradeable, TIRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4076:10069  contract TrustedIssuersRegistry is ITrustedIssuersRegistry, OwnableUpgradeable, TIRStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x04bc7e84\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34a89987\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x52c111d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9f63ea98\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb93d28eb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc28fb278\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd9dd24c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xef2ed1a4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6931:8400  function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9647:10067  function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1451:1465   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1444:1466   */\n      iszero\n        /* \"#utility.yul\":1426:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9647:10067  function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {... */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8704:8883  function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_15\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4337:5256  function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {... */\n    tag_8:\n      tag_15\n      tag_38\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5342:6841  function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {... */\n    tag_9:\n      tag_15\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9263:9567  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {... */\n    tag_10:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8484:8607  function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {... */\n    tag_11:\n      tag_25\n      tag_50\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4174:4254  function init() external initializer {... */\n    tag_12:\n      tag_15\n      tag_53\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8965:9169  function isTrustedIssuer(address _issuer) external view override returns (bool) {... */\n    tag_13:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_15\n      tag_60\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6931:8400  function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7072:7109  address(_trustedIssuer) != address(0) */\n      dup4\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7064:7145  require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7163:7213  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7163:7188  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7163:7213  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7163:7220  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7163:7225  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      swap1\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7155:7250  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_71\n      jump\t// in\n    tag_69:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7291:7293  15 */\n      0x0f\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7268:7293  _claimTopics.length <= 15 */\n      dup2\n      gt\n      iszero\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7260:7335  require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_74\n      jump\t// in\n    tag_72:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7353:7376  _claimTopics.length > 0 */\n      dup1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7345:7409  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7345:7409  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5040:5061   */\n      mstore\n        /* \"#utility.yul\":5097:5099   */\n      0x1c\n        /* \"#utility.yul\":5077:5095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5070:5100   */\n      mstore\n      shl(0x20, 0x636c61696d20746f706963732063616e6e6f7420626520656d707479)\n        /* \"#utility.yul\":5116:5134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5109:5167   */\n      mstore\n        /* \"#utility.yul\":5184:5202   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7345:7409  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      tag_67\n        /* \"#utility.yul\":4856:5208   */\n      jump\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7345:7409  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n    tag_75:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7425:7434  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7420:8106  for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7444:7494  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7444:7469  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7444:7494  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7444:7501  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7440:7501  i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      dup2\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7420:8106  for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {... */\n      iszero\n      tag_79\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7593  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup5\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7522:7540  uint256 claimTopic */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7593  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7568  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7593  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7596  _trustedIssuerClaimTopics[address(_trustedIssuer)][i] */\n      dup1\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7594:7595  i */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7596  _trustedIssuerClaimTopics[address(_trustedIssuer)][i] */\n      dup2\n      lt\n      tag_82\n      jumpi\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7633:7673  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7633:7661  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7633:7673  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7633:7680  _claimTopicsToTrustedIssuers[claimTopic].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7543:7596  _trustedIssuerClaimTopics[address(_trustedIssuer)][i] */\n      swap1\n      swap3\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7633:7680  _claimTopicsToTrustedIssuers[claimTopic].length */\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7694:8096  for (uint256 j = 0; j < topicsLength; j++) {... */\n    tag_85:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7718:7730  topicsLength */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7714:7715  j */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7714:7730  j < topicsLength */\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7694:8096  for (uint256 j = 0; j < topicsLength; j++) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7799  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7787  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7799  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7802  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7820  _claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer */\n      dup10\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7799  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7800:7801  j */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7802  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_89\n      tag_83\n      jump\t// in\n    tag_89:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7759:7820  _claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer */\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7755:8082  if (_claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer) {... */\n      tag_91\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7910:7950  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7910:7938  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7910:7950  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7951:7967  topicsLength - 1 */\n      tag_92\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7966:7967  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7951:7963  topicsLength */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7951:7967  topicsLength - 1 */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7910:7968  _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_95\n      tag_83\n      jump\t// in\n    tag_95:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7884  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup6\n      dup4\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7872  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7884  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7887  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7910:7968  _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7885:7886  j */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7887  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_83\n      jump\t// in\n    tag_98:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7844:7968  _claimTopicsToTrustedIssuers[claimTopic][j] =... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7990:8030  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7990:8018  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7990:8030  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7990:8036  _claimTopicsToTrustedIssuers[claimTopic].pop() */\n      dup1\n      sload\n      dup1\n      tag_101\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8058:8063  break */\n      jump(tag_86)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7755:8082  if (_claimTopicsToTrustedIssuers[claimTopic][j] == _trustedIssuer) {... */\n    tag_91:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7732:7735  j++ */\n      dup1\n      tag_104\n      dup2\n      tag_105\n      jump\t// in\n    tag_104:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7694:8096  for (uint256 j = 0; j < topicsLength; j++) {... */\n      jump(tag_85)\n    tag_86:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7508:8106  {... */\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7503:7506  i++ */\n      dup1\n      dup1\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":7420:8106  for (uint256 i = 0; i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length; i++) {... */\n      jump(tag_78)\n    tag_79:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8115:8165  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8115:8140  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8115:8165  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8115:8180  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_107\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8168:8180  _claimTopics */\n      dup4\n      dup4\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8115:8180  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8195:8204  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8190:8331  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n    tag_109:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8210:8233  i < _claimTopics.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8190:8331  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8254:8282  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8254:8299  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8283:8295  _claimTopics */\n      dup5\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8296:8297  i */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8283:8298  _claimTopics[i] */\n      dup2\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_113\n      tag_83\n      jump\t// in\n    tag_113:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8254:8299  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8254:8320  _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8235:8238  i++ */\n      dup1\n      tag_115\n      dup2\n      tag_105\n      jump\t// in\n    tag_115:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8190:8331  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      jump(tag_109)\n    tag_110:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8364:8378  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8345:8393  ClaimTopicsUpdated(_trustedIssuer, _claimTopics) */\n      and\n      0xec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8380:8392  _claimTopics */\n      dup4\n      dup4\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8345:8393  ClaimTopicsUpdated(_trustedIssuer, _claimTopics) */\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6931:8400  function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9647:10067  function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {... */\n    tag_22:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9807  _trustedIssuerClaimTopics[_issuer] */\n      dup3\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9740:9744  bool */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9807  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9798  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9807  _trustedIssuerClaimTopics[_issuer] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9814  _trustedIssuerClaimTopics[_issuer].length */\n      dup1\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9824:9889  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9814  _trustedIssuerClaimTopics[_issuer].length */\n      swap3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9740:9744  bool */\n      dup5\n      swap3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9824:9889  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9807  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9814  _trustedIssuerClaimTopics[_issuer].length */\n      dup5\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9824:9889  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup4\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9807  _trustedIssuerClaimTopics[_issuer] */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9773:9814  _trustedIssuerClaimTopics[_issuer].length */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9824:9889  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9904:9913  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9899:10039  for (uint256 i = 0; i < length; i++) {... */\n    tag_121:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9923:9929  length */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9919:9920  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9919:9929  i < length */\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9899:10039  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9972:9983  _claimTopic */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9954:9965  claimTopics */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9966:9967  i */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9954:9968  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_125\n      tag_83\n      jump\t// in\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9954:9983  claimTopics[i] == _claimTopic */\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9950:10029  if (claimTopics[i] == _claimTopic) {... */\n      tag_126\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":10010:10014  true */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":10003:10014  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_118)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9950:10029  if (claimTopics[i] == _claimTopic) {... */\n    tag_126:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9931:9934  i++ */\n      dup1\n      tag_127\n      dup2\n      tag_105\n      jump\t// in\n    tag_127:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9899:10039  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_121)\n    tag_122:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":10055:10060  false */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":10048:10060  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9647:10067  function hasClaimTopic(address _issuer, uint256 _claimTopic) external view override returns (bool) {... */\n    tag_118:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8704:8883  function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {... */\n    tag_28:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8836:8876  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8836:8864  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8836:8876  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8829:8876  return _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8796:8817  IClaimIssuer[] memory */\n      0x60\n      swap4\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8829:8876  return _claimTopicsToTrustedIssuers[claimTopic] */\n      swap3\n      dup4\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8836:8876  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8829:8876  return _claimTopicsToTrustedIssuers[claimTopic] */\n      dup3\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8704:8883  function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view override returns (IClaimIssuer[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3256:3257  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3247  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3229:3259  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3165:3266  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2497:2504  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2516:2540  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2543:2563  _getOwnableStorage() */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2543:2561  _getOwnableStorage */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2543:2563  _getOwnableStorage() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2580:2588  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2451:2595  function owner() public view virtual returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4337:5256  function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external override onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4471:4508  address(_trustedIssuer) != address(0) */\n      dup4\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4463:4544  require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4562:4612  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4562:4587  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4562:4612  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4562:4619  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4562:4624  _trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0 */\n      iszero\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4554:4658  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6532:6534   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4554:4658  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6514:6535   */\n      mstore\n        /* \"#utility.yul\":6571:6573   */\n      0x1d\n        /* \"#utility.yul\":6551:6569   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6544:6574   */\n      mstore\n        /* \"#utility.yul\":6610:6641   */\n      0x747275737465642049737375657220616c726561647920657869737473000000\n        /* \"#utility.yul\":6590:6608   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6583:6642   */\n      mstore\n        /* \"#utility.yul\":6659:6677   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4554:4658  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\") */\n      tag_67\n        /* \"#utility.yul\":6330:6683   */\n      jump\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4554:4658  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0, \"trusted Issuer already exists\") */\n    tag_144:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4676:4699  _claimTopics.length > 0 */\n      dup1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4668:4740  require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6890:6892   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4668:4740  require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6872:6893   */\n      mstore\n        /* \"#utility.yul\":6929:6931   */\n      0x24\n        /* \"#utility.yul\":6909:6927   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6902:6932   */\n      mstore\n        /* \"#utility.yul\":6968:7002   */\n      0x7472757374656420636c61696d20746f706963732063616e6e6f742062652065\n        /* \"#utility.yul\":6948:6966   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6941:7003   */\n      mstore\n      shl(0xe0, 0x6d707479)\n        /* \"#utility.yul\":7019:7037   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7012:7046   */\n      mstore\n        /* \"#utility.yul\":7063:7082   */\n      0x84\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4668:4740  require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\") */\n      tag_67\n        /* \"#utility.yul\":6688:7088   */\n      jump\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4668:4740  require(_claimTopics.length > 0, \"trusted claim topics cannot be empty\") */\n    tag_147:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4781:4783  15 */\n      0x0f\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4758:4783  _claimTopics.length <= 15 */\n      dup2\n      gt\n      iszero\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4750:4825  require(_claimTopics.length <= 15, \"cannot have more than 15 claim topics\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_74\n      jump\t// in\n    tag_150:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4843:4858  _trustedIssuers */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4843:4865  _trustedIssuers.length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4868:4870  50 */\n      0x32\n      gt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4835:4915  require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7295:7297   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4835:4915  require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7277:7298   */\n      mstore\n        /* \"#utility.yul\":7334:7336   */\n      0x28\n        /* \"#utility.yul\":7314:7332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7307:7337   */\n      mstore\n        /* \"#utility.yul\":7373:7407   */\n      0x63616e6e6f742068617665206d6f7265207468616e2035302074727573746564\n        /* \"#utility.yul\":7353:7371   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7346:7408   */\n      mstore\n      shl(0xc0, 0x2069737375657273)\n        /* \"#utility.yul\":7424:7442   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7417:7455   */\n      mstore\n        /* \"#utility.yul\":7472:7491   */\n      0x84\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4835:4915  require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\") */\n      tag_67\n        /* \"#utility.yul\":7093:7497   */\n      jump\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4835:4915  require(_trustedIssuers.length < 50, \"cannot have more than 50 trusted issuers\") */\n    tag_152:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4925:4940  _trustedIssuers */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4925:4961  _trustedIssuers.push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4971:5021  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4925:4961  _trustedIssuers.push(_trustedIssuer) */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4971:5021  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4971:5036  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_156\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5024:5036  _claimTopics */\n      dup4\n      dup4\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4971:5036  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_108\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5051:5060  uint256 i */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5046:5187  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n    tag_157:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5066:5089  i < _claimTopics.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5046:5187  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5110:5138  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5110:5155  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5139:5151  _claimTopics */\n      dup5\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5152:5153  i */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5139:5154  _claimTopics[i] */\n      dup2\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_161\n      tag_83\n      jump\t// in\n    tag_161:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5110:5155  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5110:5176  _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5091:5094  i++ */\n      dup1\n      tag_163\n      dup2\n      tag_105\n      jump\t// in\n    tag_163:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5046:5187  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      jump(tag_157)\n    tag_158:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5220:5234  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5201:5249  TrustedIssuerAdded(_trustedIssuer, _claimTopics) */\n      and\n      0xfedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5236:5248  _claimTopics */\n      dup4\n      dup4\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5201:5249  TrustedIssuerAdded(_trustedIssuer, _claimTopics) */\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5342:6841  function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5446:5483  address(_trustedIssuer) != address(0) */\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5438:5519  require(address(_trustedIssuer) != address(0), \"invalid argument - zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5537:5587  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5537:5562  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5537:5587  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5537:5594  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5537:5599  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      swap1\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5529:5624  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"NOT a trusted issuer\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_71\n      jump\t// in\n    tag_170:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5634:5648  uint256 length */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5651:5673  _trustedIssuers.length */\n      dup1\n      sload\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5683:5929  for (uint256 i = 0; i < length; i++) {... */\n    tag_172:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5707:5713  length */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5703:5704  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5703:5713  i < length */\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5683:5929  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5760:5774  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5738:5774  _trustedIssuers[i] == _trustedIssuer */\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5738:5753  _trustedIssuers */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5754:5755  i */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5738:5756  _trustedIssuers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_83\n      jump\t// in\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5738:5774  _trustedIssuers[i] == _trustedIssuer */\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5734:5919  if (_trustedIssuers[i] == _trustedIssuer) {... */\n      tag_178\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5815:5830  _trustedIssuers */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5831:5841  length - 1 */\n      tag_179\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5840:5841  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5831:5837  length */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5831:5841  length - 1 */\n      tag_93\n      jump\t// in\n    tag_179:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5815:5842  _trustedIssuers[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_83\n      jump\t// in\n    tag_181:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5794:5812  _trustedIssuers[i] */\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5815:5842  _trustedIssuers[length - 1] */\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5810:5811  i */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5794:5812  _trustedIssuers[i] */\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_184\n      tag_83\n      jump\t// in\n    tag_184:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5794:5842  _trustedIssuers[i] = _trustedIssuers[length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5860:5881  _trustedIssuers.pop() */\n      dup1\n      sload\n      dup1\n      tag_187\n      jumpi\n      tag_187\n      tag_102\n      jump\t// in\n    tag_187:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5899:5904  break */\n      jump(tag_173)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5734:5919  if (_trustedIssuers[i] == _trustedIssuer) {... */\n    tag_178:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5715:5718  i++ */\n      dup1\n      tag_189\n      dup2\n      tag_105\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5683:5929  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_172)\n    tag_173:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5956:5979  uint256 claimTopicIndex */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5938:6717  for (... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6015:6065  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6015:6040  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6015:6065  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6015:6072  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5997:6072  claimTopicIndex < _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      dup2\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5938:6717  for (... */\n      iszero\n      tag_191\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6190  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6119:6137  uint256 claimTopic */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6190  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6165  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6190  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6207  _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex] */\n      dup1\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6191:6206  claimTopicIndex */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6207  _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex] */\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_83\n      jump\t// in\n    tag_194:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6244:6284  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6244:6272  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6244:6284  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6244:6291  _claimTopicsToTrustedIssuers[claimTopic].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6140:6207  _trustedIssuerClaimTopics[address(_trustedIssuer)][claimTopicIndex] */\n      swap1\n      swap3\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6244:6291  _claimTopicsToTrustedIssuers[claimTopic].length */\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6305:6707  for (uint256 i = 0; i < topicsLength; i++) {... */\n    tag_196:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6329:6341  topicsLength */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6325:6326  i */\n      dup2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6325:6341  i < topicsLength */\n      lt\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6305:6707  for (uint256 i = 0; i < topicsLength; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6410  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6398  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6410  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6413  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6431  _claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer */\n      dup9\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6410  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6411:6412  i */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6413  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_83\n      jump\t// in\n    tag_200:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6370:6431  _claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer */\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6366:6693  if (_claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer) {... */\n      tag_202\n      jumpi\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6521:6561  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6521:6549  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6521:6561  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6562:6578  topicsLength - 1 */\n      tag_203\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6577:6578  1 */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6562:6574  topicsLength */\n      dup5\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6562:6578  topicsLength - 1 */\n      tag_93\n      jump\t// in\n    tag_203:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6521:6579  _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_205\n      tag_83\n      jump\t// in\n    tag_205:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6495  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup6\n      dup4\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6483  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6495  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6498  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6521:6579  _claimTopicsToTrustedIssuers[claimTopic][topicsLength - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6496:6497  i */\n      dup4\n      swap1\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6498  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_83\n      jump\t// in\n    tag_208:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6455:6579  _claimTopicsToTrustedIssuers[claimTopic][i] =... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6601:6641  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6601:6629  _claimTopicsToTrustedIssuers */\n      0x02\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6601:6641  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6601:6647  _claimTopicsToTrustedIssuers[claimTopic].pop() */\n      dup1\n      sload\n      dup1\n      tag_211\n      jumpi\n      tag_211\n      tag_102\n      jump\t// in\n    tag_211:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6669:6674  break */\n      jump(tag_197)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6366:6693  if (_claimTopicsToTrustedIssuers[claimTopic][i] == _trustedIssuer) {... */\n    tag_202:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6343:6346  i++ */\n      dup1\n      tag_213\n      dup2\n      tag_105\n      jump\t// in\n    tag_213:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6305:6707  for (uint256 i = 0; i < topicsLength; i++) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6105:6717  {... */\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6086:6103  claimTopicIndex++ */\n      dup1\n      dup1\n      tag_214\n      swap1\n      tag_105\n      jump\t// in\n    tag_214:\n      swap2\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5938:6717  for (... */\n      jump(tag_190)\n    tag_191:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6733:6783  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6733:6758  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6733:6783  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6726:6783  delete _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      tag_215\n      swap2\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":6798:6834  TrustedIssuerRemoved(_trustedIssuer) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5428:6841  {... */\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":5342:6841  function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9263:9567  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9397:9447  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9397:9422  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9397:9447  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9397:9454  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9361:9377  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9397:9459  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      sub\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9389:9493  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn\\'t exist\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9389:9493  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn\\'t exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7686:7707   */\n      mstore\n        /* \"#utility.yul\":7743:7745   */\n      0x1c\n        /* \"#utility.yul\":7723:7741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7716:7746   */\n      mstore\n      shl(0x22, 0x1d1c9d5cdd195908125cdcdd595c88191bd95cdb89dd08195e1a5cdd)\n        /* \"#utility.yul\":7762:7780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7755:7813   */\n      mstore\n        /* \"#utility.yul\":7830:7848   */\n      0x64\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9389:9493  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn\\'t exist\") */\n      tag_67\n        /* \"#utility.yul\":7502:7854   */\n      jump\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9389:9493  require(_trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0, \"trusted Issuer doesn\\'t exist\") */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9510:9560  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9510:9535  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9510:9560  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9503:9560  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9510:9560  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      swap1\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9503:9560  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      add\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9510:9560  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9503:9560  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_222:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_222\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9263:9567  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view override returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8484:8607  function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {... */\n    tag_50:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8545:8566  IClaimIssuer[] memory */\n      0x60\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8585:8600  _trustedIssuers */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8578:8600  return _trustedIssuers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8484:8607  function getTrustedIssuers() external view override returns (IClaimIssuer[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4174:4254  function init() external initializer {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0xff\n      shl(0x40, 0x01)\n      dup3\n      div\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(sub(shl(0x40, 0x01), 0x01))\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_233:\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4221:4247  __Ownable_init(msg.sender) */\n      tag_235\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4236:4246  msg.sender */\n      caller\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4221:4235  __Ownable_init */\n      tag_236\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4221:4247  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8012:8062   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8000:8002   */\n      0x20\n        /* \"#utility.yul\":7985:8003   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":4174:4254  function init() external initializer {... */\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8965:9169  function isTrustedIssuer(address _issuer) external view override returns (bool) {... */\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9092  _trustedIssuerClaimTopics[_issuer] */\n      dup2\n      and\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9039:9043  bool */\n      0x00\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9092  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9083  _trustedIssuerClaimTopics */\n      0x01\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9092  _trustedIssuerClaimTopics[_issuer] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9099  _trustedIssuerClaimTopics[_issuer].length */\n      sload\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9058:9103  _trustedIssuerClaimTopics[_issuer].length > 0 */\n      iszero\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9055:9141  if(_trustedIssuerClaimTopics[_issuer].length > 0) {... */\n      tag_241\n      jumpi\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9126:9130  true */\n      0x01\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8965:9169  function isTrustedIssuer(address _issuer) external view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9055:9141  if(_trustedIssuerClaimTopics[_issuer].length > 0) {... */\n    tag_241:\n      pop\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":9157:9162  false */\n      0x00\n      swap2\n        /* \"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":8965:9169  function isTrustedIssuer(address _issuer) external view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2355  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2344:2357  _checkOwner() */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3499:3521  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3572:3573  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3544:3575  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3495:3586  if (newOwner == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3614:3622  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3613  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3595:3623  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3415:3630  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2668:2830  function _checkOwner() internal view virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2732  owner */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2734  owner() */\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2727:2750  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2723:2824  if (owner() != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2773:2813  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3881  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3884:3904  _getOwnableStorage() */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3884:3902  _getOwnableStorage */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3884:3904  _getOwnableStorage() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3951:3970  $._owner = newOwner */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3857:3904  OwnableStorage storage $ = _getOwnableStorage() */\n      swap4\n      swap5\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3933:3941  $._owner */\n      swap2\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3914:3930  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3985:4025  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:4032  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3784:4032  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1202:1361  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1323:1345  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1202:1361  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1857:1984  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1964:1976  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1963  __Ownable_init_unchained */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1939:1977  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1990:2225  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      jump\t// out\n    tag_108:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_280\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_279:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_279)\n    tag_280:\n      pop\n      tag_281\n      swap3\n      swap2\n      pop\n      tag_282\n      jump\t// in\n    tag_281:\n      pop\n      swap1\n      jump\t// out\n    tag_216:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n    tag_282:\n    tag_285:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_281\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_285)\n        /* \"#utility.yul\":14:159   */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":103:134   */\n      dup2\n      and\n        /* \"#utility.yul\":93:135   */\n      dup2\n      eq\n        /* \"#utility.yul\":83:153   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":149:150   */\n      0x00\n        /* \"#utility.yul\":146:147   */\n      dup1\n        /* \"#utility.yul\":139:151   */\n      revert\n        /* \"#utility.yul\":164:947   */\n    tag_17:\n        /* \"#utility.yul\":278:284   */\n      0x00\n        /* \"#utility.yul\":286:292   */\n      dup1\n        /* \"#utility.yul\":294:300   */\n      0x00\n        /* \"#utility.yul\":347:349   */\n      0x40\n        /* \"#utility.yul\":335:344   */\n      dup5\n        /* \"#utility.yul\":326:333   */\n      dup7\n        /* \"#utility.yul\":322:345   */\n      sub\n        /* \"#utility.yul\":318:350   */\n      slt\n        /* \"#utility.yul\":315:367   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":360:361   */\n      dup1\n        /* \"#utility.yul\":353:365   */\n      revert\n        /* \"#utility.yul\":315:367   */\n    tag_293:\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":389:412   */\n      calldataload\n        /* \"#utility.yul\":421:466   */\n      tag_294\n        /* \"#utility.yul\":460:465   */\n      dup2\n        /* \"#utility.yul\":421:466   */\n      tag_287\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":485:490   */\n      swap3\n      pop\n        /* \"#utility.yul\":541:543   */\n      0x20\n        /* \"#utility.yul\":526:544   */\n      dup5\n      add\n        /* \"#utility.yul\":513:545   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":594:608   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":591:625   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":618:619   */\n      dup1\n        /* \"#utility.yul\":611:623   */\n      revert\n        /* \"#utility.yul\":591:625   */\n    tag_295:\n        /* \"#utility.yul\":659:665   */\n      dup2\n        /* \"#utility.yul\":648:657   */\n      dup7\n        /* \"#utility.yul\":644:666   */\n      add\n        /* \"#utility.yul\":634:666   */\n      swap2\n      pop\n        /* \"#utility.yul\":704:711   */\n      dup7\n        /* \"#utility.yul\":697:701   */\n      0x1f\n        /* \"#utility.yul\":693:695   */\n      dup4\n        /* \"#utility.yul\":689:702   */\n      add\n        /* \"#utility.yul\":685:712   */\n      slt\n        /* \"#utility.yul\":675:730   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":726:727   */\n      0x00\n        /* \"#utility.yul\":723:724   */\n      dup1\n        /* \"#utility.yul\":716:728   */\n      revert\n        /* \"#utility.yul\":675:730   */\n    tag_296:\n        /* \"#utility.yul\":766:768   */\n      dup2\n        /* \"#utility.yul\":753:769   */\n      calldataload\n        /* \"#utility.yul\":792:794   */\n      dup2\n        /* \"#utility.yul\":784:790   */\n      dup2\n        /* \"#utility.yul\":781:795   */\n      gt\n        /* \"#utility.yul\":778:812   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":778:812   */\n    tag_297:\n        /* \"#utility.yul\":861:868   */\n      dup8\n        /* \"#utility.yul\":856:858   */\n      0x20\n        /* \"#utility.yul\":846:852   */\n      dup3\n        /* \"#utility.yul\":843:844   */\n      0x05\n        /* \"#utility.yul\":839:853   */\n      shl\n        /* \"#utility.yul\":835:837   */\n      dup6\n        /* \"#utility.yul\":831:854   */\n      add\n        /* \"#utility.yul\":827:859   */\n      add\n        /* \"#utility.yul\":824:869   */\n      gt\n        /* \"#utility.yul\":821:886   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":882:883   */\n      0x00\n        /* \"#utility.yul\":879:880   */\n      dup1\n        /* \"#utility.yul\":872:884   */\n      revert\n        /* \"#utility.yul\":821:886   */\n    tag_298:\n        /* \"#utility.yul\":913:915   */\n      0x20\n        /* \"#utility.yul\":909:911   */\n      dup4\n        /* \"#utility.yul\":905:916   */\n      add\n        /* \"#utility.yul\":895:916   */\n      swap5\n      pop\n        /* \"#utility.yul\":935:941   */\n      dup1\n        /* \"#utility.yul\":925:941   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":164:947   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":952:1281   */\n    tag_21:\n        /* \"#utility.yul\":1020:1026   */\n      0x00\n        /* \"#utility.yul\":1028:1034   */\n      dup1\n        /* \"#utility.yul\":1081:1083   */\n      0x40\n        /* \"#utility.yul\":1069:1078   */\n      dup4\n        /* \"#utility.yul\":1060:1067   */\n      dup6\n        /* \"#utility.yul\":1056:1079   */\n      sub\n        /* \"#utility.yul\":1052:1084   */\n      slt\n        /* \"#utility.yul\":1049:1101   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":1097:1098   */\n      0x00\n        /* \"#utility.yul\":1094:1095   */\n      dup1\n        /* \"#utility.yul\":1087:1099   */\n      revert\n        /* \"#utility.yul\":1049:1101   */\n    tag_300:\n        /* \"#utility.yul\":1136:1145   */\n      dup3\n        /* \"#utility.yul\":1123:1146   */\n      calldataload\n        /* \"#utility.yul\":1155:1200   */\n      tag_301\n        /* \"#utility.yul\":1194:1199   */\n      dup2\n        /* \"#utility.yul\":1155:1200   */\n      tag_287\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1219:1224   */\n      swap5\n        /* \"#utility.yul\":1271:1273   */\n      0x20\n        /* \"#utility.yul\":1256:1274   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1243:1275   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":952:1281   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1658   */\n    tag_27:\n        /* \"#utility.yul\":1537:1543   */\n      0x00\n        /* \"#utility.yul\":1590:1592   */\n      0x20\n        /* \"#utility.yul\":1578:1587   */\n      dup3\n        /* \"#utility.yul\":1569:1576   */\n      dup5\n        /* \"#utility.yul\":1565:1588   */\n      sub\n        /* \"#utility.yul\":1561:1593   */\n      slt\n        /* \"#utility.yul\":1558:1610   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1606:1607   */\n      0x00\n        /* \"#utility.yul\":1603:1604   */\n      dup1\n        /* \"#utility.yul\":1596:1608   */\n      revert\n        /* \"#utility.yul\":1558:1610   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":1629:1652   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1478:1658   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1663:2340   */\n    tag_30:\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1905:1926   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1975:1988   */\n      dup3\n      mload\n        /* \"#utility.yul\":1878:1896   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1997:2019   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1824:1828   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1853:1855   */\n      swap1\n        /* \"#utility.yul\":2076:2091   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2050:2052   */\n      0x40\n        /* \"#utility.yul\":2035:2053   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1824:1828   */\n      dup5\n        /* \"#utility.yul\":2119:2314   */\n    tag_306:\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2130:2131   */\n      dup2\n        /* \"#utility.yul\":2127:2140   */\n      lt\n        /* \"#utility.yul\":2119:2314   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2198:2211   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2194:2233   */\n      and\n        /* \"#utility.yul\":2182:2234   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2289:2304   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2254:2266   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2230:2231   */\n      0x01\n        /* \"#utility.yul\":2148:2157   */\n      add\n        /* \"#utility.yul\":2119:2314   */\n      jump(tag_306)\n    tag_308:\n      pop\n        /* \"#utility.yul\":2331:2334   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1663:2340   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2548   */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2509:2541   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2491:2542   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2479:2481   */\n      0x20\n        /* \"#utility.yul\":2464:2482   */\n      add\n      swap1\n        /* \"#utility.yul\":2345:2548   */\n      jump\t// out\n        /* \"#utility.yul\":2553:2833   */\n    tag_42:\n        /* \"#utility.yul\":2631:2637   */\n      0x00\n        /* \"#utility.yul\":2684:2686   */\n      0x20\n        /* \"#utility.yul\":2672:2681   */\n      dup3\n        /* \"#utility.yul\":2663:2670   */\n      dup5\n        /* \"#utility.yul\":2659:2682   */\n      sub\n        /* \"#utility.yul\":2655:2687   */\n      slt\n        /* \"#utility.yul\":2652:2704   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2697:2698   */\n      dup1\n        /* \"#utility.yul\":2690:2702   */\n      revert\n        /* \"#utility.yul\":2652:2704   */\n    tag_311:\n        /* \"#utility.yul\":2739:2748   */\n      dup2\n        /* \"#utility.yul\":2726:2749   */\n      calldataload\n        /* \"#utility.yul\":2758:2803   */\n      tag_312\n        /* \"#utility.yul\":2797:2802   */\n      dup2\n        /* \"#utility.yul\":2758:2803   */\n      tag_287\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2822:2827   */\n      swap4\n        /* \"#utility.yul\":2553:2833   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2838:3470   */\n    tag_48:\n        /* \"#utility.yul\":3009:3011   */\n      0x20\n        /* \"#utility.yul\":3061:3082   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3131:3144   */\n      dup3\n      mload\n        /* \"#utility.yul\":3034:3052   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3153:3175   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2980:2984   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3009:3011   */\n      swap1\n        /* \"#utility.yul\":3232:3247   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3206:3208   */\n      0x40\n        /* \"#utility.yul\":3191:3209   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2980:2984   */\n      dup5\n        /* \"#utility.yul\":3275:3444   */\n    tag_314:\n        /* \"#utility.yul\":3289:3295   */\n      dup2\n        /* \"#utility.yul\":3286:3287   */\n      dup2\n        /* \"#utility.yul\":3283:3296   */\n      lt\n        /* \"#utility.yul\":3275:3444   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3350:3363   */\n      dup4\n      mload\n        /* \"#utility.yul\":3338:3364   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3419:3434   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3384:3396   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3311:3312   */\n      0x01\n        /* \"#utility.yul\":3304:3313   */\n      add\n        /* \"#utility.yul\":3275:3444   */\n      jump(tag_314)\n        /* \"#utility.yul\":3741:4096   */\n    tag_68:\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"#utility.yul\":3925:3946   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x1f\n        /* \"#utility.yul\":3962:3980   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4054   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":4016:4018   */\n      0x40\n        /* \"#utility.yul\":4001:4019   */\n      dup3\n      add\n        /* \"#utility.yul\":3994:4055   */\n      mstore\n        /* \"#utility.yul\":4087:4089   */\n      0x60\n        /* \"#utility.yul\":4072:4090   */\n      add\n      swap1\n        /* \"#utility.yul\":3741:4096   */\n      jump\t// out\n        /* \"#utility.yul\":4101:4445   */\n    tag_71:\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"#utility.yul\":4285:4306   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x14\n        /* \"#utility.yul\":4322:4340   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4315:4345   */\n      mstore\n      shl(0x61, 0x2727aa1030903a393ab9ba32b21034b9b9bab2b9)\n        /* \"#utility.yul\":4376:4378   */\n      0x40\n        /* \"#utility.yul\":4361:4379   */\n      dup3\n      add\n        /* \"#utility.yul\":4354:4404   */\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x60\n        /* \"#utility.yul\":4421:4439   */\n      add\n      swap1\n        /* \"#utility.yul\":4101:4445   */\n      jump\t// out\n        /* \"#utility.yul\":4450:4851   */\n    tag_74:\n        /* \"#utility.yul\":4652:4654   */\n      0x20\n        /* \"#utility.yul\":4634:4655   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4691:4693   */\n      0x25\n        /* \"#utility.yul\":4671:4689   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4664:4694   */\n      mstore\n        /* \"#utility.yul\":4730:4764   */\n      0x63616e6e6f742068617665206d6f7265207468616e20313520636c61696d2074\n        /* \"#utility.yul\":4725:4727   */\n      0x40\n        /* \"#utility.yul\":4710:4728   */\n      dup3\n      add\n        /* \"#utility.yul\":4703:4765   */\n      mstore\n      shl(0xd8, 0x6f70696373)\n        /* \"#utility.yul\":4796:4798   */\n      0x60\n        /* \"#utility.yul\":4781:4799   */\n      dup3\n      add\n        /* \"#utility.yul\":4774:4809   */\n      mstore\n        /* \"#utility.yul\":4841:4844   */\n      0x80\n        /* \"#utility.yul\":4826:4845   */\n      add\n      swap1\n        /* \"#utility.yul\":4450:4851   */\n      jump\t// out\n        /* \"#utility.yul\":5213:5340   */\n    tag_83:\n        /* \"#utility.yul\":5274:5284   */\n      0x4e487b71\n        /* \"#utility.yul\":5269:5272   */\n      0xe0\n        /* \"#utility.yul\":5265:5285   */\n      shl\n        /* \"#utility.yul\":5262:5263   */\n      0x00\n        /* \"#utility.yul\":5255:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x32\n        /* \"#utility.yul\":5302:5303   */\n      0x04\n        /* \"#utility.yul\":5295:5310   */\n      mstore\n        /* \"#utility.yul\":5329:5333   */\n      0x24\n        /* \"#utility.yul\":5326:5327   */\n      0x00\n        /* \"#utility.yul\":5319:5334   */\n      revert\n        /* \"#utility.yul\":5345:5472   */\n    tag_288:\n        /* \"#utility.yul\":5406:5416   */\n      0x4e487b71\n        /* \"#utility.yul\":5401:5404   */\n      0xe0\n        /* \"#utility.yul\":5397:5417   */\n      shl\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5387:5418   */\n      mstore\n        /* \"#utility.yul\":5437:5441   */\n      0x11\n        /* \"#utility.yul\":5434:5435   */\n      0x04\n        /* \"#utility.yul\":5427:5442   */\n      mstore\n        /* \"#utility.yul\":5461:5465   */\n      0x24\n        /* \"#utility.yul\":5458:5459   */\n      0x00\n        /* \"#utility.yul\":5451:5466   */\n      revert\n        /* \"#utility.yul\":5477:5605   */\n    tag_93:\n        /* \"#utility.yul\":5544:5553   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5565:5576   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5562:5599   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":5579:5597   */\n      tag_118\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":5610:5737   */\n    tag_102:\n        /* \"#utility.yul\":5671:5681   */\n      0x4e487b71\n        /* \"#utility.yul\":5666:5669   */\n      0xe0\n        /* \"#utility.yul\":5662:5682   */\n      shl\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5683   */\n      mstore\n        /* \"#utility.yul\":5702:5706   */\n      0x31\n        /* \"#utility.yul\":5699:5700   */\n      0x04\n        /* \"#utility.yul\":5692:5707   */\n      mstore\n        /* \"#utility.yul\":5726:5730   */\n      0x24\n        /* \"#utility.yul\":5723:5724   */\n      0x00\n        /* \"#utility.yul\":5716:5731   */\n      revert\n        /* \"#utility.yul\":5742:5877   */\n    tag_105:\n        /* \"#utility.yul\":5781:5784   */\n      0x00\n        /* \"#utility.yul\":5802:5819   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5799:5842   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5822:5840   */\n      tag_332\n      tag_288\n      jump\t// in\n    tag_332:\n      pop\n        /* \"#utility.yul\":5869:5870   */\n      0x01\n        /* \"#utility.yul\":5858:5871   */\n      add\n      swap1\n        /* \"#utility.yul\":5742:5877   */\n      jump\t// out\n        /* \"#utility.yul\":5882:6325   */\n    tag_117:\n        /* \"#utility.yul\":6071:6073   */\n      0x20\n        /* \"#utility.yul\":6053:6074   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n      add\n        /* \"#utility.yul\":6083:6117   */\n      dup3\n      swap1\n      mstore\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":6129:6160   */\n      dup4\n      gt\n        /* \"#utility.yul\":6126:6177   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6173:6174   */\n      0x00\n        /* \"#utility.yul\":6170:6171   */\n      dup1\n        /* \"#utility.yul\":6163:6175   */\n      revert\n        /* \"#utility.yul\":6126:6177   */\n    tag_334:\n        /* \"#utility.yul\":6207:6213   */\n      dup3\n        /* \"#utility.yul\":6204:6205   */\n      0x05\n        /* \"#utility.yul\":6200:6214   */\n      shl\n        /* \"#utility.yul\":6264:6270   */\n      dup1\n        /* \"#utility.yul\":6256:6262   */\n      dup6\n        /* \"#utility.yul\":6251:6253   */\n      0x40\n        /* \"#utility.yul\":6240:6249   */\n      dup6\n        /* \"#utility.yul\":6236:6254   */\n      add\n        /* \"#utility.yul\":6223:6271   */\n      calldatacopy\n        /* \"#utility.yul\":6292:6314   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6316:6318   */\n      0x40\n        /* \"#utility.yul\":6288:6319   */\n      add\n      swap4\n        /* \"#utility.yul\":5882:6325   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e81c67a481876c806b192733282dbe66f9dbb531f63b6467616f210df0fddc3364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x116A JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0xBC PUSH2 0x63F JUMP JUMPDEST PUSH2 0x116 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xBC PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH2 0xBC PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0xBC PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH2 0xBC PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x12A5 JUMP JUMPDEST DUP1 PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x636C61696D20746F706963732063616E6E6F7420626520656D707479 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x2C7 JUMPI PUSH2 0x2C7 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x31B JUMPI PUSH2 0x31B PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x406 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x34E PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x397 JUMPI PUSH2 0x397 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x3DF JUMPI PUSH2 0x3DF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x418 JUMP JUMPDEST DUP1 PUSH2 0x410 DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E7 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x426 SWAP1 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x452 SWAP1 DUP4 DUP4 PUSH2 0x1028 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x474 JUMPI PUSH2 0x474 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x4C2 DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x456 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x561 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5B3 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5CD JUMP JUMPDEST DUP1 PUSH2 0x5BD DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57F JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x615 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x651 PUSH1 0x0 PUSH2 0xF2C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x65E PUSH2 0xF88 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x676 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x32 GT PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x83E SWAP1 DUP4 DUP4 PUSH2 0x1028 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x860 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8AE DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x842 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA42 JUMPI PUSH1 0x0 PUSH2 0x9A9 PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9B9 JUMPI PUSH2 0x9B9 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x9E3 JUMPI PUSH2 0x9E3 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP1 PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xA54 JUMP JUMPDEST DUP1 PUSH2 0xA4C DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB29 PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB39 JUMPI PUSH2 0xB39 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xB72 JUMPI PUSH2 0xB72 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xBBA JUMPI PUSH2 0xBBA PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xBF3 JUMP JUMPDEST DUP1 PUSH2 0xBEB DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC2 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC01 SWAP1 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA58 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC2B SWAP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x1D1C9D5CDD195908125CDCDD595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD15 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD6E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH2 0xFAC JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDE3 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDF1 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE38 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xE41 CALLER PUSH2 0xFD0 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE87 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xEB4 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC4 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEEE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0xF2C JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0xF03 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x651 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF36 PUSH2 0xF88 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 JUMP JUMPDEST PUSH2 0xFD8 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC4 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 PUSH2 0xFAC JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1063 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1063 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST POP PUSH2 0x106F SWAP3 SWAP2 POP PUSH2 0x108D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x108E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10D7 DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x115C DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x119F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1201 DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C4 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5CD PUSH2 0x1300 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1351 JUMPI PUSH2 0x1351 PUSH2 0x1300 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SHR PUSH8 0xA481876C806B1927 CALLER 0x28 0x2D 0xBE PUSH7 0xF9DBB531F63B64 PUSH8 0x616F210DF0FDDC33 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4076:5993:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_378": {
									"entryPoint": 4048,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_405": {
									"entryPoint": 4102,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_693": {
									"entryPoint": 4065,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_446": {
									"entryPoint": 3834,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_770": {
									"entryPoint": 4012,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_349": {
									"entryPoint": 3976,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_761": {
									"entryPoint": 4110,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_517": {
									"entryPoint": 3884,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTrustedIssuer_946": {
									"entryPoint": 1646,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getTrustedIssuerClaimTopics_1365": {
									"entryPoint": 3171,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrustedIssuersForClaimTopic_1311": {
									"entryPoint": 1491,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrustedIssuers_1295": {
									"entryPoint": 3380,
									"id": 1295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasClaimTopic_1416": {
									"entryPoint": 1299,
									"id": 1416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@init_840": {
									"entryPoint": 3478,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTrustedIssuer_1333": {
									"entryPoint": 3726,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": 1619,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeTrustedIssuer_1113": {
									"entryPoint": 2290,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_460": {
									"entryPoint": 1599,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_488": {
									"entryPoint": 3772,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateIssuerClaimTopics_1283": {
									"entryPoint": 415,
									"id": 1283,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$49": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IClaimIssuer": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8070:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "73:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "137:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "146:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "139:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "139:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "139:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "96:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "107:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "122:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "127:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "118:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "118:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "131:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "114:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "114:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "103:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "103:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "93:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "93:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "86:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:50:10"
															},
															"nodeType": "YulIf",
															"src": "83:70:10"
														}
													]
												},
												"name": "validator_revert_contract_IClaimIssuer",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "62:5:10",
														"type": ""
													}
												],
												"src": "14:145:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "305:642:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "351:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "363:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "353:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "353:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "326:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "335:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "322:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "347:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:32:10"
															},
															"nodeType": "YulIf",
															"src": "315:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "376:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "389:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "380:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "460:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "421:38:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "421:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "475:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "485:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "475:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "499:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "541:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "526:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "513:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "503:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "554:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "572:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "568:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "580:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "558:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "609:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "621:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "611:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "611:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "597:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "605:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "594:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:14:10"
															},
															"nodeType": "YulIf",
															"src": "591:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "634:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "648:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "659:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "638:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "726:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "693:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "697:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "689:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "689:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "704:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "685:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:35:10"
															},
															"nodeType": "YulIf",
															"src": "675:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "739:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "766:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "753:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "743:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "796:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "805:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "792:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "781:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:14:10"
															},
															"nodeType": "YulIf",
															"src": "778:34:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "870:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "872:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "872:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "872:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "835:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "843:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "846:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "839:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "839:14:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "831:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "856:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "827:32:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "861:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "824:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:45:10"
															},
															"nodeType": "YulIf",
															"src": "821:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:11:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "925:16:10",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "935:6:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "255:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "266:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "278:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "286:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "294:6:10",
														"type": ""
													}
												],
												"src": "164:783:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:242:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1085:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1094:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1087:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1087:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1069:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1056:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1081:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1052:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:32:10"
															},
															"nodeType": "YulIf",
															"src": "1049:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1110:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1114:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1194:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "1155:38:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1209:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1219:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1209:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1233:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1271:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1256:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1243:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "997:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1008:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1028:6:10",
														"type": ""
													}
												],
												"src": "952:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1458:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1451:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1451:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1444:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:10",
														"type": ""
													}
												],
												"src": "1286:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1548:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1594:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1606:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1596:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1596:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1596:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1569:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1565:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:32:10"
															},
															"nodeType": "YulIf",
															"src": "1558:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1619:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1629:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1619:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1514:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1525:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1537:6:10",
														"type": ""
													}
												],
												"src": "1478:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:507:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1843:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1853:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1847:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1864:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1893:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1868:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1912:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1923:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1935:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1946:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1939:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1961:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1981:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1965:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2004:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2012:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1997:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2039:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2062:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2080:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2088:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2066:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2100:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2109:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2104:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:146:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2189:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2198:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2198:13:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2221:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2226:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2217:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2217:11:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2230:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2213:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2213:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2194:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2194:39:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2182:52:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2182:52:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2247:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2258:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2263:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2254:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2254:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2247:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2279:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2293:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2301:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2289:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2289:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2130:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2127:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2141:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2143:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2152:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2155:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2148:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2143:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2123:3:10",
																"statements": []
															},
															"src": "2119:195:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2331:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1802:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1813:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1824:4:10",
														"type": ""
													}
												],
												"src": "1663:677:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2468:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2464:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2456:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2513:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2529:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2534:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2525:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2525:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2538:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2521:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2491:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2415:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2426:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2437:4:10",
														"type": ""
													}
												],
												"src": "2345:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2642:191:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2697:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2663:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2655:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:32:10"
															},
															"nodeType": "YulIf",
															"src": "2652:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2739:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2726:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2717:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2797:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "2758:38:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2758:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2812:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2822:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2608:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2619:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2631:6:10",
														"type": ""
													}
												],
												"src": "2553:280:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:481:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2999:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3009:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3003:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3020:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3049:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3024:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3079:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3061:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3061:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3091:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3102:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3095:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3117:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3131:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3121:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3160:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3168:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3184:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3218:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3236:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3244:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3232:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3222:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3256:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3265:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3260:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3324:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3345:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3356:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3350:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3338:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3338:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3338:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3377:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3393:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3384:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3384:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3377:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3409:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3423:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3431:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3419:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3409:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3286:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3289:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3283:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3297:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3299:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3308:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3304:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3304:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3299:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3279:3:10",
																"statements": []
															},
															"src": "3275:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3453:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3461:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3453:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2958:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2969:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2980:4:10",
														"type": ""
													}
												],
												"src": "2838:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3545:191:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3591:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3600:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3603:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3593:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3593:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3593:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3566:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3562:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:32:10"
															},
															"nodeType": "YulIf",
															"src": "3555:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3616:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3642:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3629:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3620:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3700:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "3661:38:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3661:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3715:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3725:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3511:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3522:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3534:6:10",
														"type": ""
													}
												],
												"src": "3475:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3915:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:10"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4021:33:10",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3994:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4064:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4076:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4072:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4064:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3892:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3906:4:10",
														"type": ""
													}
												],
												"src": "3741:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4275:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4326:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4337:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4315:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:10"
																	},
																	{
																		"hexValue": "4e4f542061207472757374656420697373756572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4381:22:10",
																		"type": "",
																		"value": "NOT a trusted issuer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4252:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4266:4:10",
														"type": ""
													}
												],
												"src": "4101:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4641:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4675:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4671:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4691:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4664:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4725:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4710:18:10"
																	},
																	{
																		"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4730:34:10",
																		"type": "",
																		"value": "cannot have more than 15 claim t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4796:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4781:18:10"
																	},
																	{
																		"hexValue": "6f70696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4801:7:10",
																		"type": "",
																		"value": "opics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4774:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4774:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4774:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4818:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4830:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4841:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4826:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4818:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4601:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4615:4:10",
														"type": ""
													}
												],
												"src": "4450:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5030:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5047:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5131:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:18:10"
																	},
																	{
																		"hexValue": "636c61696d20746f706963732063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5136:30:10",
																		"type": "",
																		"value": "claim topics cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5184:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5176:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5007:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5021:4:10",
														"type": ""
													}
												],
												"src": "4856:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5245:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5265:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5255:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5329:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5213:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5377:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5406:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5387:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5434:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5437:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5427:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5458:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5461:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5345:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5526:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5536:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5548:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5551:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5536:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5577:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5579:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5579:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5579:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5568:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5574:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5565:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:11:10"
															},
															"nodeType": "YulIf",
															"src": "5562:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5508:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5511:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5517:4:10",
														"type": ""
													}
												],
												"src": "5477:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5642:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5666:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5671:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5652:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5716:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "5610:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5789:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5820:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5822:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5822:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5805:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5816:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5812:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5802:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:17:10"
															},
															"nodeType": "YulIf",
															"src": "5799:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5851:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5862:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5851:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5771:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5781:3:10",
														"type": ""
													}
												],
												"src": "5742:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:282:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6060:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6071:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6053:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6094:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6105:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6090:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6110:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6083:34:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6161:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6170:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6173:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6163:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6163:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6163:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6132:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6148:3:10",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6153:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6144:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6144:11:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6140:19:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6129:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:31:10"
															},
															"nodeType": "YulIf",
															"src": "6126:51:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6186:28:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6204:1:10",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6207:6:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6200:14:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6190:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:18:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6256:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6264:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6280:39:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6296:9:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6307:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6292:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6292:22:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:31:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6280:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6004:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6015:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6023:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6034:4:10",
														"type": ""
													}
												],
												"src": "5882:443:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6504:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6521:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6555:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6566:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6551:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6571:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6544:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6605:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6590:18:10"
																	},
																	{
																		"hexValue": "747275737465642049737375657220616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6610:31:10",
																		"type": "",
																		"value": "trusted Issuer already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6583:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6651:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6663:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6651:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6481:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6495:4:10",
														"type": ""
													}
												],
												"src": "6330:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6862:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6924:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6909:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6929:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6902:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6902:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6902:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:10"
																	},
																	{
																		"hexValue": "7472757374656420636c61696d20746f706963732063616e6e6f742062652065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6968:34:10",
																		"type": "",
																		"value": "trusted claim topics cannot be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6941:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6941:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:18:10"
																	},
																	{
																		"hexValue": "6d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7039:6:10",
																		"type": "",
																		"value": "mpty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7012:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7055:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7067:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7078:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7055:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6839:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6853:4:10",
														"type": ""
													}
												],
												"src": "6688:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7284:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7318:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7329:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7314:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7334:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7307:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7353:18:10"
																	},
																	{
																		"hexValue": "63616e6e6f742068617665206d6f7265207468616e2035302074727573746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7373:34:10",
																		"type": "",
																		"value": "cannot have more than 50 trusted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7346:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:10"
																	},
																	{
																		"hexValue": "2069737375657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7444:10:10",
																		"type": "",
																		"value": " issuers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7417:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7464:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7476:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7487:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7472:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7464:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7244:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7258:4:10",
														"type": ""
													}
												],
												"src": "7093:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7676:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7686:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7777:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7762:18:10"
																	},
																	{
																		"hexValue": "747275737465642049737375657220646f65736e2774206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7782:30:10",
																		"type": "",
																		"value": "trusted Issuer doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7822:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7834:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7822:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7653:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7667:4:10",
														"type": ""
													}
												],
												"src": "7502:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7967:101:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7977:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7989:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8000:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7985:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7977:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8019:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8034:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8050:2:10",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8054:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8046:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8046:10:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8058:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8042:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8042:18:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8030:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8030:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8012:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8012:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8012:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7936:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7947:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7958:4:10",
														"type": ""
													}
												],
												"src": "7859:209:10"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_IClaimIssuer(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$49t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$49(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NOT a trusted issuer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"cannot have more than 15 claim t\")\n        mstore(add(headStart, 96), \"opics\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"claim topics cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value1)\n        calldatacopy(add(headStart, 64), value0, length)\n        tail := add(add(headStart, length), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"trusted Issuer already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"trusted claim topics cannot be e\")\n        mstore(add(headStart, 96), \"mpty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"cannot have more than 50 trusted\")\n        mstore(add(headStart, 96), \" issuers\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"trusted Issuer doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x116A JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0xBC PUSH2 0x63F JUMP JUMPDEST PUSH2 0x116 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xBC PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH2 0xBC PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0xBC PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH2 0xBC PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x12A5 JUMP JUMPDEST DUP1 PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x636C61696D20746F706963732063616E6E6F7420626520656D707479 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x2C7 JUMPI PUSH2 0x2C7 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x31B JUMPI PUSH2 0x31B PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x406 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x34E PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x397 JUMPI PUSH2 0x397 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x3DF JUMPI PUSH2 0x3DF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x418 JUMP JUMPDEST DUP1 PUSH2 0x410 DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E7 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x426 SWAP1 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x452 SWAP1 DUP4 DUP4 PUSH2 0x1028 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x474 JUMPI PUSH2 0x474 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x4C2 DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x456 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x561 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5B3 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5CD JUMP JUMPDEST DUP1 PUSH2 0x5BD DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57F JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x615 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x651 PUSH1 0x0 PUSH2 0xF2C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x65E PUSH2 0xF88 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x676 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x32 GT PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x83E SWAP1 DUP4 DUP4 PUSH2 0x1028 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x860 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8AE DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x842 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x506 SWAP3 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA42 JUMPI PUSH1 0x0 PUSH2 0x9A9 PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9B9 JUMPI PUSH2 0x9B9 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x9E3 JUMPI PUSH2 0x9E3 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP1 PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xA54 JUMP JUMPDEST DUP1 PUSH2 0xA4C DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB29 PUSH1 0x1 DUP5 PUSH2 0x1316 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB39 JUMPI PUSH2 0xB39 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xB72 JUMPI PUSH2 0xB72 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xBBA JUMPI PUSH2 0xBBA PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xBF3 JUMP JUMPDEST DUP1 PUSH2 0xBEB DUP2 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC2 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC01 SWAP1 PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA58 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC2B SWAP2 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x1D1C9D5CDD195908125CDCDD595C88191BD95CDB89DD08195E1A5CDD PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD15 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD8C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD6E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH2 0xFAC JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDE3 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDF1 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE38 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xE41 CALLER PUSH2 0xFD0 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE87 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xEB4 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC4 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEEE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0xF2C JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0xF03 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x651 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF36 PUSH2 0xF88 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 JUMP JUMPDEST PUSH2 0xFD8 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0xEF7 DUP2 PUSH2 0x1006 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC4 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 PUSH2 0xFAC JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1063 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1063 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST POP PUSH2 0x106F SWAP3 SWAP2 POP PUSH2 0x108D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x108E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10D7 DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x115C DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x119F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1201 DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C4 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5CD PUSH2 0x1300 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1351 JUMPI PUSH2 0x1351 PUSH2 0x1300 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SHR PUSH8 0xA481876C806B1927 CALLER 0x28 0x2D 0xBE PUSH7 0xF9DBB531F63B64 PUSH8 0x616F210DF0FDDC33 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "4076:5993:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6931:1469;;;;;;:::i;:::-;;:::i;:::-;;9647:420;;;;;;:::i;:::-;;:::i;:::-;;;1451:14:10;;1444:22;1426:41;;1414:2;1399:18;9647:420:7;;;;;;;;8704:179;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3165:101:4:-;;;:::i;2451:144::-;;;:::i;:::-;;;;;;;:::i;4337:919:7:-;;;;;;:::i;:::-;;:::i;5342:1499::-;;;;;;:::i;:::-;;:::i;9263:304::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8484:123::-;;;:::i;4174:80::-;;;:::i;8965:204::-;;;;;;:::i;:::-;;:::i;3415:215:4:-;;;;;;:::i;:::-;;:::i;6931:1469:7:-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;7072:37:7;::::1;7064:81;;;;-1:-1:-1::0;;;7064:81:7::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;7163:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;7155:95:::1;;;;-1:-1:-1::0;;;7155:95:7::1;;;;;;;:::i;:::-;7291:2;7268:25:::0;::::1;;7260:75;;;;-1:-1:-1::0;;;7260:75:7::1;;;;;;;:::i;:::-;7353:23:::0;7345:64:::1;;;::::0;-1:-1:-1;;;7345:64:7;;5058:2:10;7345:64:7::1;::::0;::::1;5040:21:10::0;5097:2;5077:18;;;5070:30;-1:-1:-1;;;5116:18:10;;;5109:58;5184:18;;7345:64:7::1;4856:352:10::0;7345:64:7::1;7425:9;7420:686;-1:-1:-1::0;;;;;7444:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;7440:61;::::1;7420:686;;;-1:-1:-1::0;;;;;7543:50:7;::::1;7522:18;7543:50:::0;;;:25:::1;:50;::::0;;;;:53;;7594:1;;7543:53;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;7633:40;;;:28:::1;:40:::0;;;;;;:47;7543:53;;-1:-1:-1;7633:47:7;7694:402:::1;7718:12;7714:1;:16;7694:402;;;7759:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;7759:61:7;::::1;::::0;:40;7800:1;;7759:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7759:43:7::1;:61:::0;7755:327:::1;;7910:40;::::0;;;:28:::1;:40;::::0;;;;7951:16:::1;7966:1;7951:12:::0;:16:::1;:::i;:::-;7910:58;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;7844:40;;;:28:::1;:40:::0;;;;;;;:43;;-1:-1:-1;;;;;7910:58:7;;::::1;::::0;7885:1;;7844:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:124:::0;;-1:-1:-1;;;;;;7844:124:7::1;-1:-1:-1::0;;;;;7844:124:7;;;::::1;::::0;;;::::1;::::0;;;7990:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;7990:46:7;;;;;-1:-1:-1;;;;;;7990:46:7::1;::::0;;;;;8058:5:::1;;7755:327;7732:3:::0;::::1;::::0;::::1;:::i;:::-;;;;7694:402;;;;7508:598;;7503:3;;;;;:::i;:::-;;;;7420:686;;;-1:-1:-1::0;;;;;;8115:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:65:::1;::::0;8168:12;;8115:65:::1;:::i;:::-;;8195:9;8190:141;8210:23:::0;;::::1;8190:141;;;8254:28;:45;8283:12;;8296:1;8283:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;8254:45:::0;;-1:-1:-1;8254:45:7;;::::1;::::0;;;;;;-1:-1:-1;8254:45:7;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;8254:66:7::1;-1:-1:-1::0;;;;;8254:66:7;::::1;;::::0;;8235:3;::::1;::::0;::::1;:::i;:::-;;;;8190:141;;;;8364:14;-1:-1:-1::0;;;;;8345:48:7::1;;8380:12;;8345:48;;;;;;;:::i;:::-;;;;;;;;6931:1469:::0;;;:::o;9647:420::-;-1:-1:-1;;;;;9773:34:7;;9740:4;9773:34;;;:25;:34;;;;;;;;:41;;9824:65;;;;;;;;;;;;;;;9773:41;9740:4;;9824:65;9773:34;:41;;9824:65;;9773:34;:41;9824:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9904:9;9899:140;9923:6;9919:1;:10;9899:140;;;9972:11;9954;9966:1;9954:14;;;;;;;;:::i;:::-;;;;;;;:29;9950:79;;10010:4;10003:11;;;;;;;9950:79;9931:3;;;;:::i;:::-;;;;9899:140;;;;10055:5;10048:12;;;;9647:420;;;;;:::o;8704:179::-;8836:40;;;;:28;:40;;;;;;;;;8829:47;;;;;;;;;;;;;;;;;8796:21;;8829:47;;;8836:40;8829:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8829:47:7;;;;;;;;;;;;;;;;;;;;;;;8704:179;;;:::o;3165:101:4:-;2344:13;:11;:13::i;:::-;3229:30:::1;3256:1;3229:18;:30::i;:::-;3165:101::o:0;2451:144::-;2497:7;2516:24;2543:20;:18;:20::i;:::-;2580:8;-1:-1:-1;;;;;2580:8:4;;2451:144;-1:-1:-1;;2451:144:4:o;4337:919:7:-;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4471:37:7;::::1;4463:81;;;;-1:-1:-1::0;;;4463:81:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4562:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;4554:104:::1;;;::::0;-1:-1:-1;;;4554:104:7;;6532:2:10;4554:104:7::1;::::0;::::1;6514:21:10::0;6571:2;6551:18;;;6544:30;6610:31;6590:18;;;6583:59;6659:18;;4554:104:7::1;6330:353:10::0;4554:104:7::1;4676:23:::0;4668:72:::1;;;::::0;-1:-1:-1;;;4668:72:7;;6890:2:10;4668:72:7::1;::::0;::::1;6872:21:10::0;6929:2;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;-1:-1:-1;;;7019:18:10;;;7012:34;7063:19;;4668:72:7::1;6688:400:10::0;4668:72:7::1;4781:2;4758:25:::0;::::1;;4750:75;;;;-1:-1:-1::0;;;4750:75:7::1;;;;;;;:::i;:::-;4843:15;:22:::0;4868:2:::1;-1:-1:-1::0;4835:80:7::1;;;::::0;-1:-1:-1;;;4835:80:7;;7295:2:10;4835:80:7::1;::::0;::::1;7277:21:10::0;7334:2;7314:18;;;7307:30;7373:34;7353:18;;;7346:62;-1:-1:-1;;;7424:18:10;;;7417:38;7472:19;;4835:80:7::1;7093:404:10::0;4835:80:7::1;4925:15;:36:::0;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;4925:36:7::1;-1:-1:-1::0;;;;;4925:36:7;::::1;::::0;;::::1;::::0;;;4971:50;;4925:36:::1;4971:50:::0;;;;:65:::1;::::0;5024:12;;4971:65:::1;:::i;:::-;;5051:9;5046:141;5066:23:::0;;::::1;5046:141;;;5110:28;:45;5139:12;;5152:1;5139:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;5110:45:::0;;-1:-1:-1;5110:45:7;;::::1;::::0;;;;;;-1:-1:-1;5110:45:7;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5110:66:7::1;-1:-1:-1::0;;;;;5110:66:7;::::1;;::::0;;5091:3;::::1;::::0;::::1;:::i;:::-;;;;5046:141;;;;5220:14;-1:-1:-1::0;;;;;5201:48:7::1;;5236:12;;5201:48;;;;;;;:::i;5342:1499::-:0;2344:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;5446:37:7;::::1;5438:81;;;;-1:-1:-1::0;;;5438:81:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5537:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;5529:95:::1;;;;-1:-1:-1::0;;;5529:95:7::1;;;;;;;:::i;:::-;5634:14;5651:22:::0;;;5683:246:::1;5707:6;5703:1;:10;5683:246;;;5760:14;-1:-1:-1::0;;;;;5738:36:7::1;:15;5754:1;5738:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5738:18:7::1;:36:::0;5734:185:::1;;5815:15;5831:10;5840:1;5831:6:::0;:10:::1;:::i;:::-;5815:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;5794:18;;-1:-1:-1;;;;;5815:27:7;;::::1;::::0;;5810:1;;5794:18;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;:48:::0;;-1:-1:-1;;;;;;5794:48:7::1;-1:-1:-1::0;;;;;5794:48:7;;;::::1;::::0;;;::::1;::::0;;;5860:21;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5860:21:7;;;;;-1:-1:-1;;;;;;5860:21:7::1;::::0;;;;;5899:5:::1;;5734:185;5715:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5683:246;;;;5956:23;5938:779;-1:-1:-1::0;;;;;6015:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;5997:75;::::1;5938:779;;;-1:-1:-1::0;;;;;6140:50:7;::::1;6119:18;6140:50:::0;;;:25:::1;:50;::::0;;;;:67;;6191:15;;6140:67;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;6244:40;;;:28:::1;:40:::0;;;;;;:47;6140:67;;-1:-1:-1;6244:47:7;6305:402:::1;6329:12;6325:1;:16;6305:402;;;6370:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;6370:61:7;::::1;::::0;:40;6411:1;;6370:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6370:43:7::1;:61:::0;6366:327:::1;;6521:40;::::0;;;:28:::1;:40;::::0;;;;6562:16:::1;6577:1;6562:12:::0;:16:::1;:::i;:::-;6521:58;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;6455:40;;;:28:::1;:40:::0;;;;;;;:43;;-1:-1:-1;;;;;6521:58:7;;::::1;::::0;6496:1;;6455:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:124:::0;;-1:-1:-1;;;;;;6455:124:7::1;-1:-1:-1::0;;;;;6455:124:7;;;::::1;::::0;;;::::1;::::0;;;6601:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6601:46:7;;;;;-1:-1:-1;;;;;;6601:46:7::1;::::0;;;;;6669:5:::1;;6366:327;6343:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6305:402;;;;6105:612;;6086:17;;;;;:::i;:::-;;;;5938:779;;;-1:-1:-1::0;;;;;;6733:50:7;::::1;;::::0;;;:25:::1;:50;::::0;;;;6726:57:::1;::::0;::::1;:::i;:::-;6798:36;::::0;-1:-1:-1;;;;;6798:36:7;::::1;::::0;::::1;::::0;;;::::1;5428:1413;5342:1499:::0;:::o;9263:304::-;-1:-1:-1;;;;;9397:50:7;;;;;;:25;:50;;;;;:57;9361:16;;9397:62;9389:104;;;;-1:-1:-1;;;9389:104:7;;7704:2:10;9389:104:7;;;7686:21:10;7743:2;7723:18;;;7716:30;-1:-1:-1;;;7762:18:10;;;7755:58;7830:18;;9389:104:7;7502:352:10;9389:104:7;-1:-1:-1;;;;;9510:50:7;;;;;;:25;:50;;;;;;;;;9503:57;;;;;;;;;;;;;;;;;9510:50;;9503:57;;9510:50;9503:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9263:304;;;:::o;8484:123::-;8545:21;8585:15;8578:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8578:22:7;;;;;;;;;;;;;;;;;;;;;;;8484:123;:::o;4174:80::-;4158:30:5;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:5;-1:-1:-1;;;4302:15:5;;;4301:16;;-1:-1:-1;;;;;4348:14:5;4279:19;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:5;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:5;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:5;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;;;;;4951:18:5;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:5;-1:-1:-1;;;5013:22:5;;;4979:67;4221:26:7::1;4236:10;4221:14;:26::i;:::-;5070:14:5::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:5;;;5142:14;;-1:-1:-1;8012:50:10;;5142:14:5;;8000:2:10;7985:18;5142:14:5;;;;;;;5066:101;4092:1081;;;;;4174:80:7:o;8965:204::-;-1:-1:-1;;;;;9058:34:7;;9039:4;9058:34;;;:25;:34;;;;;:41;:45;9055:86;;-1:-1:-1;9126:4:7;;8965:204;-1:-1:-1;8965:204:7:o;9055:86::-;-1:-1:-1;9157:5:7;;8965:204;-1:-1:-1;8965:204:7:o;3415:215:4:-;2344:13;:11;:13::i;:::-;-1:-1:-1;;;;;3499:22:4;::::1;3495:91;;3572:1;3544:31;;-1:-1:-1::0;;;3544:31:4::1;;;;;;;;:::i;3495:91::-;3595:28;3614:8;3595:18;:28::i;:::-;3415:215:::0;:::o;2668:162::-;966:10:6;2727:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;2727:23:4;;2723:101;;966:10:6;2773:40:4;;-1:-1:-1;;;2773:40:4;;;;;;;;:::i;3784:248::-;3857:24;3884:20;:18;:20::i;:::-;3933:8;;-1:-1:-1;;;;;3951:19:4;;;-1:-1:-1;;;;;;3951:19:4;;;;;;3985:40;;3857:47;;-1:-1:-1;3933:8:4;;;;;3985:40;;3914:16;;3985:40;3847:185;;3784:248;:::o;1202:159::-;1323:22;;1202:159::o;8737:170:5:-;8870:21;;8737:170::o;1857:127:4:-;6931:20:5;:18;:20::i;:::-;1939:38:4::1;1964:12;1939:24;:38::i;7084:141:5:-:0;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;-1:-1:-1;;;7191:17:5;;;;;;;;;;;1990:235:4;6931:20:5;:18;:20::i;8487:120::-;8537:4;8560:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8560:40:5;;;;;;-1:-1:-1;8487:120:5:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:145:10;-1:-1:-1;;;;;103:31:10;;93:42;;83:70;;149:1;146;139:12;164:783;278:6;286;294;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;402:9;389:23;421:45;460:5;421:45;:::i;:::-;485:5;-1:-1:-1;541:2:10;526:18;;513:32;-1:-1:-1;;;;;594:14:10;;;591:34;;;621:1;618;611:12;591:34;659:6;648:9;644:22;634:32;;704:7;697:4;693:2;689:13;685:27;675:55;;726:1;723;716:12;675:55;766:2;753:16;792:2;784:6;781:14;778:34;;;808:1;805;798:12;778:34;861:7;856:2;846:6;843:1;839:14;835:2;831:23;827:32;824:45;821:65;;;882:1;879;872:12;821:65;913:2;909;905:11;895:21;;935:6;925:16;;;;;164:783;;;;;:::o;952:329::-;1020:6;1028;1081:2;1069:9;1060:7;1056:23;1052:32;1049:52;;;1097:1;1094;1087:12;1049:52;1136:9;1123:23;1155:45;1194:5;1155:45;:::i;:::-;1219:5;1271:2;1256:18;;;;1243:32;;-1:-1:-1;;;952:329:10:o;1478:180::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;-1:-1:-1;1629:23:10;;1478:180;-1:-1:-1;1478:180:10:o;1663:677::-;1853:2;1905:21;;;1975:13;;1878:18;;;1997:22;;;1824:4;;1853:2;2076:15;;;;2050:2;2035:18;;;1824:4;2119:195;2133:6;2130:1;2127:13;2119:195;;;2198:13;;-1:-1:-1;;;;;2194:39:10;2182:52;;2289:15;;;;2254:12;;;;2230:1;2148:9;2119:195;;;-1:-1:-1;2331:3:10;;1663:677;-1:-1:-1;;;;;;1663:677:10:o;2345:203::-;-1:-1:-1;;;;;2509:32:10;;;;2491:51;;2479:2;2464:18;;2345:203::o;2553:280::-;2631:6;2684:2;2672:9;2663:7;2659:23;2655:32;2652:52;;;2700:1;2697;2690:12;2652:52;2739:9;2726:23;2758:45;2797:5;2758:45;:::i;:::-;2822:5;2553:280;-1:-1:-1;;;2553:280:10:o;2838:632::-;3009:2;3061:21;;;3131:13;;3034:18;;;3153:22;;;2980:4;;3009:2;3232:15;;;;3206:2;3191:18;;;2980:4;3275:169;3289:6;3286:1;3283:13;3275:169;;;3350:13;;3338:26;;3419:15;;;;3384:12;;;;3311:1;3304:9;3275:169;;3741:355;3943:2;3925:21;;;3982:2;3962:18;;;3955:30;4021:33;4016:2;4001:18;;3994:61;4087:2;4072:18;;3741:355::o;4101:344::-;4303:2;4285:21;;;4342:2;4322:18;;;4315:30;-1:-1:-1;;;4376:2:10;4361:18;;4354:50;4436:2;4421:18;;4101:344::o;4450:401::-;4652:2;4634:21;;;4691:2;4671:18;;;4664:30;4730:34;4725:2;4710:18;;4703:62;-1:-1:-1;;;4796:2:10;4781:18;;4774:35;4841:3;4826:19;;4450:401::o;5213:127::-;5274:10;5269:3;5265:20;5262:1;5255:31;5305:4;5302:1;5295:15;5329:4;5326:1;5319:15;5345:127;5406:10;5401:3;5397:20;5394:1;5387:31;5437:4;5434:1;5427:15;5461:4;5458:1;5451:15;5477:128;5544:9;;;5565:11;;;5562:37;;;5579:18;;:::i;5610:127::-;5671:10;5666:3;5662:20;5659:1;5652:31;5702:4;5699:1;5692:15;5726:4;5723:1;5716:15;5742:135;5781:3;5802:17;;;5799:43;;5822:18;;:::i;:::-;-1:-1:-1;5869:1:10;5858:13;;5742:135::o;5882:443::-;6071:2;6053:21;;;6090:18;;6083:34;;;-1:-1:-1;;;;;;6129:31:10;;6126:51;;;6173:1;6170;6163:12;6126:51;6207:6;6204:1;6200:14;6264:6;6256;6251:2;6240:9;6236:18;6223:48;6292:22;;;;6316:2;6288:31;;5882:443;-1:-1:-1;;;5882:443:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1012600",
								"executionCost": "1054",
								"totalCost": "1013654"
							},
							"external": {
								"addTrustedIssuer(address,uint256[])": "infinite",
								"getTrustedIssuerClaimTopics(address)": "infinite",
								"getTrustedIssuers()": "infinite",
								"getTrustedIssuersForClaimTopic(uint256)": "infinite",
								"hasClaimTopic(address,uint256)": "infinite",
								"init()": "infinite",
								"isTrustedIssuer(address)": "1466",
								"owner()": "1176",
								"removeTrustedIssuer(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateIssuerClaimTopics(address,uint256[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4076,
									"end": 10069,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e81c67a481876c806b192733282dbe66f9dbb531f63b6467616f210df0fddc3364736f6c63430008110033",
									".code": [
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "4BC7E84"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "34A89987"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "52C111D1"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "9F63EA98"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "B93D28EB"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "C28FB278"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "D9DD24C5"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "E1C7392A"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "EF2ED1A4"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 10069,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6931,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6931,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9647,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9647,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1444,
											"end": 1466,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8704,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8704,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8704,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2451,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2451,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 4337,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4337,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5342,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5342,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 9263,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 9263,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 9263,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8484,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4174,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8965,
											"end": 9169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8965,
											"end": 9169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7072,
											"end": 7109,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 7064,
											"end": 7145,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 7064,
											"end": 7145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7163,
											"end": 7213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7213,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7220,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 7155,
											"end": 7250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 7155,
											"end": 7250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7268,
											"end": 7293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7293,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7293,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7260,
											"end": 7335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 7260,
											"end": 7335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7345,
											"end": 7409,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7345,
											"end": 7409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636C61696D20746F706963732063616E6E6F7420626520656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4856,
											"end": 5208,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7345,
											"end": 7409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7444,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7494,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7501,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7501,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7543,
											"end": 7593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7593,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7543,
											"end": 7596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7596,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7714,
											"end": 7715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7714,
											"end": 7730,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7759,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7759,
											"end": 7802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7759,
											"end": 7802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 8082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7755,
											"end": 8082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7910,
											"end": 7950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7950,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 7967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7966,
											"end": 7967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 7967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7951,
											"end": 7967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 7967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7951,
											"end": 7967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7910,
											"end": 7968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7884,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7844,
											"end": 7887,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7887,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7968,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8030,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7990,
											"end": 8036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 8036,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8058,
											"end": 8063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 8058,
											"end": 8063,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 8082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7755,
											"end": 8082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 7732,
											"end": 7735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7732,
											"end": 7735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 8096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 8106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 8106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7503,
											"end": 7506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7420,
											"end": 8106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8115,
											"end": 8165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8165,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8115,
											"end": 8180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8115,
											"end": 8180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8115,
											"end": 8180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8195,
											"end": 8204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8210,
											"end": 8233,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8254,
											"end": 8299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8295,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8295,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8297,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8283,
											"end": 8298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8298,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8299,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 8235,
											"end": 8238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8190,
											"end": 8331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8378,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "EC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF"
										},
										{
											"begin": 8380,
											"end": 8392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8345,
											"end": 8393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8393,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 8400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9798,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9923,
											"end": 9929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9919,
											"end": 9929,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 9983,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 9954,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9983,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9950,
											"end": 10029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10014,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10029,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9950,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 9931,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 10039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10055,
											"end": 10060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10060,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10048,
											"end": 10060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10048,
											"end": 10060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10048,
											"end": 10060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 10067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8796,
											"end": 8817,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3165,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3256,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3229,
											"end": 3259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3229,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2563,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4337,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4471,
											"end": 4508,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4463,
											"end": 4544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4463,
											"end": 4544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4612,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4619,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6573,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6641,
											"name": "PUSH",
											"source": 10,
											"value": "747275737465642049737375657220616C726561647920657869737473000000"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6330,
											"end": 6683,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4554,
											"end": 4658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 10,
											"value": "7472757374656420636C61696D20746F706963732063616E6E6F742062652065"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 7003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7063,
											"end": 7082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6688,
											"end": 7088,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4668,
											"end": 4740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4758,
											"end": 4783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4783,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4750,
											"end": 4825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4750,
											"end": 4825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 4915,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4915,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4835,
											"end": 4915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7298,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7334,
											"end": 7336,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7407,
											"name": "PUSH",
											"source": 10,
											"value": "63616E6E6F742068617665206D6F7265207468616E2035302074727573746564"
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2069737375657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7491,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7472,
											"end": 7491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7093,
											"end": 7497,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4835,
											"end": 4915,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "PUSH",
											"source": 7,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5021,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4971,
											"end": 5036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4971,
											"end": 5036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4971,
											"end": 5036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 5036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5089,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5110,
											"end": 5155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5151,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5151,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5153,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5139,
											"end": 5154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5154,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5176,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5091,
											"end": 5094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872"
										},
										{
											"begin": 5236,
											"end": 5248,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5248,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5201,
											"end": 5249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5446,
											"end": 5483,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5438,
											"end": 5519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5438,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5587,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5594,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5599,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5529,
											"end": 5624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5529,
											"end": 5624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5673,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5713,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5774,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5738,
											"end": 5774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5755,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5738,
											"end": 5756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5756,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5738,
											"end": 5756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5734,
											"end": 5919,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5840,
											"end": 5841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5831,
											"end": 5841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5831,
											"end": 5841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5831,
											"end": 5841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5831,
											"end": 5841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5815,
											"end": 5842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 5842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5794,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5794,
											"end": 5842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5842,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5860,
											"end": 5881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5860,
											"end": 5881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5899,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5734,
											"end": 5919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5715,
											"end": 5718,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6015,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6065,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6072,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6072,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6140,
											"end": 6190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6206,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6140,
											"end": 6207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6284,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6291,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6341,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6370,
											"end": 6410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6431,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6370,
											"end": 6413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6431,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6366,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6521,
											"end": 6561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6561,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6577,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6562,
											"end": 6574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6562,
											"end": 6578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6562,
											"end": 6578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6521,
											"end": 6579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6495,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6521,
											"end": 6579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6497,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6455,
											"end": 6498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6579,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6641,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6601,
											"end": 6647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6601,
											"end": 6647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6647,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 6669,
											"end": 6674,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6366,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6343,
											"end": 6346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6343,
											"end": 6346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6346,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6086,
											"end": 6103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6086,
											"end": 6103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5938,
											"end": 6717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6733,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6726,
											"end": 6783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6726,
											"end": 6783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6726,
											"end": 6783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321"
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6834,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 6841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9422,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9447,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9454,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9377,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9361,
											"end": 9377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9459,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 7707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C9D5CDD195908125CDCDD595C88191BD95CDB89DD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 7502,
											"end": 7854,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 9389,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9535,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9263,
											"end": 9567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8566,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8585,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4174,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4236,
											"end": 4246,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4221,
											"end": 4247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4221,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8012,
											"end": 8062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7985,
											"end": 8003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9083,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9099,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 9055,
											"end": 9141,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9126,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9126,
											"end": 9130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 9169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9141,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 9055,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9157,
											"end": 9162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9157,
											"end": 9162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 9169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3521,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3544,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3495,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3595,
											"end": 3623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3595,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2668,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2727,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2723,
											"end": 2824,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2773,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3884,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3884,
											"end": 3904,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3884,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3970,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3904,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3904,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3985,
											"end": 4025,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1361,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1202,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 5,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 1964,
											"end": 1976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1939,
											"end": 1977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1990,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "281"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "281"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "282"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "281"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 159,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 14,
											"end": 159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 103,
											"end": 134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 103,
											"end": 134,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 93,
											"end": 135,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 83,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 83,
											"end": 153,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 147,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 151,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 164,
											"end": 947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 278,
											"end": 284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 294,
											"end": 300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 349,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 326,
											"end": 333,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 322,
											"end": 345,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 318,
											"end": 350,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 315,
											"end": 367,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 315,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 315,
											"end": 367,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 353,
											"end": 365,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 315,
											"end": 367,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 315,
											"end": 367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 412,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 421,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 421,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 421,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 421,
											"end": 466,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 421,
											"end": 466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 541,
											"end": 543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 526,
											"end": 544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 513,
											"end": 545,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 594,
											"end": 608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 594,
											"end": 608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 594,
											"end": 608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 591,
											"end": 625,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 591,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 591,
											"end": 625,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 611,
											"end": 623,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 591,
											"end": 625,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 591,
											"end": 625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 659,
											"end": 665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 644,
											"end": 666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 634,
											"end": 666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 634,
											"end": 666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 693,
											"end": 695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 689,
											"end": 702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 685,
											"end": 712,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 675,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 675,
											"end": 730,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 724,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 716,
											"end": 728,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 675,
											"end": 730,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 675,
											"end": 730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 753,
											"end": 769,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 792,
											"end": 794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 781,
											"end": 795,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 812,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 778,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 778,
											"end": 812,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 778,
											"end": 812,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 778,
											"end": 812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 856,
											"end": 858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 839,
											"end": 853,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 835,
											"end": 837,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 831,
											"end": 854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 824,
											"end": 869,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 886,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 821,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 821,
											"end": 886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 882,
											"end": 883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 872,
											"end": 884,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 886,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 821,
											"end": 886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 913,
											"end": 915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 905,
											"end": 916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 925,
											"end": 941,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 164,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 952,
											"end": 1281,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 952,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1079,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1084,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1099,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1146,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1155,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1593,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1608,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2140,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2331,
											"end": 2334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2331,
											"end": 2334,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2345,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2702,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2749,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2758,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 3470,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2838,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3295,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3283,
											"end": 3296,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 4096,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3741,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4054,
											"name": "PUSH",
											"source": 10,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4445,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4101,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2727AA1030903A393AB9BA32B21034B9B9BAB2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4354,
											"end": 4404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4851,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 4450,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4693,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4694,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "PUSH",
											"source": 10,
											"value": "63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074"
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4765,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F70696373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5340,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5213,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5269,
											"end": 5272,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5265,
											"end": 5285,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5334,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5472,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5345,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5401,
											"end": 5404,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5397,
											"end": 5417,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5434,
											"end": 5435,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5427,
											"end": 5442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5458,
											"end": 5459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5466,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5605,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5477,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5579,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5737,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5610,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5681,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5662,
											"end": 5682,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5706,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5692,
											"end": 5707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5726,
											"end": 5730,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5731,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5877,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5742,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5822,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6073,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6160,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6129,
											"end": 6160,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6262,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6253,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6249,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6271,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/TIRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"init()": "e1c7392a",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"owner()": "8da5cb5b",
							"removeTrustedIssuer(address)": "b93d28eb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-addTrustedIssuer}.\"},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\"},\"getTrustedIssuers()\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuers}.\"},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\"},\"hasClaimTopic(address,uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-hasClaimTopic}.\"},\"isTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-isTrustedIssuer}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-removeTrustedIssuer}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":\"TrustedIssuersRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf702b0c3a7ccdae8bb7b1265c9bb536ce4051311d82b1b44b94a43bfbe130818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de77c5e3f4ac02518481cb21e907f5f1fd5bb8f3f3c6c880fdb193afc006c77\",\"dweb:/ipfs/QmXXrLgxyDswm4zjz27GvGRZQWcWg8Tpu8ANvrmDk5q1sW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x65315805c3cddf140325ec9d7cf45cfca17b73b4680d1401e0869e63f4d4eebd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab79ad2381ae0dcbd1fa902630d2cf024c586f885bb7d54fd6e0ed93c22325\",\"dweb:/ipfs/QmYtzBU3tiEHPh68xFdxLGc5PJtxiH8RHmchx1hzwcRhZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdaecaa981ac8b1d77c4942c691cbeb71971a0fa2a0adba07e2f2d75da8ca2fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1596acf548eb5b52b95c684f8913729cdb04102ce76e3203c1831fa2dc6dfb3\",\"dweb:/ipfs/QmYQM9sizfJu613HW3UL52CUe6pxC3osc4bfJRyD1p8SWc\"]},\"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol\":{\"keccak256\":\"0x1c0ba80e53f407c039bad52c5309801c7ca5edd9c7a612a1f5987c93a2fce326\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ef7aba2f172ad32a8d7f39858fc87b3e286334de3e0cc70047ed64db1d7d78a\",\"dweb:/ipfs/QmX8FUSBKfYni5f9jMuBrtvM8JawzPsHWvGttS7hqUysUN\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"contracts t-rex/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x320af082f922d7c88ea00846398d23b9480e91a237424a2307a5bb0895eecb06\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abd64af2d878cb98d57bad8fdd15af0a0c777ca1335a00e2907d98322fad914a\",\"dweb:/ipfs/QmaYbKrxc5vAzZTvtSHbRuxHShAJUnojyoafaSpujd2W42\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1526,
								"contract": "contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_trustedIssuers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							{
								"astId": 1532,
								"contract": "contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_trustedIssuerClaimTopics",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1539,
								"contract": "contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_claimTopicsToTrustedIssuers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)"
							},
							{
								"astId": 1544,
								"contract": "contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IClaimIssuer)49)dyn_storage": {
								"base": "t_contract(IClaimIssuer)49",
								"encoding": "dynamic_array",
								"label": "contract IClaimIssuer[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IClaimIssuer)49": {
								"encoding": "inplace",
								"label": "contract IClaimIssuer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract IClaimIssuer[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerRemoved(address)": {
								"notice": "this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTrustedIssuer(address,uint256[])": {
								"details": "registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event",
									"_trustedIssuer": "The ClaimIssuer contract address of the trusted claim issuer."
								}
							},
							"getTrustedIssuerClaimTopics(address)": {
								"details": "Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.",
								"params": {
									"_trustedIssuer": "the trusted issuer concerned."
								},
								"returns": {
									"_0": "The set of claim topics that the trusted issuer is allowed to emit"
								}
							},
							"getTrustedIssuers()": {
								"details": "Function for getting all the trusted claim issuers stored.",
								"returns": {
									"_0": "array of all claim issuers registered."
								}
							},
							"getTrustedIssuersForClaimTopic(uint256)": {
								"details": "Function for getting all the trusted issuer allowed for a given claim topic.",
								"params": {
									"claimTopic": "the claim topic to get the trusted issuers for."
								},
								"returns": {
									"_0": "array of all claim issuer addresses that are allowed for the given claim topic."
								}
							},
							"hasClaimTopic(address,uint256)": {
								"details": "Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic",
								"params": {
									"_claimTopic": "the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it",
									"_issuer": "the address of the trusted issuer's ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted for this claim topic."
								}
							},
							"isTrustedIssuer(address)": {
								"details": "Checks if the ClaimIssuer contract is trusted",
								"params": {
									"_issuer": "the address of the ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted, false otherwise."
								}
							},
							"removeTrustedIssuer(address)": {
								"details": "Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first",
								"params": {
									"_trustedIssuer": "the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event"
								}
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event",
									"_trustedIssuer": "the claim issuer to update."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event\",\"_trustedIssuer\":\"The ClaimIssuer contract address of the trusted claim issuer.\"}},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\",\"params\":{\"_trustedIssuer\":\"the trusted issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the trusted issuer is allowed to emit\"}},\"getTrustedIssuers()\":{\"details\":\"Function for getting all the trusted claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the trusted issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the trusted issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the trusted issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted for this claim topic.\"}},\"isTrustedIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is trusted\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted, false otherwise.\"}},\"removeTrustedIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_trustedIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event\",\"_trustedIssuer\":\"the claim issuer to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerRemoved(address)": {
								"notice": "this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts t-rex/registry/storage/TIRStorage.sol": {
				"TIRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."
							},
							"_claimTopicsToTrustedIssuers": {
								"details": "Mapping between a claim topic and the allowed trusted issuers for it."
							},
							"_trustedIssuerClaimTopics": {
								"details": "Mapping between a trusted issuer address and its corresponding claimTopics."
							},
							"_trustedIssuers": {
								"details": "Array containing all TrustedIssuers identity contract address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/storage/TIRStorage.sol\":3912:4589  contract TIRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/storage/TIRStorage.sol\":3912:4589  contract TIRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122090c85d3547e305c4ff20fda191a04d562044824c4dd271c4d281c3e84c1fea7764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122090c85d3547e305c4ff20fda191a04d562044824c4dd271c4d281c3e84c1fea7764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xC8 0x5D CALLDATALOAD SELFBALANCE 0xE3 SDIV 0xC4 SELFDESTRUCT KECCAK256 REVERT LOG1 SWAP2 LOG0 0x4D JUMP KECCAK256 DIFFICULTY DUP3 0x4C 0x4D 0xD2 PUSH18 0xC4D281C3E84C1FEA7764736F6C6343000811 STOP CALLER ",
							"sourceMap": "3912:677:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122090c85d3547e305c4ff20fda191a04d562044824c4dd271c4d281c3e84c1fea7764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xC8 0x5D CALLDATALOAD SELFBALANCE 0xE3 SDIV 0xC4 SELFDESTRUCT KECCAK256 REVERT LOG1 SWAP2 LOG0 0x4D JUMP KECCAK256 DIFFICULTY DUP3 0x4C 0x4D 0xD2 PUSH18 0xC4D281C3E84C1FEA7764736F6C6343000811 STOP CALLER ",
							"sourceMap": "3912:677:9:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3912,
									"end": 4589,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090c85d3547e305c4ff20fda191a04d562044824c4dd271c4d281c3e84c1fea7764736f6c63430008110033",
									".code": [
										{
											"begin": 3912,
											"end": 4589,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3912,
											"end": 4589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 4589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 4589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 4589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 4589,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol",
								"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
								"contracts t-rex/registry/storage/TIRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"},\"_claimTopicsToTrustedIssuers\":{\"details\":\"Mapping between a claim topic and the allowed trusted issuers for it.\"},\"_trustedIssuerClaimTopics\":{\"details\":\"Mapping between a trusted issuer address and its corresponding claimTopics.\"},\"_trustedIssuers\":{\"details\":\"Array containing all TrustedIssuers identity contract address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/storage/TIRStorage.sol\":\"TIRStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"contracts t-rex/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x320af082f922d7c88ea00846398d23b9480e91a237424a2307a5bb0895eecb06\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abd64af2d878cb98d57bad8fdd15af0a0c777ca1335a00e2907d98322fad914a\",\"dweb:/ipfs/QmaYbKrxc5vAzZTvtSHbRuxHShAJUnojyoafaSpujd2W42\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1526,
								"contract": "contracts t-rex/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_trustedIssuers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							{
								"astId": 1532,
								"contract": "contracts t-rex/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_trustedIssuerClaimTopics",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1539,
								"contract": "contracts t-rex/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_claimTopicsToTrustedIssuers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)"
							},
							{
								"astId": 1544,
								"contract": "contracts t-rex/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IClaimIssuer)49)dyn_storage": {
								"base": "t_contract(IClaimIssuer)49",
								"encoding": "dynamic_array",
								"label": "contract IClaimIssuer[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IClaimIssuer)49": {
								"encoding": "inplace",
								"label": "contract IClaimIssuer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)49)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract IClaimIssuer[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(IClaimIssuer)49)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 50,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 50,
							"sourceUnit": 329,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 328,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49,
								328,
								304,
								196
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 49,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 49,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 49,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										327
									],
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 328,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 49,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "88:1691:0",
							"usedErrors": []
						}
					],
					"src": "36:1744:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						]
					},
					"id": 197,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 59,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 70,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 81,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 92,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 89,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 101,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 110,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 196,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 196,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 196,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 196,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 159,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 196,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 172,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 173,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 196,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 196,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 196,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 197,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							304
						]
					},
					"id": 305,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 216,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 233,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 250,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 304,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 304,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 304,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 304,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						]
					},
					"id": 329,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 197,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 305,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 309,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "178:7:3"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "187:7:3"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 328,
							"linearizedBaseContracts": [
								328,
								304,
								196
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "201:334:3",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "549:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "581:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "571:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$328",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 314,
														"name": "IIdentity",
														"nameLocations": [
															"571:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 328,
														"src": "571:9:3"
													},
													"referencedDeclaration": 328,
													"src": "571:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$328",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "608:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "600:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "643:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "628:18:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "671:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "656:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:115:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "704:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:3"
									},
									"scope": 328,
									"src": "540:170:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 329,
							"src": "155:557:3",
							"usedErrors": []
						}
					],
					"src": "36:677:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							817
						],
						"OwnableUpgradeable": [
							518
						]
					},
					"id": 519,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 818,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 331,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 817,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 334,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"814:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 817,
										"src": "814:18:4"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "814:18:4"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "285:487:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518,
								817,
								771
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "791:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"id": 338,
									"members": [
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "949:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 338,
											"src": "941:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 336,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "941:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "916:14:4",
									"nodeType": "StructDefinition",
									"scope": 518,
									"src": "909:53:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1104:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 518,
									"src": "1079:116:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 339,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1079:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1129:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1280:81:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1299:56:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1313:32:4",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1323:22:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": true,
														"src": "1313:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 341,
														"isOffset": false,
														"isSlot": false,
														"src": "1323:22:4",
														"valueSize": 1
													}
												],
												"id": 347,
												"nodeType": "InlineAssembly",
												"src": "1290:65:4"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1211:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:2:4"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1277:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1254:24:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "OwnableStorage",
														"nameLocations": [
															"1254:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "1254:14:4"
													},
													"referencedDeclaration": 338,
													"src": "1254:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:26:4"
									},
									"scope": 518,
									"src": "1202:159:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1367:85:4",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 354,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1463:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1498:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1490:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:17:4"
									},
									"src": "1457:50:4"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1513:82:4",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 359,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1606:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:15:4"
									},
									"src": "1600:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 365,
									"name": "OwnershipTransferred",
									"nameLocation": "1653:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1690:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1674:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1721:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1705:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:57:4"
									},
									"src": "1647:84:4"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1929:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1964:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1939:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1939:38:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1737:115:4",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 370,
												"name": "onlyInitializing",
												"nameLocations": [
													"1912:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "1912:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1912:16:4"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1866:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1889:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1881:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:22:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:4"
									},
									"scope": 518,
									"src": "1857:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "2072:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 385,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2086:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2110:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2102:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 386,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2102:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2102:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2086:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "2082:95:4",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "2114:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2163:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2155:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 392,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2155:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2155:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 391,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "2135:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2135:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 397,
															"nodeType": "RevertStatement",
															"src": "2128:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2205:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 400,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2186:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2186:32:4"
											}
										]
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "onlyInitializing",
												"nameLocations": [
													"2055:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2055:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2055:16:4"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1999:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2032:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "2024:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:22:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:0:4"
									},
									"scope": 518,
									"src": "1990:235:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2334:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 408,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2344:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "2344:13:4"
											},
											{
												"id": 411,
												"nodeType": "PlaceholderStatement",
												"src": "2367:1:4"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "2231:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 413,
									"name": "onlyOwner",
									"nameLocation": "2322:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:2:4"
									},
									"src": "2313:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2506:89:4",
										"statements": [
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2539:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "2516:24:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 420,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 419,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2516:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "2516:14:4"
															},
															"referencedDeclaration": 338,
															"src": "2516:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 422,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2543:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$338_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:47:4"
											},
											{
												"expression": {
													"expression": {
														"id": 425,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2580:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2582:6:4",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "2580:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 418,
												"id": 427,
												"nodeType": "Return",
												"src": "2573:15:4"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2381:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2460:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:4"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:4"
									},
									"scope": 518,
									"src": "2451:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2713:117:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2727:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2727:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 435,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2738:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2738:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2727:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "2723:101:4",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "2752:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 439,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "2800:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2800:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2773:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2773:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "RevertStatement",
															"src": "2766:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "2601:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2677:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2713:0:4"
									},
									"scope": 518,
									"src": "2668:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3219:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3256:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3248:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 453,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3248:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3248:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 452,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3229:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "3229:30:4"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2836:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 449,
												"name": "onlyOwner",
												"nameLocations": [
													"3209:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "3209:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3209:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3174:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:4"
									},
									"scope": 518,
									"src": "3165:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "3485:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 468,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3499:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3519:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 469,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3511:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3511:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3499:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "3495:91:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "3523:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3572:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3564:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 475,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3564:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3564:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 474,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "3544:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3544:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "RevertStatement",
															"src": "3537:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3614:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 483,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "3595:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "3595:28:4"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3272:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyOwner",
												"nameLocations": [
													"3475:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "3475:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3475:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3424:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3450:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "3442:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:18:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3485:0:4"
									},
									"scope": 518,
									"src": "3415:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3847:185:4",
										"statements": [
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3880:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3857:24:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 495,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 494,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3857:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "3857:14:4"
															},
															"referencedDeclaration": 338,
															"src": "3857:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3884:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$338_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3884:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3857:47:4"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3922:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3914:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 500,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3914:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"expression": {
														"id": 502,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3933:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3935:6:4",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 337,
													"src": "3933:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3914:27:4"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 505,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3951:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$338_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3953:6:4",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "3951:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3962:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3951:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3951:19:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4006:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4016:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 511,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "3985:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3985:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "3980:45:4"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3636:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3793:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3820:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3812:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:18:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:0:4"
									},
									"scope": 518,
									"src": "3784:248:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 519,
							"src": "773:3261:4",
							"usedErrors": [
								354,
								359,
								534,
								537
							]
						}
					],
					"src": "102:3933:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							771
						]
					},
					"id": 772,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771
							],
							"name": "Initializable",
							"nameLocation": "2367:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"id": 528,
									"members": [
										{
											"constant": false,
											"id": 524,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 528,
											"src": "2813:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 523,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 527,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 528,
											"src": "2950:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 526,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:5",
									"nodeType": "StructDefinition",
									"scope": 771,
									"src": "2685:290:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 531,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "3098:115:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 529,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 530,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:5",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 534,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:5"
									},
									"src": "3285:30:5"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:5",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 537,
									"name": "NotInitializing",
									"nameLocation": "3389:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:5"
									},
									"src": "3383:24:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 542,
									"name": "Initialized",
									"nameLocation": "3514:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3526:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 539,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:5"
									},
									"src": "3508:34:5"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4092:1081:5",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4158:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 546,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 545,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "4158:20:5"
															},
															"referencedDeclaration": 528,
															"src": "4158:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 548,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4191:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:5"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:5",
													"subExpression": {
														"expression": {
															"id": 553,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4302:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "4302:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:5"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4327:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 557,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"expression": {
														"id": 559,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4348:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:5",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 524,
													"src": "4348:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:5"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4706:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 562,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4726:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 567,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4746:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:5"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4770:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4790:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 577,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$771",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$771",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 575,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:5",
														"subExpression": {
															"id": 585,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4856:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:5",
														"subExpression": {
															"id": 587,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4873:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "4851:91:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4887:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 590,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4908:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "4901:30:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 595,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4951:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "4951:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:5"
											},
											{
												"condition": {
													"id": 601,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "4983:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "4979:67:5",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "4999:47:5",
													"statements": [
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 602,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5013:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:5",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "5013:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:5"
														}
													]
												}
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:5"
											},
											{
												"condition": {
													"id": 611,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "5070:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "5066:101:5",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "5086:81:5",
													"statements": [
														{
															"expression": {
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 612,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5100:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:5",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 527,
																	"src": "5100:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 617,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 618,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "5142:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "EmitStatement",
															"src": "5137:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 625,
									"name": "initializer",
									"nameLocation": "4078:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:5"
									},
									"src": "4069:1104:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "6291:392:5",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "6357:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 631,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 630,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "6357:20:5"
															},
															"referencedDeclaration": 528,
															"src": "6357:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "6390:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 636,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6431:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6431:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 638,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6450:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:5",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "6450:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 640,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6468:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "IfStatement",
												"src": "6427:105:5",
												"trueBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "6477:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 643,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "6498:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 645,
															"nodeType": "RevertStatement",
															"src": "6491:30:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 648,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6541:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "6541:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 651,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "6558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:5"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 654,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6575:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6575:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:5"
											},
											{
												"id": 660,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:5"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 661,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6618:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:5",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "6618:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 668,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6668:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 667,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "6656:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "EmitStatement",
												"src": "6651:25:5"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 672,
									"name": "reinitializer",
									"nameLocation": "6261:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6275:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 627,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:5"
									},
									"src": "6252:431:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "6921:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6931:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:5"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:5"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 680,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:5"
									},
									"src": "6893:76:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "7136:89:5",
										"statements": [
											{
												"condition": {
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 684,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7151:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "7146:73:5",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "7170:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 687,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "7191:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 689,
															"nodeType": "RevertStatement",
															"src": "7184:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:5",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:5"
									},
									"scope": 771,
									"src": "7084:141:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "7760:373:5",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "7826:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 698,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 697,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 528,
																"src": "7826:20:5"
															},
															"referencedDeclaration": 528,
															"src": "7826:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7859:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:5"
											},
											{
												"condition": {
													"expression": {
														"id": 703,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "7900:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:5",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 527,
													"src": "7900:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "7896:76:5",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "7917:55:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 705,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "7938:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "7931:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 710,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7985:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:5",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "7985:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 712,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "7981:146:5",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "8021:106:5",
													"statements": [
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 718,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "8035:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:5",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 524,
																	"src": "8035:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 722,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 721,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 730,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 729,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 728,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "8087:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "EmitStatement",
															"src": "8082:34:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:5"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:5"
									},
									"scope": 771,
									"src": "7711:422:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "8308:63:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 745,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "8325:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:5",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 524,
													"src": "8325:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 744,
												"id": 748,
												"nodeType": "Return",
												"src": "8318:46:5"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:5"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8300:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 742,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:5"
									},
									"scope": 771,
									"src": "8243:128:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "8543:64:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 756,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "8560:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$528_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:5",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 527,
													"src": "8560:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 755,
												"id": 759,
												"nodeType": "Return",
												"src": "8553:47:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:5"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "8537:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:5"
									},
									"scope": 771,
									"src": "8487:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "8827:80:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:5",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 766,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 531,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:5",
														"valueSize": 1
													}
												],
												"id": 768,
												"nodeType": "InlineAssembly",
												"src": "8837:64:5"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:5",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "8795:30:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 764,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "8795:20:5"
													},
													"referencedDeclaration": 528,
													"src": "8795:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$528_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:5"
									},
									"scope": 771,
									"src": "8737:170:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 772,
							"src": "2349:6560:5",
							"usedErrors": [
								534,
								537
							]
						}
					],
					"src": "113:8797:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							817
						],
						"Initializable": [
							771
						]
					},
					"id": 818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 775,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 818,
							"sourceUnit": 772,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 774,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 771,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 777,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "728:13:6"
									},
									"id": 778,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 817,
							"linearizedBaseContracts": [
								817,
								771
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 781,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 780,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 817,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 786,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 817,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 795,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 794,
												"id": 797,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 817,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 804,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 803,
												"id": 806,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 817,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 812,
												"id": 814,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 817,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 818,
							"src": "688:505:6",
							"usedErrors": [
								534,
								537
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/implementation/TrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							817
						],
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"ITrustedIssuersRegistry": [
							1518
						],
						"OwnableUpgradeable": [
							518
						],
						"TIRStorage": [
							1545
						],
						"TrustedIssuersRegistry": [
							1417
						]
					},
					"id": 1418,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 819,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:7"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 50,
							"src": "3843:67:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 821,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 519,
							"src": "3911:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1519,
							"src": "3987:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts t-rex/registry/storage/TIRStorage.sol",
							"file": "../storage/TIRStorage.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1546,
							"src": "4038:35:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 824,
										"name": "ITrustedIssuersRegistry",
										"nameLocations": [
											"4111:23:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1518,
										"src": "4111:23:7"
									},
									"id": 825,
									"nodeType": "InheritanceSpecifier",
									"src": "4111:23:7"
								},
								{
									"baseName": {
										"id": 826,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"4136:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 518,
										"src": "4136:18:7"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "4136:18:7"
								},
								{
									"baseName": {
										"id": 828,
										"name": "TIRStorage",
										"nameLocations": [
											"4156:10:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1545,
										"src": "4156:10:7"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "4156:10:7"
								}
							],
							"canonicalName": "TrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417,
								1545,
								518,
								817,
								771,
								1518
							],
							"name": "TrustedIssuersRegistry",
							"nameLocation": "4085:22:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "4211:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 835,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4236:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4240:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4236:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 834,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "4221:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4221:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "4221:26:7"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 831,
												"name": "initializer",
												"nameLocations": [
													"4199:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 625,
												"src": "4199:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4199:11:7"
										}
									],
									"name": "init",
									"nameLocation": "4183:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4187:2:7"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:0:7"
									},
									"scope": 1417,
									"src": "4174:80:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1454
									],
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "4453:803:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 856,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "4479:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4471:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4471:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4471:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4506:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4498:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4498:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4498:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4471:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4510:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4463:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4463:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "4463:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 867,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "4562:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 872,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 870,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "4596:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4588:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 868,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4588:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4588:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4562:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4613:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4562:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4623:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4562:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "747275737465642049737375657220616c726561647920657869737473",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4626:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82",
																"typeString": "literal_string \"trusted Issuer already exists\""
															},
															"value": "trusted Issuer already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82",
																"typeString": "literal_string \"trusted Issuer already exists\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4554:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "4554:104:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 880,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "4676:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4689:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4676:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4698:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4676:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472757374656420636c61696d20746f706963732063616e6e6f7420626520656d707479",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4701:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277",
																"typeString": "literal_string \"trusted claim topics cannot be empty\""
															},
															"value": "trusted claim topics cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277",
																"typeString": "literal_string \"trusted claim topics cannot be empty\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4668:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "4668:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 888,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "4758:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4771:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4758:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3135",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4781:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "4758:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4785:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															},
															"value": "cannot have more than 15 claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4750:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4750:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "4750:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 896,
																	"name": "_trustedIssuers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "4843:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4859:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4843:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3530",
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4868:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "4843:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20353020747275737465642069737375657273",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4872:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73",
																"typeString": "literal_string \"cannot have more than 50 trusted issuers\""
															},
															"value": "cannot have more than 50 trusted issuers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73",
																"typeString": "literal_string \"cannot have more than 50 trusted issuers\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4835:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "4835:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4946:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"expression": {
															"id": 903,
															"name": "_trustedIssuers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "4925:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																"typeString": "contract IClaimIssuer[] storage ref"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4941:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4925:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
															"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "4925:36:7"
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 909,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "4971:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 914,
														"indexExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "5005:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4997:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4997:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4997:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4971:50:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 915,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "5024:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "4971:65:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "4971:65:7"
											},
											{
												"body": {
													"id": 938,
													"nodeType": "Block",
													"src": "5096:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "5161:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 929,
																			"name": "_claimTopicsToTrustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "5110:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 933,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 930,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "5139:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 932,
																			"indexExpression": {
																				"id": 931,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 919,
																				"src": "5152:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5139:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5110:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5156:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5110:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5110:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "5110:66:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 922,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "5066:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 923,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "5070:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5083:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5070:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5066:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"initializationExpression": {
													"assignments": [
														919
													],
													"declarations": [
														{
															"constant": false,
															"id": 919,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5059:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 939,
															"src": "5051:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 918,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5051:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 921,
													"initialValue": {
														"hexValue": "30",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5063:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5051:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5091:3:7",
														"subExpression": {
															"id": 926,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5091:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ExpressionStatement",
													"src": "5091:3:7"
												},
												"nodeType": "ForStatement",
												"src": "5046:141:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 941,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "5220:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 942,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "5236:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 940,
														"name": "TrustedIssuerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "5201:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "EmitStatement",
												"src": "5196:53:7"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "4260:72:7",
										"text": "  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}."
									},
									"functionSelector": "9f63ea98",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 850,
												"name": "onlyOwner",
												"nameLocations": [
													"4443:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "4443:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4443:9:7"
										}
									],
									"name": "addTrustedIssuer",
									"nameLocation": "4346:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:7"
									},
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "4376:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4363:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 842,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4363:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4363:12:7"
													},
													"referencedDeclaration": 49,
													"src": "4363:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "4411:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4392:31:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 845,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4392:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 846,
													"nodeType": "ArrayTypeName",
													"src": "4392:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:62:7"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4453:0:7"
									},
									"scope": 1417,
									"src": "4337:919:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "5428:1413:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 959,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5454:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5446:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5446:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5446:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5481:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5473:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 961,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5473:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5473:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5446:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5485:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5438:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "5438:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 970,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "5537:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 975,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 973,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "5571:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5563:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 971,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5563:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5563:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5537:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5588:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5537:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5598:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5537:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542061207472757374656420697373756572",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5601:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															},
															"value": "NOT a trusted issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "5529:95:7"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5642:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "5634:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5634:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"expression": {
														"id": 984,
														"name": "_trustedIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "5651:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
															"typeString": "contract IClaimIssuer[] storage ref"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5667:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5651:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5634:39:7"
											},
											{
												"body": {
													"id": 1020,
													"nodeType": "Block",
													"src": "5720:209:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 997,
																		"name": "_trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "5738:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 999,
																	"indexExpression": {
																		"id": 998,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "5754:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5738:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1000,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5760:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"src": "5738:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1019,
															"nodeType": "IfStatement",
															"src": "5734:185:7",
															"trueBody": {
																"id": 1018,
																"nodeType": "Block",
																"src": "5776:143:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1002,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1526,
																					"src": "5794:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1004,
																				"indexExpression": {
																					"id": 1003,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "5810:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5794:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1005,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1526,
																					"src": "5815:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1009,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1006,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 983,
																						"src": "5831:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1007,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5840:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5831:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5815:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "5794:48:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 1011,
																		"nodeType": "ExpressionStatement",
																		"src": "5794:48:7"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1012,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1526,
																					"src": "5860:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5876:3:7",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5860:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																					"typeString": "function (contract IClaimIssuer[] storage pointer)"
																				}
																			},
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5860:21:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1016,
																		"nodeType": "ExpressionStatement",
																		"src": "5860:21:7"
																	},
																	{
																		"id": 1017,
																		"nodeType": "Break",
																		"src": "5899:5:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 991,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5703:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 992,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "5707:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5703:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"initializationExpression": {
													"assignments": [
														988
													],
													"declarations": [
														{
															"constant": false,
															"id": 988,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5696:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1021,
															"src": "5688:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5688:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 990,
													"initialValue": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5700:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5688:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5715:3:7",
														"subExpression": {
															"id": 994,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5715:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 996,
													"nodeType": "ExpressionStatement",
													"src": "5715:3:7"
												},
												"nodeType": "ForStatement",
												"src": "5683:246:7"
											},
											{
												"body": {
													"id": 1098,
													"nodeType": "Block",
													"src": "6105:612:7",
													"statements": [
														{
															"assignments": [
																1039
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1039,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "6127:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1098,
																	"src": "6119:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6119:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1048,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1040,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "6140:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1045,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1043,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "6174:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6166:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1041,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6166:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6166:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6140:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1047,
																"indexExpression": {
																	"id": 1046,
																	"name": "claimTopicIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "6191:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6140:67:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6119:88:7"
														},
														{
															"assignments": [
																1050
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1050,
																	"mutability": "mutable",
																	"name": "topicsLength",
																	"nameLocation": "6229:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1098,
																	"src": "6221:20:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6221:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1055,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1051,
																		"name": "_claimTopicsToTrustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "6244:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																			"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																		}
																	},
																	"id": 1053,
																	"indexExpression": {
																		"id": 1052,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "6273:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6244:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6285:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6244:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6221:70:7"
														},
														{
															"body": {
																"id": 1096,
																"nodeType": "Block",
																"src": "6348:359:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			},
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1066,
																						"name": "_claimTopicsToTrustedIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1539,
																						"src": "6370:28:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 1068,
																					"indexExpression": {
																						"id": 1067,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1039,
																						"src": "6399:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6370:40:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1070,
																				"indexExpression": {
																					"id": 1069,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "6411:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6370:43:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1071,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "6417:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "6370:61:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1095,
																		"nodeType": "IfStatement",
																		"src": "6366:327:7",
																		"trueBody": {
																			"id": 1094,
																			"nodeType": "Block",
																			"src": "6433:260:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1073,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "6455:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1076,
																								"indexExpression": {
																									"id": 1074,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1039,
																									"src": "6484:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6455:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1077,
																							"indexExpression": {
																								"id": 1075,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1057,
																								"src": "6496:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "6455:43:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1078,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "6521:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1080,
																								"indexExpression": {
																									"id": 1079,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1039,
																									"src": "6550:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6521:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1084,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1083,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1081,
																									"name": "topicsLength",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1050,
																									"src": "6562:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1082,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6577:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "6562:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6521:58:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"src": "6455:124:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																							"typeString": "contract IClaimIssuer"
																						}
																					},
																					"id": 1086,
																					"nodeType": "ExpressionStatement",
																					"src": "6455:124:7"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"baseExpression": {
																									"id": 1087,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "6601:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1089,
																								"indexExpression": {
																									"id": 1088,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1039,
																									"src": "6630:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6601:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6642:3:7",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "6601:44:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																								"typeString": "function (contract IClaimIssuer[] storage pointer)"
																							}
																						},
																						"id": 1091,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6601:46:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1092,
																					"nodeType": "ExpressionStatement",
																					"src": "6601:46:7"
																				},
																				{
																					"id": 1093,
																					"nodeType": "Break",
																					"src": "6669:5:7"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1060,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6325:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1061,
																	"name": "topicsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "6329:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6325:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1097,
															"initializationExpression": {
																"assignments": [
																	1057
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1057,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6318:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1097,
																		"src": "6310:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1056,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6310:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1059,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6322:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6310:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6343:3:7",
																	"subExpression": {
																		"id": 1063,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "6343:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1065,
																"nodeType": "ExpressionStatement",
																"src": "6343:3:7"
															},
															"nodeType": "ForStatement",
															"src": "6305:402:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "claimTopicIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5997:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1027,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "6015:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1032,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1030,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "6049:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6041:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6041:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6041:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6015:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6066:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6015:57:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5997:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"initializationExpression": {
													"assignments": [
														1023
													],
													"declarations": [
														{
															"constant": false,
															"id": 1023,
															"mutability": "mutable",
															"name": "claimTopicIndex",
															"nameLocation": "5964:15:7",
															"nodeType": "VariableDeclaration",
															"scope": 1099,
															"src": "5956:23:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1022,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5956:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1025,
													"initialValue": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5982:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5956:27:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6086:17:7",
														"subExpression": {
															"id": 1035,
															"name": "claimTopicIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "6086:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1037,
													"nodeType": "ExpressionStatement",
													"src": "6086:17:7"
												},
												"nodeType": "ForStatement",
												"src": "5938:779:7"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6726:57:7",
													"subExpression": {
														"baseExpression": {
															"id": 1100,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6733:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1105,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1103,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "6767:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6759:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6759:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6759:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6733:50:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "6726:57:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1109,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "6819:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														],
														"id": 1108,
														"name": "TrustedIssuerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "6798:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$returns$__$",
															"typeString": "function (contract IClaimIssuer)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6798:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "EmitStatement",
												"src": "6793:41:7"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "5262:75:7",
										"text": "  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}."
									},
									"functionSelector": "b93d28eb",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 954,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 953,
												"name": "onlyOwner",
												"nameLocations": [
													"5418:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "5418:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5418:9:7"
										}
									],
									"name": "removeTrustedIssuer",
									"nameLocation": "5351:19:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5409:8:7"
									},
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "5384:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5371:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 948,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5371:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5371:12:7"
													},
													"referencedDeclaration": 49,
													"src": "5371:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5370:29:7"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5428:0:7"
									},
									"scope": 1417,
									"src": "5342:1499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1471
									],
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "7054:1346:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1129,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7080:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7072:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7072:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7107:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7099:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1131,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7099:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7099:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7072:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7111:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7064:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "7064:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1140,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "7163:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1145,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1143,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "7197:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7189:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7189:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7189:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7163:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7214:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7163:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7224:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7163:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542061207472757374656420697373756572",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7227:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															},
															"value": "NOT a trusted issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															}
														],
														"id": 1139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7155:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7155:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "7155:95:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1153,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "7268:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7281:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7268:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3135",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7291:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "7268:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7295:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															},
															"value": "cannot have more than 15 claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															}
														],
														"id": 1152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7260:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7260:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "7260:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1161,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "7353:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7366:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7353:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7375:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7353:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d20746f706963732063616e6e6f7420626520656d707479",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36",
																"typeString": "literal_string \"claim topics cannot be empty\""
															},
															"value": "claim topics cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36",
																"typeString": "literal_string \"claim topics cannot be empty\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7345:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7345:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "7345:64:7"
											},
											{
												"body": {
													"id": 1244,
													"nodeType": "Block",
													"src": "7508:598:7",
													"statements": [
														{
															"assignments": [
																1185
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1185,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "7530:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "7522:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1184,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7522:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1194,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1186,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "7543:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1191,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1189,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "7577:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7569:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1187,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7569:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7569:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7543:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1193,
																"indexExpression": {
																	"id": 1192,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "7594:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7543:53:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7522:74:7"
														},
														{
															"assignments": [
																1196
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1196,
																	"mutability": "mutable",
																	"name": "topicsLength",
																	"nameLocation": "7618:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "7610:20:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1195,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7610:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1197,
																		"name": "_claimTopicsToTrustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "7633:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																			"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																		}
																	},
																	"id": 1199,
																	"indexExpression": {
																		"id": 1198,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "7662:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7633:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7674:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7633:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7610:70:7"
														},
														{
															"body": {
																"id": 1242,
																"nodeType": "Block",
																"src": "7737:359:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																				"typeString": "contract IClaimIssuer"
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1212,
																						"name": "_claimTopicsToTrustedIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1539,
																						"src": "7759:28:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 1214,
																					"indexExpression": {
																						"id": 1213,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1185,
																						"src": "7788:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7759:40:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1216,
																				"indexExpression": {
																					"id": 1215,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1203,
																					"src": "7800:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7759:43:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1217,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "7806:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "7759:61:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1241,
																		"nodeType": "IfStatement",
																		"src": "7755:327:7",
																		"trueBody": {
																			"id": 1240,
																			"nodeType": "Block",
																			"src": "7822:260:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1219,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "7844:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1222,
																								"indexExpression": {
																									"id": 1220,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1185,
																									"src": "7873:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7844:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1223,
																							"indexExpression": {
																								"id": 1221,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1203,
																								"src": "7885:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "7844:43:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1224,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "7910:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1226,
																								"indexExpression": {
																									"id": 1225,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1185,
																									"src": "7939:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7910:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1230,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1229,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1227,
																									"name": "topicsLength",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1196,
																									"src": "7951:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1228,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7966:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "7951:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7910:58:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"src": "7844:124:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																							"typeString": "contract IClaimIssuer"
																						}
																					},
																					"id": 1232,
																					"nodeType": "ExpressionStatement",
																					"src": "7844:124:7"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"baseExpression": {
																									"id": 1233,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1539,
																									"src": "7990:28:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1235,
																								"indexExpression": {
																									"id": 1234,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1185,
																									"src": "8019:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7990:40:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8031:3:7",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "7990:44:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																								"typeString": "function (contract IClaimIssuer[] storage pointer)"
																							}
																						},
																						"id": 1237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7990:46:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1238,
																					"nodeType": "ExpressionStatement",
																					"src": "7990:46:7"
																				},
																				{
																					"id": 1239,
																					"nodeType": "Break",
																					"src": "8058:5:7"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1206,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "7714:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1207,
																	"name": "topicsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7718:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7714:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1243,
															"initializationExpression": {
																"assignments": [
																	1203
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1203,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "7707:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1243,
																		"src": "7699:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1202,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7699:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1205,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7711:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7699:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7732:3:7",
																	"subExpression": {
																		"id": 1209,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "7732:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1211,
																"nodeType": "ExpressionStatement",
																"src": "7732:3:7"
															},
															"nodeType": "ForStatement",
															"src": "7694:402:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "7440:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1173,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "7444:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1178,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7478:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7470:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7470:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7470:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7444:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7495:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7444:57:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7440:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"initializationExpression": {
													"assignments": [
														1169
													],
													"declarations": [
														{
															"constant": false,
															"id": 1169,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7433:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1245,
															"src": "7425:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1168,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7425:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1171,
													"initialValue": {
														"hexValue": "30",
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7437:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7425:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7503:3:7",
														"subExpression": {
															"id": 1181,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "7503:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1183,
													"nodeType": "ExpressionStatement",
													"src": "7503:3:7"
												},
												"nodeType": "ForStatement",
												"src": "7420:686:7"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1246,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "8115:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1251,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "8149:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8141:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8141:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8141:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8115:50:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1252,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "8168:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "8115:65:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "8115:65:7"
											},
											{
												"body": {
													"id": 1275,
													"nodeType": "Block",
													"src": "8240:91:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1272,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "8305:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1266,
																			"name": "_claimTopicsToTrustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "8254:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 1270,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1267,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1120,
																				"src": "8283:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1269,
																			"indexExpression": {
																				"id": 1268,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "8296:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8283:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8254:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8300:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8254:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$49_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8254:66:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "8254:66:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1259,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "8210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1260,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "8214:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8227:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8214:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8210:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"initializationExpression": {
													"assignments": [
														1256
													],
													"declarations": [
														{
															"constant": false,
															"id": 1256,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8203:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1276,
															"src": "8195:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1255,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8195:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1258,
													"initialValue": {
														"hexValue": "30",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8207:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8195:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8235:3:7",
														"subExpression": {
															"id": 1263,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "8235:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1265,
													"nodeType": "ExpressionStatement",
													"src": "8235:3:7"
												},
												"nodeType": "ForStatement",
												"src": "8190:141:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1278,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "8364:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 1279,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "8380:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1277,
														"name": "ClaimTopicsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "8345:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$49_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8345:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "EmitStatement",
												"src": "8340:53:7"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "6847:79:7",
										"text": "  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."
									},
									"functionSelector": "04bc7e84",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1123,
												"name": "onlyOwner",
												"nameLocations": [
													"7044:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 413,
												"src": "7044:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7044:9:7"
										}
									],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "6940:23:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7035:8:7"
									},
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6977:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6964:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1115,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6964:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6964:12:7"
													},
													"referencedDeclaration": 49,
													"src": "6964:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "7012:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6993:31:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1118,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6993:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1119,
													"nodeType": "ArrayTypeName",
													"src": "6993:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6963:62:7"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7054:0:7"
									},
									"scope": 1417,
									"src": "6931:1469:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1479
									],
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "8568:39:7",
										"statements": [
											{
												"expression": {
													"id": 1292,
													"name": "_trustedIssuers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1526,
													"src": "8585:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1293,
												"nodeType": "Return",
												"src": "8578:22:7"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "8406:73:7",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}."
									},
									"functionSelector": "d9dd24c5",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "8493:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1286,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8527:8:7"
									},
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8510:2:7"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "8545:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1288,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1287,
															"name": "IClaimIssuer",
															"nameLocations": [
																"8545:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "8545:12:7"
														},
														"referencedDeclaration": 49,
														"src": "8545:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1289,
													"nodeType": "ArrayTypeName",
													"src": "8545:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8544:23:7"
									},
									"scope": 1417,
									"src": "8484:123:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1489
									],
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "8819:64:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1306,
														"name": "_claimTopicsToTrustedIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "8836:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
															"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
														}
													},
													"id": 1308,
													"indexExpression": {
														"id": 1307,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "8865:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8836:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1309,
												"nodeType": "Return",
												"src": "8829:47:7"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "8613:86:7",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."
									},
									"functionSelector": "52c111d1",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "8713:30:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1300,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8778:8:7"
									},
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "8752:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "8744:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:20:7"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "8796:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1301,
															"name": "IClaimIssuer",
															"nameLocations": [
																"8796:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "8796:12:7"
														},
														"referencedDeclaration": 49,
														"src": "8796:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "8796:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8795:23:7"
									},
									"scope": 1417,
									"src": "8704:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1497
									],
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "9045:124:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1320,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "9058:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1322,
															"indexExpression": {
																"id": 1321,
																"name": "_issuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "9084:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9058:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9093:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9058:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9102:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9058:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "9055:86:7",
												"trueBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "9105:36:7",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9126:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1319,
															"id": 1327,
															"nodeType": "Return",
															"src": "9119:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9157:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1319,
												"id": 1331,
												"nodeType": "Return",
												"src": "9150:12:7"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "8889:71:7",
										"text": "  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}."
									},
									"functionSelector": "ef2ed1a4",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "8974:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9021:8:7"
									},
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "8998:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "8990:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8989:17:7"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "9039:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:6:7"
									},
									"scope": 1417,
									"src": "8965:204:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1507
									],
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "9379:188:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1345,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "9397:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1350,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1348,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "9431:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9423:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1346,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9423:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9423:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9397:50:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9448:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9397:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9458:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9397:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "747275737465642049737375657220646f65736e2774206578697374",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9461:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730",
																"typeString": "literal_string \"trusted Issuer doesn't exist\""
															},
															"value": "trusted Issuer doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730",
																"typeString": "literal_string \"trusted Issuer doesn't exist\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9389:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9389:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "9389:104:7"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1357,
														"name": "_trustedIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "9510:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1362,
													"indexExpression": {
														"arguments": [
															{
																"id": 1360,
																"name": "_trustedIssuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "9544:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IClaimIssuer_$49",
																	"typeString": "contract IClaimIssuer"
																}
															],
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9536:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1358,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9536:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9536:23:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9510:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1363,
												"nodeType": "Return",
												"src": "9503:57:7"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "9175:83:7",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."
									},
									"functionSelector": "c28fb278",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "9272:27:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1339,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9343:8:7"
									},
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "9313:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "9300:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1335,
														"name": "IClaimIssuer",
														"nameLocations": [
															"9300:12:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "9300:12:7"
													},
													"referencedDeclaration": 49,
													"src": "9300:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9299:29:7"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "9361:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1340,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9361:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1341,
													"nodeType": "ArrayTypeName",
													"src": "9361:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9360:18:7"
									},
									"scope": 1417,
									"src": "9263:304:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1517
									],
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "9746:321:7",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "9764:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "9756:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9756:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1382,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1378,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "9773:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1380,
														"indexExpression": {
															"id": 1379,
															"name": "_issuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "9799:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9773:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9808:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9773:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9756:58:7"
											},
											{
												"assignments": [
													1387
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "claimTopics",
														"nameLocation": "9841:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "9824:28:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1385,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9824:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1386,
															"nodeType": "ArrayTypeName",
															"src": "9824:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"baseExpression": {
														"id": 1388,
														"name": "_trustedIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "9855:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1390,
													"indexExpression": {
														"id": 1389,
														"name": "_issuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "9881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9855:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9824:65:7"
											},
											{
												"body": {
													"id": 1411,
													"nodeType": "Block",
													"src": "9936:103:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1402,
																		"name": "claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "9954:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1404,
																	"indexExpression": {
																		"id": 1403,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "9966:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9954:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1405,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "9972:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9954:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1410,
															"nodeType": "IfStatement",
															"src": "9950:79:7",
															"trueBody": {
																"id": 1409,
																"nodeType": "Block",
																"src": "9985:44:7",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10010:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1375,
																		"id": 1408,
																		"nodeType": "Return",
																		"src": "10003:11:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "9919:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1397,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "9923:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9919:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1412,
												"initializationExpression": {
													"assignments": [
														1393
													],
													"declarations": [
														{
															"constant": false,
															"id": 1393,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9912:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1412,
															"src": "9904:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1392,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9904:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1395,
													"initialValue": {
														"hexValue": "30",
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9916:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9904:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9931:3:7",
														"subExpression": {
															"id": 1399,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "9931:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1401,
													"nodeType": "ExpressionStatement",
													"src": "9931:3:7"
												},
												"nodeType": "ForStatement",
												"src": "9899:140:7"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10055:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1375,
												"id": 1414,
												"nodeType": "Return",
												"src": "10048:12:7"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "9573:69:7",
										"text": "  @dev See {ITrustedIssuersRegistry-hasClaimTopic}."
									},
									"functionSelector": "34a89987",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "9656:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9722:8:7"
									},
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "9678:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9670:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "9695:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9687:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9687:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9669:38:7"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "9740:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9739:6:7"
									},
									"scope": 1417,
									"src": "9647:420:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1418,
							"src": "4076:5993:7",
							"usedErrors": [
								354,
								359,
								534,
								537
							]
						}
					],
					"src": "3818:6252:7"
				},
				"id": 7
			},
			"contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"ITrustedIssuersRegistry": [
							1518
						]
					},
					"id": 1519,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:8"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1519,
							"sourceUnit": 50,
							"src": "3843:67:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1518,
							"linearizedBaseContracts": [
								1518
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "3922:23:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "3952:321:8",
										"text": "  this event is emitted when a trusted issuer is added in the registry.\n  the event is emitted by the addTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 1429,
									"name": "TrustedIssuerAdded",
									"nameLocation": "4284:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4324:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4303:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4303:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4303:12:8"
													},
													"referencedDeclaration": 49,
													"src": "4303:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "4349:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4339:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1425,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4339:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1426,
													"nodeType": "ArrayTypeName",
													"src": "4339:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:59:8"
									},
									"src": "4278:84:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "4368:242:8",
										"text": "  this event is emitted when a trusted issuer is removed from the registry.\n  the event is emitted by the removeTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
									},
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 1435,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "4621:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4663:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "4642:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1432,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1431,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4642:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "4642:12:8"
													},
													"referencedDeclaration": 49,
													"src": "4642:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4641:36:8"
									},
									"src": "4615:63:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "4684:348:8",
										"text": "  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 1444,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "5043:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "5083:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "5062:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1438,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1437,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5062:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5062:12:8"
													},
													"referencedDeclaration": 49,
													"src": "5062:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "5108:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "5098:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5098:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "5098:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:59:8"
									},
									"src": "5037:84:8"
								},
								{
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "5127:651:8",
										"text": "  @dev registers a ClaimIssuer contract as trusted claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Trusted issuers\n  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerAdded` event"
									},
									"functionSelector": "9f63ea98",
									"id": 1454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "5792:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "5822:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "5809:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1446,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5809:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "5809:12:8"
													},
													"referencedDeclaration": 49,
													"src": "5809:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "5857:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "5838:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1449,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5838:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1450,
													"nodeType": "ArrayTypeName",
													"src": "5838:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:62:8"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5879:0:8"
									},
									"scope": 1518,
									"src": "5783:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "5886:353:8",
										"text": "  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _trustedIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerRemoved` event"
									},
									"functionSelector": "b93d28eb",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "6253:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6286:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "6273:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1456,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6273:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6273:12:8"
													},
													"referencedDeclaration": 49,
													"src": "6273:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:29:8"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:0:8"
									},
									"scope": 1518,
									"src": "6244:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "6317:591:8",
										"text": "  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _trustedIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"
									},
									"functionSelector": "04bc7e84",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "6922:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6959:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "6946:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1463,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6946:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "6946:12:8"
													},
													"referencedDeclaration": 49,
													"src": "6946:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "6994:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "6975:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1466,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6975:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1467,
													"nodeType": "ArrayTypeName",
													"src": "6975:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:62:8"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7016:0:8"
									},
									"scope": 1518,
									"src": "6913:104:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "7023:138:8",
										"text": "  @dev Function for getting all the trusted claim issuers stored.\n  @return array of all claim issuers registered."
									},
									"functionSelector": "d9dd24c5",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "7175:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7192:2:8"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "7218:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1475,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1474,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7218:12:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "7218:12:8"
														},
														"referencedDeclaration": 49,
														"src": "7218:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1476,
													"nodeType": "ArrayTypeName",
													"src": "7218:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:23:8"
									},
									"scope": 1518,
									"src": "7166:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "7247:271:8",
										"text": "  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the trusted issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."
									},
									"functionSelector": "52c111d1",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "7532:30:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "7571:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "7563:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7562:20:8"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "7606:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1485,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1484,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7606:12:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 49,
															"src": "7606:12:8"
														},
														"referencedDeclaration": 49,
														"src": "7606:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$49",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1486,
													"nodeType": "ArrayTypeName",
													"src": "7606:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:23:8"
									},
									"scope": 1518,
									"src": "7523:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "7635:197:8",
										"text": "  @dev Checks if the ClaimIssuer contract is trusted\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is trusted, false otherwise."
									},
									"functionSelector": "ef2ed1a4",
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "7846:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "7870:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7862:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:17:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7902:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7902:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:6:8"
									},
									"scope": 1518,
									"src": "7837:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "7914:333:8",
										"text": "  @dev Function for getting all the claim topic of trusted claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n  @param _trustedIssuer the trusted issuer concerned.\n  @return The set of claim topics that the trusted issuer is allowed to emit"
									},
									"functionSelector": "c28fb278",
									"id": 1507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "8261:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "8302:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "8289:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1499,
														"name": "IClaimIssuer",
														"nameLocations": [
															"8289:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "8289:12:8"
													},
													"referencedDeclaration": 49,
													"src": "8289:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$49",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8288:29:8"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "8341:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1503,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8341:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1504,
													"nodeType": "ArrayTypeName",
													"src": "8341:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:18:8"
									},
									"scope": 1518,
									"src": "8252:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "8365:383:8",
										"text": "  @dev Function for checking if the trusted claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is trusted for this claim topic."
									},
									"functionSelector": "34a89987",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "8762:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "8784:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8776:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "8801:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8793:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8793:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8775:38:8"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8837:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8837:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:6:8"
									},
									"scope": 1518,
									"src": "8753:90:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1519,
							"src": "3912:4933:8",
							"usedErrors": []
						}
					],
					"src": "3818:5028:8"
				},
				"id": 8
			},
			"contracts t-rex/registry/storage/TIRStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/storage/TIRStorage.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							49
						],
						"IERC734": [
							196
						],
						"IERC735": [
							304
						],
						"IIdentity": [
							328
						],
						"TIRStorage": [
							1545
						]
					},
					"id": 1546,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1520,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:9"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1546,
							"sourceUnit": 50,
							"src": "3843:67:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TIRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1545,
							"linearizedBaseContracts": [
								1545
							],
							"name": "TIRStorage",
							"nameLocation": "3921:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "3938:71:9",
										"text": "@dev Array containing all TrustedIssuers identity contract address."
									},
									"id": 1526,
									"mutability": "mutable",
									"name": "_trustedIssuers",
									"nameLocation": "4038:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "4014:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage",
										"typeString": "contract IClaimIssuer[]"
									},
									"typeName": {
										"baseType": {
											"id": 1524,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1523,
												"name": "IClaimIssuer",
												"nameLocations": [
													"4014:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "4014:12:9"
											},
											"referencedDeclaration": 49,
											"src": "4014:12:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IClaimIssuer_$49",
												"typeString": "contract IClaimIssuer"
											}
										},
										"id": 1525,
										"nodeType": "ArrayTypeName",
										"src": "4014:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
											"typeString": "contract IClaimIssuer[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "4060:84:9",
										"text": "@dev Mapping between a trusted issuer address and its corresponding claimTopics."
									},
									"id": 1532,
									"mutability": "mutable",
									"name": "_trustedIssuerClaimTopics",
									"nameLocation": "4188:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "4149:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1531,
										"keyType": {
											"id": 1528,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4157:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4149:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4168:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1530,
											"nodeType": "ArrayTypeName",
											"src": "4168:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "4220:78:9",
										"text": "@dev Mapping between a claim topic and the allowed trusted issuers for it."
									},
									"id": 1539,
									"mutability": "mutable",
									"name": "_claimTopicsToTrustedIssuers",
									"nameLocation": "4347:28:9",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "4303:72:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
										"typeString": "mapping(uint256 => contract IClaimIssuer[])"
									},
									"typeName": {
										"id": 1538,
										"keyType": {
											"id": 1534,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4311:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4303:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_$",
											"typeString": "mapping(uint256 => contract IClaimIssuer[])"
										},
										"valueType": {
											"baseType": {
												"id": 1536,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1535,
													"name": "IClaimIssuer",
													"nameLocations": [
														"4322:12:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 49,
													"src": "4322:12:9"
												},
												"referencedDeclaration": 49,
												"src": "4322:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$49",
													"typeString": "contract IClaimIssuer"
												}
											},
											"id": 1537,
											"nodeType": "ArrayTypeName",
											"src": "4322:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$49_$dyn_storage_ptr",
												"typeString": "contract IClaimIssuer[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "4382:174:9",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
									},
									"id": 1544,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4581:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "4561:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1541,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4561:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1543,
										"length": {
											"hexValue": "3439",
											"id": 1542,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4569:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "4561:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1546,
							"src": "3912:677:9",
							"usedErrors": []
						}
					],
					"src": "3818:772:9"
				},
				"id": 9
			}
		}
	}
}