{
	"id": "60074e7c24bc2694baddbf7ffff9a6d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts t-rex/registry/storage/CTRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny s√†rl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ncontract CTRStorage {\n    /// @dev All required Claim Topics\n    uint256[] internal _claimTopics;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"contracts t-rex/registry/storage/CTRStorage.sol": {
				"CTRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain."
							},
							"_claimTopics": {
								"details": "All required Claim Topics"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts t-rex/registry/storage/CTRStorage.sol\":3843:4153  contract CTRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts t-rex/registry/storage/CTRStorage.sol\":3843:4153  contract CTRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e9e9ebb04b781244b0a2f2192823fb58564cb5cffa18f02e2394fa1406e2b164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b4e9e9ebb04b781244b0a2f2192823fb58564cb5cffa18f02e2394fa1406e2b164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 0xE9 0xEB 0xB0 0x4B PUSH25 0x1244B0A2F2192823FB58564CB5CFFA18F02E2394FA1406E2B1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3843:310:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b4e9e9ebb04b781244b0a2f2192823fb58564cb5cffa18f02e2394fa1406e2b164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 0xE9 0xEB 0xB0 0x4B PUSH25 0x1244B0A2F2192823FB58564CB5CFFA18F02E2394FA1406E2B1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3843:310:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 4153,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e9e9ebb04b781244b0a2f2192823fb58564cb5cffa18f02e2394fa1406e2b164736f6c63430008110033",
									".code": [
										{
											"begin": 3843,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3843,
											"end": 4153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 4153,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts t-rex/registry/storage/CTRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"},\"_claimTopics\":{\"details\":\"All required Claim Topics\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts t-rex/registry/storage/CTRStorage.sol\":\"CTRStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts t-rex/registry/storage/CTRStorage.sol\":{\"keccak256\":\"0xee2fc57419e8455c167ae9dbbca946b16456353161933f94fb9403beaf06a95b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://59a52f39f953cf35f2e6d2036e97a657be534d7131f10901c434e542aa643fd7\",\"dweb:/ipfs/QmYRTVatp8oqBUjU4Kah8ZmRnjo1EJ8V7qJFowbJJ117dB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts t-rex/registry/storage/CTRStorage.sol:CTRStorage",
								"label": "_claimTopics",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 10,
								"contract": "contracts t-rex/registry/storage/CTRStorage.sol:CTRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts t-rex/registry/storage/CTRStorage.sol": {
				"ast": {
					"absolutePath": "contracts t-rex/registry/storage/CTRStorage.sol",
					"exportedSymbols": {
						"CTRStorage": [
							11
						]
					},
					"id": 12,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CTRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "CTRStorage",
							"nameLocation": "3852:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "3869:34:0",
										"text": "@dev All required Claim Topics"
									},
									"id": 5,
									"mutability": "mutable",
									"name": "_claimTopics",
									"nameLocation": "3927:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "3908:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3908:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 4,
										"nodeType": "ArrayTypeName",
										"src": "3908:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "3946:174:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
									},
									"id": 10,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "4125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 7,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 9,
										"length": {
											"hexValue": "3439",
											"id": 8,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "4125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 12,
							"src": "3843:310:0",
							"usedErrors": []
						}
					],
					"src": "3818:335:0"
				},
				"id": 0
			}
		}
	}
}